<?xml version="1.0" encoding="utf-8"?>
<xs:schema xmlns="rimworld" elementFormDefault="qualified" targetNamespace="rimworld" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:element name="Defs">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="HugsLib.UpdateFeatureDef" type="HugsLib.UpdateFeatureDef" />
        <xs:element name="AbilityCategoryDef" type="RimWorld.AbilityCategoryDef" />
        <xs:element name="AbilityDef" type="RimWorld.AbilityDef" />
        <xs:element name="AbilityGroupDef" type="RimWorld.AbilityGroupDef" />
        <xs:element name="BabyPlayDef" type="RimWorld.BabyPlayDef" />
        <xs:element name="BackstoryDef" type="RimWorld.BackstoryDef" />
        <xs:element name="BeardDef" type="RimWorld.BeardDef" />
        <xs:element name="BillRepeatModeDef" type="RimWorld.BillRepeatModeDef" />
        <xs:element name="BillStoreModeDef" type="RimWorld.BillStoreModeDef" />
        <xs:element name="BiomeDef" type="RimWorld.BiomeDef" />
        <xs:element name="BodyTypeDef" type="RimWorld.BodyTypeDef" />
        <xs:element name="BossDef" type="RimWorld.BossDef" />
        <xs:element name="BossgroupDef" type="RimWorld.BossgroupDef" />
        <xs:element name="ChemicalDef" type="RimWorld.ChemicalDef" />
        <xs:element name="ColorDef" type="RimWorld.ColorDef" />
        <xs:element name="ComplexDef" type="RimWorld.ComplexDef" />
        <xs:element name="ComplexRoomDef" type="RimWorld.ComplexRoomDef" />
        <xs:element name="ComplexThreatDef" type="RimWorld.ComplexThreatDef" />
        <xs:element name="ConceptDef" type="RimWorld.ConceptDef" />
        <xs:element name="CultureDef" type="RimWorld.CultureDef" />
        <xs:element name="DifficultyDef" type="RimWorld.DifficultyDef" />
        <xs:element name="DrugPolicyDef" type="RimWorld.DrugPolicyDef" />
        <xs:element name="ExpansionDef" type="RimWorld.ExpansionDef" />
        <xs:element name="ExpectationDef" type="RimWorld.ExpectationDef" />
        <xs:element name="FactionDef" type="RimWorld.FactionDef" />
        <xs:element name="FeatureDef" type="RimWorld.FeatureDef" />
        <xs:element name="FleshTypeDef" type="RimWorld.FleshTypeDef" />
        <xs:element name="FurDef" type="RimWorld.FurDef" />
        <xs:element name="GatheringDef" type="RimWorld.GatheringDef" />
        <xs:element name="GauranlenTreeModeDef" type="RimWorld.GauranlenTreeModeDef" />
        <xs:element name="GeneTemplateDef" type="RimWorld.GeneTemplateDef" />
        <xs:element name="GoodwillSituationDef" type="RimWorld.GoodwillSituationDef" />
        <xs:element name="HairDef" type="RimWorld.HairDef" />
        <xs:element name="HediffGiverSetDef" type="RimWorld.HediffGiverSetDef" />
        <xs:element name="HibernatableStateDef" type="RimWorld.HibernatableStateDef" />
        <xs:element name="HistoryAutoRecorderDef" type="RimWorld.HistoryAutoRecorderDef" />
        <xs:element name="HistoryAutoRecorderGroupDef" type="RimWorld.HistoryAutoRecorderGroupDef" />
        <xs:element name="HistoryEventDef" type="RimWorld.HistoryEventDef" />
        <xs:element name="IdeoColorDef" type="RimWorld.IdeoColorDef" />
        <xs:element name="IdeoFoundationDef" type="RimWorld.IdeoFoundationDef" />
        <xs:element name="IdeoIconDef" type="RimWorld.IdeoIconDef" />
        <xs:element name="IdeoPresetCategoryDef" type="RimWorld.IdeoPresetCategoryDef" />
        <xs:element name="IdeoPresetDef" type="RimWorld.IdeoPresetDef" />
        <xs:element name="IdeoSymbolPartDef" type="RimWorld.IdeoSymbolPartDef" />
        <xs:element name="IncidentCategoryDef" type="RimWorld.IncidentCategoryDef" />
        <xs:element name="IncidentDef" type="RimWorld.IncidentDef" />
        <xs:element name="IncidentTargetTagDef" type="RimWorld.IncidentTargetTagDef" />
        <xs:element name="InspirationDef" type="RimWorld.InspirationDef" />
        <xs:element name="InstructionDef" type="RimWorld.InstructionDef" />
        <xs:element name="InteractionDef" type="RimWorld.InteractionDef" />
        <xs:element name="IssueDef" type="RimWorld.IssueDef" />
        <xs:element name="JoyGiverDef" type="RimWorld.JoyGiverDef" />
        <xs:element name="JoyKindDef" type="RimWorld.JoyKindDef" />
        <xs:element name="LearningDesireDef" type="RimWorld.LearningDesireDef" />
        <xs:element name="LifeStageDef" type="RimWorld.LifeStageDef" />
        <xs:element name="MainButtonDef" type="RimWorld.MainButtonDef" />
        <xs:element name="MeditationFocusDef" type="RimWorld.MeditationFocusDef" />
        <xs:element name="MemeDef" type="RimWorld.MemeDef" />
        <xs:element name="MemeGroupDef" type="RimWorld.MemeGroupDef" />
        <xs:element name="NeedDef" type="RimWorld.NeedDef" />
        <xs:element name="PawnColumnDef" type="RimWorld.PawnColumnDef" />
        <xs:element name="PawnGroupKindDef" type="RimWorld.PawnGroupKindDef" />
        <xs:element name="PawnRelationDef" type="RimWorld.PawnRelationDef" />
        <xs:element name="PawnsArrivalModeDef" type="RimWorld.PawnsArrivalModeDef" />
        <xs:element name="PawnTableDef" type="RimWorld.PawnTableDef" />
        <xs:element name="PreceptDef" type="RimWorld.PreceptDef" />
        <xs:element name="PrisonerInteractionModeDef" type="RimWorld.PrisonerInteractionModeDef" />
        <xs:element name="QuestScriptDef" type="RimWorld.QuestScriptDef" />
        <xs:element name="RaidAgeRestrictionDef" type="RimWorld.RaidAgeRestrictionDef" />
        <xs:element name="RaidStrategyDef" type="RimWorld.RaidStrategyDef" />
        <xs:element name="RecordDef" type="RimWorld.RecordDef" />
        <xs:element name="ResearchTabDef" type="RimWorld.ResearchTabDef" />
        <xs:element name="RitualAttachableOutcomeEffectDef" type="RimWorld.RitualAttachableOutcomeEffectDef" />
        <xs:element name="RitualBehaviorDef" type="RimWorld.RitualBehaviorDef" />
        <xs:element name="RitualObligationTargetFilterDef" type="RimWorld.RitualObligationTargetFilterDef" />
        <xs:element name="RitualOutcomeEffectDef" type="RimWorld.RitualOutcomeEffectDef" />
        <xs:element name="RitualPatternDef" type="RimWorld.RitualPatternDef" />
        <xs:element name="RitualTargetFilterDef" type="RimWorld.RitualTargetFilterDef" />
        <xs:element name="RitualVisualEffectDef" type="RimWorld.RitualVisualEffectDef" />
        <xs:element name="RiverDef" type="RimWorld.RiverDef" />
        <xs:element name="RoadDef" type="RimWorld.RoadDef" />
        <xs:element name="RoadPathingDef" type="RimWorld.RoadPathingDef" />
        <xs:element name="RoadWorldLayerDef" type="RimWorld.RoadWorldLayerDef" />
        <xs:element name="RoyalTitleDef" type="RimWorld.RoyalTitleDef" />
        <xs:element name="RoyalTitlePermitDef" type="RimWorld.RoyalTitlePermitDef" />
        <xs:element name="RuleDef" type="RimWorld.RuleDef" />
        <xs:element name="ScenarioDef" type="RimWorld.ScenarioDef" />
        <xs:element name="ScenPartDef" type="RimWorld.ScenPartDef" />
        <xs:element name="ShipJobDef" type="RimWorld.ShipJobDef" />
        <xs:element name="SitePartDef" type="RimWorld.SitePartDef" />
        <xs:element name="SketchResolverDef" type="RimWorld.SketchResolverDef" />
        <xs:element name="SkillDef" type="RimWorld.SkillDef" />
        <xs:element name="SlaveInteractionModeDef" type="RimWorld.SlaveInteractionModeDef" />
        <xs:element name="StatCategoryDef" type="RimWorld.StatCategoryDef" />
        <xs:element name="StatDef" type="RimWorld.StatDef" />
        <xs:element name="StorytellerDef" type="RimWorld.StorytellerDef" />
        <xs:element name="StuffCategoryDef" type="RimWorld.StuffCategoryDef" />
        <xs:element name="StyleItemCategoryDef" type="RimWorld.StyleItemCategoryDef" />
        <xs:element name="SurgeryOutcomeEffectDef" type="RimWorld.SurgeryOutcomeEffectDef" />
        <xs:element name="TaleDef" type="RimWorld.TaleDef" />
        <xs:element name="TattooDef" type="RimWorld.TattooDef" />
        <xs:element name="TerrainTemplateDef" type="RimWorld.TerrainTemplateDef" />
        <xs:element name="ThingSetMakerDef" type="RimWorld.ThingSetMakerDef" />
        <xs:element name="ThoughtDef" type="RimWorld.ThoughtDef" />
        <xs:element name="TimeAssignmentDef" type="RimWorld.TimeAssignmentDef" />
        <xs:element name="TraderKindDef" type="RimWorld.TraderKindDef" />
        <xs:element name="TrainableDef" type="RimWorld.TrainableDef" />
        <xs:element name="TraitDef" type="RimWorld.TraitDef" />
        <xs:element name="TransferableSorterDef" type="RimWorld.TransferableSorterDef" />
        <xs:element name="TransportShipDef" type="RimWorld.TransportShipDef" />
        <xs:element name="WeaponTraitDef" type="RimWorld.WeaponTraitDef" />
        <xs:element name="WorkGiverDef" type="RimWorld.WorkGiverDef" />
        <xs:element name="WorkGiverEquivalenceGroupDef" type="RimWorld.WorkGiverEquivalenceGroupDef" />
        <xs:element name="WorldObjectDef" type="RimWorld.WorldObjectDef" />
        <xs:element name="XenotypeDef" type="RimWorld.XenotypeDef" />
        <xs:element name="XenotypeIconDef" type="RimWorld.XenotypeIconDef" />
        <xs:element name="Verse.AI.DutyDef" type="Verse.AI.DutyDef" />
        <xs:element name="ApparelLayerDef" type="Verse.ApparelLayerDef" />
        <xs:element name="BodyDef" type="Verse.BodyDef" />
        <xs:element name="BodyPartDef" type="Verse.BodyPartDef" />
        <xs:element name="BodyPartGroupDef" type="Verse.BodyPartGroupDef" />
        <xs:element name="BodyPartTagDef" type="Verse.BodyPartTagDef" />
        <xs:element name="ClamorDef" type="Verse.ClamorDef" />
        <xs:element name="DamageArmorCategoryDef" type="Verse.DamageArmorCategoryDef" />
        <xs:element name="DamageDef" type="Verse.DamageDef" />
        <xs:element name="DebugTabMenuDef" type="Verse.DebugTabMenuDef" />
        <xs:element name="DesignationCategoryDef" type="Verse.DesignationCategoryDef" />
        <xs:element name="DesignationDef" type="Verse.DesignationDef" />
        <xs:element name="DesignatorDropdownGroupDef" type="Verse.DesignatorDropdownGroupDef" />
        <xs:element name="EffecterDef" type="Verse.EffecterDef" />
        <xs:element name="FleckDef" type="Verse.FleckDef" />
        <xs:element name="GameConditionDef" type="Verse.GameConditionDef" />
        <xs:element name="GeneCategoryDef" type="Verse.GeneCategoryDef" />
        <xs:element name="GeneDef" type="Verse.GeneDef" />
        <xs:element name="GenStepDef" type="Verse.GenStepDef" />
        <xs:element name="HeadTypeDef" type="Verse.HeadTypeDef" />
        <xs:element name="HediffDef" type="Verse.HediffDef" />
        <xs:element name="IdeoStoryPatternDef" type="Verse.IdeoStoryPatternDef" />
        <xs:element name="ImplementOwnerTypeDef" type="Verse.ImplementOwnerTypeDef" />
        <xs:element name="InventoryStockGroupDef" type="Verse.InventoryStockGroupDef" />
        <xs:element name="JobDef" type="Verse.JobDef" />
        <xs:element name="KeyBindingCategoryDef" type="Verse.KeyBindingCategoryDef" />
        <xs:element name="KeyBindingDef" type="Verse.KeyBindingDef" />
        <xs:element name="LetterDef" type="Verse.LetterDef" />
        <xs:element name="LogEntryDef" type="Verse.LogEntryDef" />
        <xs:element name="ManeuverDef" type="Verse.ManeuverDef" />
        <xs:element name="MapGeneratorDef" type="Verse.MapGeneratorDef" />
        <xs:element name="MechWorkModeDef" type="Verse.MechWorkModeDef" />
        <xs:element name="MentalBreakDef" type="Verse.MentalBreakDef" />
        <xs:element name="MentalFitDef" type="Verse.MentalFitDef" />
        <xs:element name="MentalStateDef" type="Verse.MentalStateDef" />
        <xs:element name="MessageTypeDef" type="Verse.MessageTypeDef" />
        <xs:element name="OptionCategoryDef" type="Verse.OptionCategoryDef" />
        <xs:element name="OrderedTakeGroupDef" type="Verse.OrderedTakeGroupDef" />
        <xs:element name="PawnCapacityDef" type="Verse.PawnCapacityDef" />
        <xs:element name="PawnKindDef" type="Verse.PawnKindDef" />
        <xs:element name="PlaceDef" type="Verse.PlaceDef" />
        <xs:element name="RecipeDef" type="Verse.RecipeDef" />
        <xs:element name="ResearchProjectDef" type="Verse.ResearchProjectDef" />
        <xs:element name="ResearchProjectTagDef" type="Verse.ResearchProjectTagDef" />
        <xs:element name="ReservationLayerDef" type="Verse.ReservationLayerDef" />
        <xs:element name="RoofDef" type="Verse.RoofDef" />
        <xs:element name="RoomRoleDef" type="Verse.RoomRoleDef" />
        <xs:element name="RoomStatDef" type="Verse.RoomStatDef" />
        <xs:element name="RulePackDef" type="Verse.RulePackDef" />
        <xs:element name="ScatterableDef" type="Verse.ScatterableDef" />
        <xs:element name="ShaderTypeDef" type="Verse.ShaderTypeDef" />
        <xs:element name="SongDef" type="Verse.SongDef" />
        <xs:element name="Verse.Sound.ImpactSoundTypeDef" type="Verse.Sound.ImpactSoundTypeDef" />
        <xs:element name="SoundDef" type="Verse.SoundDef" />
        <xs:element name="SpecialThingFilterDef" type="Verse.SpecialThingFilterDef" />
        <xs:element name="StuffAppearanceDef" type="Verse.StuffAppearanceDef" />
        <xs:element name="StyleCategoryDef" type="Verse.StyleCategoryDef" />
        <xs:element name="SubcameraDef" type="Verse.SubcameraDef" />
        <xs:element name="TerrainAffordanceDef" type="Verse.TerrainAffordanceDef" />
        <xs:element name="TerrainDef" type="Verse.TerrainDef" />
        <xs:element name="ThingCategoryDef" type="Verse.ThingCategoryDef" />
        <xs:element name="ThingDef" type="Verse.ThingDef" />
        <xs:element name="ThingStyleDef" type="Verse.ThingStyleDef" />
        <xs:element name="ThinkTreeDef" type="Verse.ThinkTreeDef" />
        <xs:element name="TipSetDef" type="Verse.TipSetDef" />
        <xs:element name="ToolCapacityDef" type="Verse.ToolCapacityDef" />
        <xs:element name="TrainabilityDef" type="Verse.TrainabilityDef" />
        <xs:element name="WeatherDef" type="Verse.WeatherDef" />
        <xs:element name="WorkTypeDef" type="Verse.WorkTypeDef" />
        <xs:element name="WorldGenStepDef" type="Verse.WorldGenStepDef" />
        <xs:element name="WeaponClassDef" type="WeaponClassDef" />
        <xs:element name="WeaponClassPairDef" type="WeaponClassPairDef" />
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:simpleType name="defName">
    <xs:restriction base="xs:string">
      <xs:pattern value="[a-zA-Z0-9\-_]*" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="defLabel">
    <xs:restriction base="xs:string">
      <xs:pattern value="[^\[\]\{\}]*" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="HugsLib.UpdateFeatureDef">
    <xs:all>
      <xs:element minOccurs="0" name="modIdentifier" type="xs:string" />
      <xs:element minOccurs="0" name="modNameReadable" type="xs:string" />
      <xs:element minOccurs="0" name="titleOverride" type="xs:string" />
      <xs:element minOccurs="0" name="assemblyVersion" type="xs:string" />
      <xs:element minOccurs="0" name="content" type="xs:string" />
      <xs:element minOccurs="0" name="trimWhitespace" type="xs:boolean" />
      <xs:element minOccurs="0" name="linkUrl" type="xs:string" />
      <xs:element minOccurs="0" name="targetAudience">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="ReturningPlayers" />
                  <xs:enumeration value="NewPlayers" />
                  <xs:enumeration value="AllPlayers" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.DefHyperlink">
    <xs:sequence>
      <xs:any minOccurs="0" processContents="skip" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Verse.DefModExtension">
    <xs:all />
  </xs:complexType>
  <xs:complexType name="RimWorld.AbilityCategoryDef">
    <xs:all>
      <xs:element minOccurs="0" name="displayOrder" type="xs:int" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.AbilityDef">
    <xs:all>
      <xs:element minOccurs="0" name="abilityClass" type="xs:string" />
      <xs:element minOccurs="0" name="gizmoClass" type="xs:string" />
      <xs:element minOccurs="0" name="comps">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.AbilityCompProperties" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="category" type="xs:string" />
      <xs:element minOccurs="0" name="displayOrder" type="xs:int" />
      <xs:element minOccurs="0" name="statBases" type="RimWorld.StatModifier" />
      <xs:element minOccurs="0" name="verbProperties" type="Verse.VerbProperties" />
      <xs:element minOccurs="0" name="hotKey" type="xs:string" />
      <xs:element minOccurs="0" name="jobDef" type="xs:string" />
      <xs:element minOccurs="0" name="warmupMote" type="xs:string" />
      <xs:element minOccurs="0" name="warmupEffecter" type="xs:string" />
      <xs:element minOccurs="0" name="emittedFleck" type="xs:string" />
      <xs:element minOccurs="0" name="emissionInterval" type="xs:int" />
      <xs:element minOccurs="0" name="warmupMoteSocialSymbol" type="xs:string" />
      <xs:element minOccurs="0" name="warmupStartSound" type="xs:string" />
      <xs:element minOccurs="0" name="warmupSound" type="xs:string" />
      <xs:element minOccurs="0" name="warmupPreEndSound" type="xs:string" />
      <xs:element minOccurs="0" name="warmupPreEndSoundSeconds" type="xs:float" />
      <xs:element minOccurs="0" name="moteDrawOffset" type="UnityEngine.Vector3" />
      <xs:element minOccurs="0" name="moteOffsetAmountTowardsTarget" type="xs:float" />
      <xs:element minOccurs="0" name="canUseAoeToGetTargets" type="xs:boolean" />
      <xs:element minOccurs="0" name="useAverageTargetPositionForWarmupEffecter" type="xs:boolean" />
      <xs:element minOccurs="0" name="targetRequired" type="xs:boolean" />
      <xs:element minOccurs="0" name="targetWorldCell" type="xs:boolean" />
      <xs:element minOccurs="0" name="showGizmoOnWorldView" type="xs:boolean" />
      <xs:element minOccurs="0" name="aiCanUse" type="xs:boolean" />
      <xs:element minOccurs="0" name="ai_SearchAOEForTargets" type="xs:boolean" />
      <xs:element minOccurs="0" name="groupAbility" type="xs:boolean" />
      <xs:element minOccurs="0" name="level" type="xs:int" />
      <xs:element minOccurs="0" name="cooldownTicksRange" type="Verse.IntRange" />
      <xs:element minOccurs="0" name="cooldownPerCharge" type="xs:boolean" />
      <xs:element minOccurs="0" name="charges" type="xs:int" />
      <xs:element minOccurs="0" name="groupDef" type="xs:string" />
      <xs:element minOccurs="0" name="overrideGroupCooldown" type="xs:boolean" />
      <xs:element minOccurs="0" name="requiredMemes">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="sendLetterOnCooldownComplete" type="xs:boolean" />
      <xs:element minOccurs="0" name="displayGizmoWhileUndrafted" type="xs:boolean" />
      <xs:element minOccurs="0" name="disableGizmoWhileUndrafted" type="xs:boolean" />
      <xs:element minOccurs="0" name="writeCombatLog" type="xs:boolean" />
      <xs:element minOccurs="0" name="stunTargetWhileCasting" type="xs:boolean" />
      <xs:element minOccurs="0" name="showPsycastEffects" type="xs:boolean" />
      <xs:element minOccurs="0" name="showCastingProgressBar" type="xs:boolean" />
      <xs:element minOccurs="0" name="detectionChanceOverride" type="xs:float" />
      <xs:element minOccurs="0" name="uiOrder" type="xs:float" />
      <xs:element minOccurs="0" name="waitForJobEnd" type="xs:boolean" />
      <xs:element minOccurs="0" name="showWhenDrafted" type="xs:boolean" />
      <xs:element minOccurs="0" name="hostile" type="xs:boolean" />
      <xs:element minOccurs="0" name="confirmationDialogText" type="xs:string" />
      <xs:element minOccurs="0" name="iconPath" type="xs:string" />
      <xs:element minOccurs="0" name="uiIcon" type="UnityEngine.Texture2D" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.AbilityCompProperties">
    <xs:all>
      <xs:element minOccurs="0" name="compClass" type="xs:string" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.StatModifier">
    <xs:sequence>
      <xs:any minOccurs="0" processContents="skip" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Verse.VerbProperties">
    <xs:all>
      <xs:element minOccurs="0" name="category">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Undefined" />
            <xs:enumeration value="BeatFire" />
            <xs:enumeration value="Ignite" />
            <xs:enumeration value="Misc" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="verbClass" type="xs:string" />
      <xs:element minOccurs="0" name="label" type="xs:string" />
      <xs:element minOccurs="0" name="isPrimary" type="xs:boolean" />
      <xs:element minOccurs="0" name="violent" type="xs:boolean" />
      <xs:element minOccurs="0" name="minRange" type="xs:float" />
      <xs:element minOccurs="0" name="range" type="xs:float" />
      <xs:element minOccurs="0" name="rangeStat" type="xs:string" />
      <xs:element minOccurs="0" name="burstShotCount" type="xs:int" />
      <xs:element minOccurs="0" name="ticksBetweenBurstShots" type="xs:int" />
      <xs:element minOccurs="0" name="noiseRadius" type="xs:float" />
      <xs:element minOccurs="0" name="hasStandardCommand" type="xs:boolean" />
      <xs:element minOccurs="0" name="targetable" type="xs:boolean" />
      <xs:element minOccurs="0" name="nonInterruptingSelfCast" type="xs:boolean" />
      <xs:element minOccurs="0" name="targetParams" type="RimWorld.TargetingParameters" />
      <xs:element minOccurs="0" name="requireLineOfSight" type="xs:boolean" />
      <xs:element minOccurs="0" name="mustCastOnOpenGround" type="xs:boolean" />
      <xs:element minOccurs="0" name="forceNormalTimeSpeed" type="xs:boolean" />
      <xs:element minOccurs="0" name="onlyManualCast" type="xs:boolean" />
      <xs:element minOccurs="0" name="stopBurstWithoutLos" type="xs:boolean" />
      <xs:element minOccurs="0" name="surpriseAttack" type="Verse.SurpriseAttackProps" />
      <xs:element minOccurs="0" name="commonality" type="xs:float" />
      <xs:element minOccurs="0" name="minIntelligence">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Animal" />
            <xs:enumeration value="ToolUser" />
            <xs:enumeration value="Humanlike" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="consumeFuelPerShot" type="xs:float" />
      <xs:element minOccurs="0" name="consumeFuelPerBurst" type="xs:float" />
      <xs:element minOccurs="0" name="stunTargetOnCastStart" type="xs:boolean" />
      <xs:element minOccurs="0" name="invalidTargetPawn" type="xs:string" />
      <xs:element minOccurs="0" name="warmupTime" type="xs:float" />
      <xs:element minOccurs="0" name="defaultCooldownTime" type="xs:float" />
      <xs:element minOccurs="0" name="commandIcon" type="xs:string" />
      <xs:element minOccurs="0" name="soundCast" type="xs:string" />
      <xs:element minOccurs="0" name="soundCastTail" type="xs:string" />
      <xs:element minOccurs="0" name="soundAiming" type="xs:string" />
      <xs:element minOccurs="0" name="muzzleFlashScale" type="xs:float" />
      <xs:element minOccurs="0" name="impactMote" type="xs:string" />
      <xs:element minOccurs="0" name="impactFleck" type="xs:string" />
      <xs:element minOccurs="0" name="drawAimPie" type="xs:boolean" />
      <xs:element minOccurs="0" name="warmupEffecter" type="xs:string" />
      <xs:element minOccurs="0" name="drawHighlightWithLineOfSight" type="xs:boolean" />
      <xs:element minOccurs="0" name="aimingLineMote" type="xs:string" />
      <xs:element minOccurs="0" name="aimingLineMoteFixedLength" type="xs:float" />
      <xs:element minOccurs="0" name="aimingChargeMote" type="xs:string" />
      <xs:element minOccurs="0" name="aimingChargeMoteOffset" type="xs:float" />
      <xs:element minOccurs="0" name="aimingTargetMote" type="xs:string" />
      <xs:element minOccurs="0" name="linkedBodyPartsGroup" type="xs:string" />
      <xs:element minOccurs="0" name="ensureLinkedBodyPartsGroupAlwaysUsable" type="xs:boolean" />
      <xs:element minOccurs="0" name="meleeDamageDef" type="xs:string" />
      <xs:element minOccurs="0" name="meleeDamageBaseAmount" type="xs:int" />
      <xs:element minOccurs="0" name="meleeArmorPenetrationBase" type="xs:float" />
      <xs:element minOccurs="0" name="ai_IsWeapon" type="xs:boolean" />
      <xs:element minOccurs="0" name="ai_IsBuildingDestroyer" type="xs:boolean" />
      <xs:element minOccurs="0" name="ai_AvoidFriendlyFireRadius" type="xs:float" />
      <xs:element minOccurs="0" name="ai_RangedAlawaysShootGroundBelowTarget" type="xs:boolean" />
      <xs:element minOccurs="0" name="ai_IsDoorDestroyer" type="xs:boolean" />
      <xs:element minOccurs="0" name="ai_ProjectileLaunchingIgnoresMeleeThreats" type="xs:boolean" />
      <xs:element minOccurs="0" name="ai_TargetHasRangedAttackScoreOffset" type="xs:float" />
      <xs:element minOccurs="0" name="defaultProjectile" type="xs:string" />
      <xs:element minOccurs="0" name="forcedMissEvenDispersal" type="xs:boolean" />
      <xs:element minOccurs="0" name="accuracyTouch" type="xs:float" />
      <xs:element minOccurs="0" name="accuracyShort" type="xs:float" />
      <xs:element minOccurs="0" name="accuracyMedium" type="xs:float" />
      <xs:element minOccurs="0" name="accuracyLong" type="xs:float" />
      <xs:element minOccurs="0" name="canGoWild" type="xs:boolean" />
      <xs:element minOccurs="0" name="beamDamageDef" type="xs:string" />
      <xs:element minOccurs="0" name="beamWidth" type="xs:float" />
      <xs:element minOccurs="0" name="beamMaxDeviation" type="xs:float" />
      <xs:element minOccurs="0" name="beamGroundFleckDef" type="xs:string" />
      <xs:element minOccurs="0" name="beamEndEffecterDef" type="xs:string" />
      <xs:element minOccurs="0" name="beamMoteDef" type="xs:string" />
      <xs:element minOccurs="0" name="beamFleckChancePerTick" type="xs:float" />
      <xs:element minOccurs="0" name="beamCurvature" type="xs:float" />
      <xs:element minOccurs="0" name="beamChanceToStartFire" type="xs:float" />
      <xs:element minOccurs="0" name="beamChanceToAttachFire" type="xs:float" />
      <xs:element minOccurs="0" name="beamStartOffset" type="xs:float" />
      <xs:element minOccurs="0" name="beamFullWidthRange" type="xs:float" />
      <xs:element minOccurs="0" name="beamLineFleckDef" type="xs:string" />
      <xs:element minOccurs="0" name="beamLineFleckChanceCurve" type="Verse.SimpleCurve" />
      <xs:element minOccurs="0" name="beamFireSizeRange" type="Verse.FloatRange" />
      <xs:element minOccurs="0" name="soundCastBeam" type="xs:string" />
      <xs:element minOccurs="0" name="beamTargetsGround" type="xs:boolean" />
      <xs:element minOccurs="0" name="sprayWidth" type="xs:float" />
      <xs:element minOccurs="0" name="sprayArching" type="xs:float" />
      <xs:element minOccurs="0" name="sprayNumExtraCells" type="xs:int" />
      <xs:element minOccurs="0" name="sprayThicknessCells" type="xs:int" />
      <xs:element minOccurs="0" name="sprayEffecterDef" type="xs:string" />
      <xs:element minOccurs="0" name="spawnDef" type="xs:string" />
      <xs:element minOccurs="0" name="colonyWideTaleDef" type="xs:string" />
      <xs:element minOccurs="0" name="affectedCellCount" type="xs:int" />
      <xs:element minOccurs="0" name="bodypartTagTarget" type="xs:string" />
      <xs:element minOccurs="0" name="rangedFireRulepack" type="xs:string" />
      <xs:element minOccurs="0" name="soundLanding" type="xs:string" />
      <xs:element minOccurs="0" name="flightEffecterDef" type="xs:string" />
      <xs:element minOccurs="0" name="flyWithCarriedThing" type="xs:boolean" />
      <xs:element minOccurs="0" name="workModeDef" type="xs:string" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.TargetingParameters">
    <xs:all>
      <xs:element minOccurs="0" name="canTargetLocations" type="xs:boolean" />
      <xs:element minOccurs="0" name="canTargetSelf" type="xs:boolean" />
      <xs:element minOccurs="0" name="canTargetPawns" type="xs:boolean" />
      <xs:element minOccurs="0" name="canTargetFires" type="xs:boolean" />
      <xs:element minOccurs="0" name="canTargetBuildings" type="xs:boolean" />
      <xs:element minOccurs="0" name="canTargetItems" type="xs:boolean" />
      <xs:element minOccurs="0" name="canTargetAnimals" type="xs:boolean" />
      <xs:element minOccurs="0" name="canTargetHumans" type="xs:boolean" />
      <xs:element minOccurs="0" name="canTargetMechs" type="xs:boolean" />
      <xs:element minOccurs="0" name="canTargetPlants" type="xs:boolean" />
      <xs:element minOccurs="0" name="onlyTargetFactions">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="onlyTargetFlammables" type="xs:boolean" />
      <xs:element minOccurs="0" name="mustBeSelectable" type="xs:boolean" />
      <xs:element minOccurs="0" name="neverTargetDoors" type="xs:boolean" />
      <xs:element minOccurs="0" name="neverTargetIncapacitated" type="xs:boolean" />
      <xs:element minOccurs="0" name="neverTargetHostileFaction" type="xs:boolean" />
      <xs:element minOccurs="0" name="onlyTargetSameIdeo" type="xs:boolean" />
      <xs:element minOccurs="0" name="onlyTargetThingsAffectingRegions" type="xs:boolean" />
      <xs:element minOccurs="0" name="onlyTargetDamagedThings" type="xs:boolean" />
      <xs:element minOccurs="0" name="mapObjectTargetsMustBeAutoAttackable" type="xs:boolean" />
      <xs:element minOccurs="0" name="onlyTargetIncapacitatedPawns" type="xs:boolean" />
      <xs:element minOccurs="0" name="onlyTargetColonistsOrPrisoners" type="xs:boolean" />
      <xs:element minOccurs="0" name="onlyTargetColonistsOrPrisonersOrSlaves" type="xs:boolean" />
      <xs:element minOccurs="0" name="onlyTargetColonistsOrPrisonersOrSlavesAllowMinorMentalBreaks" type="xs:boolean" />
      <xs:element minOccurs="0" name="onlyTargetControlledPawns" type="xs:boolean" />
      <xs:element minOccurs="0" name="onlyTargetColonists" type="xs:boolean" />
      <xs:element minOccurs="0" name="onlyTargetPrisonersOfColony" type="xs:boolean" />
      <xs:element minOccurs="0" name="onlyTargetPsychicSensitive" type="xs:boolean" />
      <xs:element minOccurs="0" name="onlyTargetAnimaTrees" type="xs:boolean" />
      <xs:element minOccurs="0" name="canTargetBloodfeeders" type="xs:boolean" />
      <xs:element minOccurs="0" name="onlyRepairableMechs" type="xs:boolean" />
      <xs:element minOccurs="0" name="thingCategory">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="None" />
            <xs:enumeration value="Pawn" />
            <xs:enumeration value="Item" />
            <xs:enumeration value="Building" />
            <xs:enumeration value="Plant" />
            <xs:enumeration value="Projectile" />
            <xs:enumeration value="Filth" />
            <xs:enumeration value="Gas" />
            <xs:enumeration value="Attachment" />
            <xs:enumeration value="Mote" />
            <xs:enumeration value="Ethereal" />
            <xs:enumeration value="PsychicEmitter" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="onlyTargetDoors" type="xs:boolean" />
      <xs:element minOccurs="0" name="canTargetCorpses" type="xs:boolean" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.SurpriseAttackProps">
    <xs:all>
      <xs:element minOccurs="0" name="extraMeleeDamages">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.ExtraDamage" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.ExtraDamage">
    <xs:all>
      <xs:element minOccurs="0" name="def" type="xs:string" />
      <xs:element minOccurs="0" name="amount" type="xs:float" />
      <xs:element minOccurs="0" name="armorPenetration" type="xs:float" />
      <xs:element minOccurs="0" name="chance" type="xs:float" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.SimpleCurve">
    <xs:all />
  </xs:complexType>
  <xs:complexType name="Verse.FloatRange">
    <xs:all>
      <xs:element minOccurs="0" name="min" type="xs:float" />
      <xs:element minOccurs="0" name="max" type="xs:float" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="UnityEngine.Vector3">
    <xs:all>
      <xs:element minOccurs="0" name="x" type="xs:float" />
      <xs:element minOccurs="0" name="y" type="xs:float" />
      <xs:element minOccurs="0" name="z" type="xs:float" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.IntRange">
    <xs:all>
      <xs:element minOccurs="0" name="min" type="xs:int" />
      <xs:element minOccurs="0" name="max" type="xs:int" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="UnityEngine.Texture2D">
    <xs:all />
  </xs:complexType>
  <xs:complexType name="RimWorld.AbilityGroupDef">
    <xs:all>
      <xs:element minOccurs="0" name="cooldownTicks" type="xs:int" />
      <xs:element minOccurs="0" name="ritualRoleIds">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.BabyPlayDef">
    <xs:all>
      <xs:element minOccurs="0" name="workerClass" type="xs:string" />
      <xs:element minOccurs="0" name="jobDef" type="xs:string" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.BackstoryDef">
    <xs:all>
      <xs:element minOccurs="0" name="identifier" type="xs:string" />
      <xs:element minOccurs="0" name="slot">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Childhood" />
            <xs:enumeration value="Adulthood" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="title" type="xs:string" />
      <xs:element minOccurs="0" name="titleFemale" type="xs:string" />
      <xs:element minOccurs="0" name="titleShort" type="xs:string" />
      <xs:element minOccurs="0" name="titleShortFemale" type="xs:string" />
      <xs:element minOccurs="0" name="baseDesc" type="xs:string" />
      <xs:element minOccurs="0" name="skillGains">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="key" type="xs:string" />
                  <xs:element name="value" type="xs:int" />
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="workDisables">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="None" />
                  <xs:enumeration value="ManualDumb" />
                  <xs:enumeration value="ManualSkilled" />
                  <xs:enumeration value="Violent" />
                  <xs:enumeration value="Caring" />
                  <xs:enumeration value="Social" />
                  <xs:enumeration value="Commoner" />
                  <xs:enumeration value="Intellectual" />
                  <xs:enumeration value="Animals" />
                  <xs:enumeration value="Artistic" />
                  <xs:enumeration value="Crafting" />
                  <xs:enumeration value="Cooking" />
                  <xs:enumeration value="Firefighting" />
                  <xs:enumeration value="Cleaning" />
                  <xs:enumeration value="Hauling" />
                  <xs:enumeration value="PlantWork" />
                  <xs:enumeration value="Mining" />
                  <xs:enumeration value="Hunting" />
                  <xs:enumeration value="Constructing" />
                  <xs:enumeration value="Shooting" />
                  <xs:enumeration value="AllWork" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="requiredWorkTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="None" />
                  <xs:enumeration value="ManualDumb" />
                  <xs:enumeration value="ManualSkilled" />
                  <xs:enumeration value="Violent" />
                  <xs:enumeration value="Caring" />
                  <xs:enumeration value="Social" />
                  <xs:enumeration value="Commoner" />
                  <xs:enumeration value="Intellectual" />
                  <xs:enumeration value="Animals" />
                  <xs:enumeration value="Artistic" />
                  <xs:enumeration value="Crafting" />
                  <xs:enumeration value="Cooking" />
                  <xs:enumeration value="Firefighting" />
                  <xs:enumeration value="Cleaning" />
                  <xs:enumeration value="Hauling" />
                  <xs:enumeration value="PlantWork" />
                  <xs:enumeration value="Mining" />
                  <xs:enumeration value="Hunting" />
                  <xs:enumeration value="Constructing" />
                  <xs:enumeration value="Shooting" />
                  <xs:enumeration value="AllWork" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="spawnCategories">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="bodyTypeGlobal" type="xs:string" />
      <xs:element minOccurs="0" name="bodyTypeFemale" type="xs:string" />
      <xs:element minOccurs="0" name="bodyTypeMale" type="xs:string" />
      <xs:element minOccurs="0" name="forcedTraits" type="RimWorld.BackstoryTrait" />
      <xs:element minOccurs="0" name="disallowedTraits" type="RimWorld.BackstoryTrait" />
      <xs:element minOccurs="0" name="nameMaker" type="xs:string" />
      <xs:element minOccurs="0" name="possessions">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.BackstoryThingDefCountClass" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="shuffleable" type="xs:boolean" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.BackstoryTrait">
    <xs:sequence>
      <xs:any minOccurs="0" processContents="skip" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="RimWorld.BackstoryThingDefCountClass">
    <xs:all>
      <xs:element minOccurs="0" name="key" type="xs:string" />
      <xs:element minOccurs="0" name="value" type="xs:int" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.BeardDef">
    <xs:all>
      <xs:element minOccurs="0" name="offsetNarrowEast" type="UnityEngine.Vector3" />
      <xs:element minOccurs="0" name="offsetNarrowSouth" type="UnityEngine.Vector3" />
      <xs:element minOccurs="0" name="styleTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="styleGender">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Male" />
            <xs:enumeration value="MaleUsually" />
            <xs:enumeration value="Any" />
            <xs:enumeration value="FemaleUsually" />
            <xs:enumeration value="Female" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="noGraphic" type="xs:boolean" />
      <xs:element minOccurs="0" name="requiredGene" type="xs:string" />
      <xs:element minOccurs="0" name="texPath" type="xs:string" />
      <xs:element minOccurs="0" name="iconPath" type="xs:string" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.BillRepeatModeDef">
    <xs:all>
      <xs:element minOccurs="0" name="listOrder" type="xs:int" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.BillStoreModeDef">
    <xs:all>
      <xs:element minOccurs="0" name="listOrder" type="xs:int" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.BiomeDef">
    <xs:all>
      <xs:element minOccurs="0" name="workerClass" type="xs:string" />
      <xs:element minOccurs="0" name="implemented" type="xs:boolean" />
      <xs:element minOccurs="0" name="canBuildBase" type="xs:boolean" />
      <xs:element minOccurs="0" name="canAutoChoose" type="xs:boolean" />
      <xs:element minOccurs="0" name="allowRoads" type="xs:boolean" />
      <xs:element minOccurs="0" name="allowRivers" type="xs:boolean" />
      <xs:element minOccurs="0" name="allowFarmingCamps" type="xs:boolean" />
      <xs:element minOccurs="0" name="animalDensity" type="xs:float" />
      <xs:element minOccurs="0" name="plantDensity" type="xs:float" />
      <xs:element minOccurs="0" name="diseaseMtbDays" type="xs:float" />
      <xs:element minOccurs="0" name="settlementSelectionWeight" type="xs:float" />
      <xs:element minOccurs="0" name="campSelectionWeight" type="xs:float" />
      <xs:element minOccurs="0" name="impassable" type="xs:boolean" />
      <xs:element minOccurs="0" name="hasVirtualPlants" type="xs:boolean" />
      <xs:element minOccurs="0" name="forageability" type="xs:float" />
      <xs:element minOccurs="0" name="foragedFood" type="xs:string" />
      <xs:element minOccurs="0" name="wildPlantsCareAboutLocalFertility" type="xs:boolean" />
      <xs:element minOccurs="0" name="wildPlantRegrowDays" type="xs:float" />
      <xs:element minOccurs="0" name="movementDifficulty" type="xs:float" />
      <xs:element minOccurs="0" name="baseWeatherCommonalities" type="RimWorld.WeatherCommonalityRecord" />
      <xs:element minOccurs="0" name="terrainsByFertility">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.TerrainThreshold" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="soundsAmbient">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="terrainPatchMakers">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.TerrainPatchMaker" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="hasBedrock" type="xs:boolean" />
      <xs:element minOccurs="0" name="isExtremeBiome" type="xs:boolean" />
      <xs:element minOccurs="0" name="allowPollution" type="xs:boolean" />
      <xs:element minOccurs="0" name="texture" type="xs:string" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.WeatherCommonalityRecord">
    <xs:sequence>
      <xs:any minOccurs="0" processContents="skip" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="RimWorld.TerrainThreshold">
    <xs:all>
      <xs:element minOccurs="0" name="terrain" type="xs:string" />
      <xs:element minOccurs="0" name="min" type="xs:float" />
      <xs:element minOccurs="0" name="max" type="xs:float" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.TerrainPatchMaker">
    <xs:all>
      <xs:element minOccurs="0" name="thresholds">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.TerrainThreshold" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="perlinFrequency" type="xs:float" />
      <xs:element minOccurs="0" name="perlinLacunarity" type="xs:float" />
      <xs:element minOccurs="0" name="perlinPersistence" type="xs:float" />
      <xs:element minOccurs="0" name="perlinOctaves" type="xs:int" />
      <xs:element minOccurs="0" name="minFertility" type="xs:float" />
      <xs:element minOccurs="0" name="maxFertility" type="xs:float" />
      <xs:element minOccurs="0" name="minSize" type="xs:int" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.BodyTypeDef">
    <xs:all>
      <xs:element minOccurs="0" name="bodyNakedGraphicPath" type="xs:string" />
      <xs:element minOccurs="0" name="bodyDessicatedGraphicPath" type="xs:string" />
      <xs:element minOccurs="0" name="woundAnchors">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.BodyTypeDef.WoundAnchor" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="woundScale" type="xs:float" />
      <xs:element minOccurs="0" name="headOffset" type="UnityEngine.Vector2" />
      <xs:element minOccurs="0" name="bodyGraphicScale" type="UnityEngine.Vector2" />
      <xs:element minOccurs="0" name="bedOffset" type="xs:float" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.BodyTypeDef.WoundAnchor">
    <xs:all>
      <xs:element minOccurs="0" name="tag" type="xs:string" />
      <xs:element minOccurs="0" name="group" type="xs:string" />
      <xs:element minOccurs="0" name="narrowCrown" type="xs:boolean" />
      <xs:element minOccurs="0" name="rotation" type="Verse.Rot4" />
      <xs:element minOccurs="0" name="canMirror" type="xs:boolean" />
      <xs:element minOccurs="0" name="offset" type="UnityEngine.Vector3" />
      <xs:element minOccurs="0" name="layer">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Body" />
            <xs:enumeration value="Head" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="debugColor" type="UnityEngine.Color" />
      <xs:element minOccurs="0" name="range" type="xs:float" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.Rot4">
    <xs:all />
  </xs:complexType>
  <xs:complexType name="UnityEngine.Color">
    <xs:all>
      <xs:element minOccurs="0" name="r" type="xs:float" />
      <xs:element minOccurs="0" name="g" type="xs:float" />
      <xs:element minOccurs="0" name="b" type="xs:float" />
      <xs:element minOccurs="0" name="a" type="xs:float" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="UnityEngine.Vector2">
    <xs:all>
      <xs:element minOccurs="0" name="x" type="xs:float" />
      <xs:element minOccurs="0" name="y" type="xs:float" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.BossDef">
    <xs:all>
      <xs:element minOccurs="0" name="kindDef" type="xs:string" />
      <xs:element minOccurs="0" name="appearAfterTicks" type="xs:int" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.BossgroupDef">
    <xs:all>
      <xs:element minOccurs="0" name="boss" type="xs:string" />
      <xs:element minOccurs="0" name="waves">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.BossGroupWave" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="repeatWaveStartIndex" type="xs:int" />
      <xs:element minOccurs="0" name="workerClass" type="xs:string" />
      <xs:element minOccurs="0" name="leaderDescription" type="xs:string" />
      <xs:element minOccurs="0" name="quest" type="xs:string" />
      <xs:element minOccurs="0" name="rewardDef" type="xs:string" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.BossGroupWave">
    <xs:all>
      <xs:element minOccurs="0" name="bossCount" type="xs:int" />
      <xs:element minOccurs="0" name="bossApparel">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="escorts" type="RimWorld.PawnKindDefCount" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.PawnKindDefCount">
    <xs:sequence>
      <xs:any minOccurs="0" processContents="skip" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="RimWorld.ChemicalDef">
    <xs:all>
      <xs:element minOccurs="0" name="addictionHediff" type="xs:string" />
      <xs:element minOccurs="0" name="toleranceHediff" type="xs:string" />
      <xs:element minOccurs="0" name="canBinge" type="xs:boolean" />
      <xs:element minOccurs="0" name="generateAddictionGenes" type="xs:boolean" />
      <xs:element minOccurs="0" name="onGeneratedAddictedToleranceChance" type="xs:float" />
      <xs:element minOccurs="0" name="onGeneratedAddictedEvents">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.HediffGiver_Event" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.HediffGiver_Event">
    <xs:all>
      <xs:element minOccurs="0" name="hediff" type="xs:string" />
      <xs:element minOccurs="0" name="partsToAffect">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="canAffectAnyLivePart" type="xs:boolean" />
      <xs:element minOccurs="0" name="allowOnLodgers" type="xs:boolean" />
      <xs:element minOccurs="0" name="allowOnQuestRewardPawns" type="xs:boolean" />
      <xs:element minOccurs="0" name="allowOnQuestReservedPawns" type="xs:boolean" />
      <xs:element minOccurs="0" name="allowOnBeggars" type="xs:boolean" />
      <xs:element minOccurs="0" name="countToAffect" type="xs:int" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.ColorDef">
    <xs:all>
      <xs:element minOccurs="0" name="color" type="UnityEngine.Color" />
      <xs:element minOccurs="0" name="colorType">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Misc" />
            <xs:enumeration value="Ideo" />
            <xs:enumeration value="Hair" />
            <xs:enumeration value="Structure" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="displayOrder" type="xs:int" />
      <xs:element minOccurs="0" name="displayInStylingStationUI" type="xs:boolean" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.ComplexDef">
    <xs:all>
      <xs:element minOccurs="0" name="roomDefs">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="threats">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.ComplexThreat" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="workerClass" type="xs:string" />
      <xs:element minOccurs="0" name="roomRewardCrateFactor" type="xs:float" />
      <xs:element minOccurs="0" name="fixedHostileFactionChance" type="xs:float" />
      <xs:element minOccurs="0" name="rewardThingSetMakerDef" type="xs:string" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.ComplexThreat">
    <xs:all>
      <xs:element minOccurs="0" name="def" type="xs:string" />
      <xs:element minOccurs="0" name="chancePerComplex" type="xs:float" />
      <xs:element minOccurs="0" name="maxPerComplex" type="xs:int" />
      <xs:element minOccurs="0" name="maxPerRoom" type="xs:int" />
      <xs:element minOccurs="0" name="selectionWeight" type="xs:float" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.ComplexRoomDef">
    <xs:all>
      <xs:element minOccurs="0" name="sketchResolverDef" type="xs:string" />
      <xs:element minOccurs="0" name="selectionWeight" type="xs:float" />
      <xs:element minOccurs="0" name="maxCount" type="xs:int" />
      <xs:element minOccurs="0" name="minArea" type="xs:int" />
      <xs:element minOccurs="0" name="maxArea" type="xs:int" />
      <xs:element minOccurs="0" name="requiresSingleRectRoom" type="xs:boolean" />
      <xs:element minOccurs="0" name="floorTypes">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.ComplexThreatDef">
    <xs:all>
      <xs:element minOccurs="0" name="workerClass" type="xs:string" />
      <xs:element minOccurs="0" name="faction" type="xs:string" />
      <xs:element minOccurs="0" name="postSpawnPassiveThreatFactor" type="xs:float" />
      <xs:element minOccurs="0" name="minPoints" type="xs:int" />
      <xs:element minOccurs="0" name="spawnInOtherRoomChance" type="xs:float" />
      <xs:element minOccurs="0" name="allowPassive" type="xs:boolean" />
      <xs:element minOccurs="0" name="fallbackToRoomEnteredTrigger" type="xs:boolean" />
      <xs:element minOccurs="0" name="delayChance" type="xs:float" />
      <xs:element minOccurs="0" name="delayTickOptions">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:int" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="threatFactorOverDelayTicksCurve" type="Verse.SimpleCurve" />
      <xs:element minOccurs="0" name="signalActionAmbushType">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Normal" />
            <xs:enumeration value="Manhunters" />
            <xs:enumeration value="Mechanoids" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="spawnAroundComplex" type="xs:boolean" />
      <xs:element minOccurs="0" name="useDropPods" type="xs:boolean" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.ConceptDef">
    <xs:all>
      <xs:element minOccurs="0" name="priority" type="xs:float" />
      <xs:element minOccurs="0" name="noteTeaches" type="xs:boolean" />
      <xs:element minOccurs="0" name="needsOpportunity" type="xs:boolean" />
      <xs:element minOccurs="0" name="opportunityDecays" type="xs:boolean" />
      <xs:element minOccurs="0" name="gameMode">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Entry" />
            <xs:enumeration value="MapInitializing" />
            <xs:enumeration value="Playing" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="highlightTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.CultureDef">
    <xs:all>
      <xs:element minOccurs="0" name="pawnNameMaker" type="xs:string" />
      <xs:element minOccurs="0" name="pawnNameMakerFemale" type="xs:string" />
      <xs:element minOccurs="0" name="ideoNameMaker" type="xs:string" />
      <xs:element minOccurs="0" name="deityNameMaker" type="xs:string" />
      <xs:element minOccurs="0" name="deityTypeMaker" type="xs:string" />
      <xs:element minOccurs="0" name="leaderTitleMaker" type="xs:string" />
      <xs:element minOccurs="0" name="festivalNameMaker" type="xs:string" />
      <xs:element minOccurs="0" name="thingStyleCategories">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.ThingStyleCategoryWithPriority" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="styleItemTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.StyleItemTagWeighted" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="preferredWeaponClasses" type="RimWorld.IdeoWeaponClassPair" />
      <xs:element minOccurs="0" name="allowedPlaceTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="iconPath" type="xs:string" />
      <xs:element minOccurs="0" name="iconColor" type="UnityEngine.Color" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.ThingStyleCategoryWithPriority">
    <xs:all>
      <xs:element minOccurs="0" name="category" type="xs:string" />
      <xs:element minOccurs="0" name="priority" type="xs:float" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.StyleItemTagWeighted">
    <xs:all />
  </xs:complexType>
  <xs:complexType name="RimWorld.IdeoWeaponClassPair">
    <xs:all>
      <xs:element minOccurs="0" name="noble" type="xs:string" />
      <xs:element minOccurs="0" name="despised" type="xs:string" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.DifficultyDef">
    <xs:all>
      <xs:element minOccurs="0" name="drawColor" type="UnityEngine.Color" />
      <xs:element minOccurs="0" name="isExtreme" type="xs:boolean" />
      <xs:element minOccurs="0" name="isCustom" type="xs:boolean" />
      <xs:element minOccurs="0" name="difficulty" type="xs:int" />
      <xs:element minOccurs="0" name="threatScale" type="xs:float" />
      <xs:element minOccurs="0" name="allowBigThreats" type="xs:boolean" />
      <xs:element minOccurs="0" name="allowIntroThreats" type="xs:boolean" />
      <xs:element minOccurs="0" name="allowCaveHives" type="xs:boolean" />
      <xs:element minOccurs="0" name="peacefulTemples" type="xs:boolean" />
      <xs:element minOccurs="0" name="allowViolentQuests" type="xs:boolean" />
      <xs:element minOccurs="0" name="predatorsHuntHumanlikes" type="xs:boolean" />
      <xs:element minOccurs="0" name="babiesAreHealthy" type="xs:boolean" />
      <xs:element minOccurs="0" name="noBabiesOrChildren" type="xs:boolean" />
      <xs:element minOccurs="0" name="scariaRotChance" type="xs:float" />
      <xs:element minOccurs="0" name="colonistMoodOffset" type="xs:float" />
      <xs:element minOccurs="0" name="tradePriceFactorLoss" type="xs:float" />
      <xs:element minOccurs="0" name="cropYieldFactor" type="xs:float" />
      <xs:element minOccurs="0" name="mineYieldFactor" type="xs:float" />
      <xs:element minOccurs="0" name="butcherYieldFactor" type="xs:float" />
      <xs:element minOccurs="0" name="researchSpeedFactor" type="xs:float" />
      <xs:element minOccurs="0" name="diseaseIntervalFactor" type="xs:float" />
      <xs:element minOccurs="0" name="enemyReproductionRateFactor" type="xs:float" />
      <xs:element minOccurs="0" name="playerPawnInfectionChanceFactor" type="xs:float" />
      <xs:element minOccurs="0" name="manhunterChanceOnDamageFactor" type="xs:float" />
      <xs:element minOccurs="0" name="deepDrillInfestationChanceFactor" type="xs:float" />
      <xs:element minOccurs="0" name="wastepackInfestationChanceFactor" type="xs:float" />
      <xs:element minOccurs="0" name="foodPoisonChanceFactor" type="xs:float" />
      <xs:element minOccurs="0" name="threatsGeneratorThreatCountFactor" type="xs:float" />
      <xs:element minOccurs="0" name="maintenanceCostFactor" type="xs:float" />
      <xs:element minOccurs="0" name="enemyDeathOnDownedChanceFactor" type="xs:float" />
      <xs:element minOccurs="0" name="adaptationGrowthRateFactorOverZero" type="xs:float" />
      <xs:element minOccurs="0" name="adaptationEffectFactor" type="xs:float" />
      <xs:element minOccurs="0" name="questRewardValueFactor" type="xs:float" />
      <xs:element minOccurs="0" name="raidLootPointsFactor" type="xs:float" />
      <xs:element minOccurs="0" name="allowTraps" type="xs:boolean" />
      <xs:element minOccurs="0" name="allowTurrets" type="xs:boolean" />
      <xs:element minOccurs="0" name="allowMortars" type="xs:boolean" />
      <xs:element minOccurs="0" name="classicMortars" type="xs:boolean" />
      <xs:element minOccurs="0" name="allowExtremeWeatherIncidents" type="xs:boolean" />
      <xs:element minOccurs="0" name="fixedWealthMode" type="xs:boolean" />
      <xs:element minOccurs="0" name="lowPopConversionBoost" type="xs:float" />
      <xs:element minOccurs="0" name="minThreatPointsRangeCeiling" type="xs:float" />
      <xs:element minOccurs="0" name="childAgingRate" type="xs:float" />
      <xs:element minOccurs="0" name="adultAgingRate" type="xs:float" />
      <xs:element minOccurs="0" name="unwaveringPrisoners" type="xs:boolean" />
      <xs:element minOccurs="0" name="childRaidersAllowed" type="xs:boolean" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.DrugPolicyDef">
    <xs:all>
      <xs:element minOccurs="0" name="allowPleasureDrugs" type="xs:boolean" />
      <xs:element minOccurs="0" name="entries">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.DrugPolicyEntry" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.DrugPolicyEntry">
    <xs:all>
      <xs:element minOccurs="0" name="drug" type="xs:string" />
      <xs:element minOccurs="0" name="allowedForAddiction" type="xs:boolean" />
      <xs:element minOccurs="0" name="allowedForJoy" type="xs:boolean" />
      <xs:element minOccurs="0" name="allowScheduled" type="xs:boolean" />
      <xs:element minOccurs="0" name="daysFrequency" type="xs:float" />
      <xs:element minOccurs="0" name="onlyIfMoodBelow" type="xs:float" />
      <xs:element minOccurs="0" name="onlyIfJoyBelow" type="xs:float" />
      <xs:element minOccurs="0" name="takeToInventory" type="xs:int" />
      <xs:element minOccurs="0" name="takeToInventoryTempBuffer" type="xs:string" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.ExpansionDef">
    <xs:all>
      <xs:element minOccurs="0" name="iconPath" type="xs:string" />
      <xs:element minOccurs="0" name="notOwnedIconPath" type="xs:string" />
      <xs:element minOccurs="0" name="backgroundPath" type="xs:string" />
      <xs:element minOccurs="0" name="linkedMod" type="xs:string" />
      <xs:element minOccurs="0" name="steamUrl" type="xs:string" />
      <xs:element minOccurs="0" name="siteUrl" type="xs:string" />
      <xs:element minOccurs="0" name="previewImagesFolderPath" type="xs:string" />
      <xs:element minOccurs="0" name="isCore" type="xs:boolean" />
      <xs:element minOccurs="0" name="primaryColor" type="UnityEngine.Color" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.ExpectationDef">
    <xs:all>
      <xs:element minOccurs="0" name="order" type="xs:int" />
      <xs:element minOccurs="0" name="thoughtStage" type="xs:int" />
      <xs:element minOccurs="0" name="maxMapWealth" type="xs:float" />
      <xs:element minOccurs="0" name="joyToleranceDropPerDay" type="xs:float" />
      <xs:element minOccurs="0" name="ritualQualityOffset" type="xs:float" />
      <xs:element minOccurs="0" name="joyKindsNeeded" type="xs:int" />
      <xs:element minOccurs="0" name="forRoles" type="xs:boolean" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.FactionDef">
    <xs:all>
      <xs:element minOccurs="0" name="isPlayer" type="xs:boolean" />
      <xs:element minOccurs="0" name="factionNameMaker" type="xs:string" />
      <xs:element minOccurs="0" name="settlementNameMaker" type="xs:string" />
      <xs:element minOccurs="0" name="playerInitialSettlementNameMaker" type="xs:string" />
      <xs:element minOccurs="0" name="fixedName" type="xs:string" />
      <xs:element minOccurs="0" name="humanlikeFaction" type="xs:boolean" />
      <xs:element minOccurs="0" name="hidden" type="xs:boolean" />
      <xs:element minOccurs="0" name="listOrderPriority" type="xs:float" />
      <xs:element minOccurs="0" name="pawnGroupMakers">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.PawnGroupMaker" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="raidCommonalityFromPointsCurve" type="Verse.SimpleCurve" />
      <xs:element minOccurs="0" name="autoFlee" type="xs:boolean" />
      <xs:element minOccurs="0" name="attackersDownPercentageRangeForAutoFlee" type="Verse.FloatRange" />
      <xs:element minOccurs="0" name="canSiege" type="xs:boolean" />
      <xs:element minOccurs="0" name="canStageAttacks" type="xs:boolean" />
      <xs:element minOccurs="0" name="canUseAvoidGrid" type="xs:boolean" />
      <xs:element minOccurs="0" name="earliestRaidDays" type="xs:float" />
      <xs:element minOccurs="0" name="allowedArrivalTemperatureRange" type="Verse.FloatRange" />
      <xs:element minOccurs="0" name="minSettlementTemperatureChanceCurve" type="Verse.SimpleCurve" />
      <xs:element minOccurs="0" name="basicMemberKind" type="xs:string" />
      <xs:element minOccurs="0" name="startingResearchTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="startingTechprintsResearchTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="recipePrerequisiteTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="rescueesCanJoin" type="xs:boolean" />
      <xs:element minOccurs="0" name="pawnSingular" type="xs:string" />
      <xs:element minOccurs="0" name="pawnsPlural" type="xs:string" />
      <xs:element minOccurs="0" name="leaderTitle" type="xs:string" />
      <xs:element minOccurs="0" name="leaderTitleFemale" type="xs:string" />
      <xs:element minOccurs="0" name="royalFavorLabel" type="xs:string" />
      <xs:element minOccurs="0" name="royalFavorIconPath" type="xs:string" />
      <xs:element minOccurs="0" name="fixedLeaderKinds">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="leaderForceGenerateNewPawn" type="xs:boolean" />
      <xs:element minOccurs="0" name="forageabilityFactor" type="xs:float" />
      <xs:element minOccurs="0" name="maxPawnCostPerTotalPointsCurve" type="Verse.SimpleCurve" />
      <xs:element minOccurs="0" name="royalTitleTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="categoryTag" type="xs:string" />
      <xs:element minOccurs="0" name="hostileToFactionlessHumanlikes" type="xs:boolean" />
      <xs:element minOccurs="0" name="dropPodActive" type="xs:string" />
      <xs:element minOccurs="0" name="dropPodIncoming" type="xs:string" />
      <xs:element minOccurs="0" name="requiredCountAtGameStart" type="xs:int" />
      <xs:element minOccurs="0" name="maxCountAtGameStart" type="xs:int" />
      <xs:element minOccurs="0" name="canMakeRandomly" type="xs:boolean" />
      <xs:element minOccurs="0" name="settlementGenerationWeight" type="xs:float" />
      <xs:element minOccurs="0" name="generateNewLeaderFromMapMembersOnly" type="xs:boolean" />
      <xs:element minOccurs="0" name="maxConfigurableAtWorldCreation" type="xs:int" />
      <xs:element minOccurs="0" name="startingCountAtWorldCreation" type="xs:int" />
      <xs:element minOccurs="0" name="configurationListOrderPriority" type="xs:int" />
      <xs:element minOccurs="0" name="replacesFaction" type="xs:string" />
      <xs:element minOccurs="0" name="displayInFactionSelection" type="xs:boolean" />
      <xs:element minOccurs="0" name="techLevel">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Undefined" />
            <xs:enumeration value="Animal" />
            <xs:enumeration value="Neolithic" />
            <xs:enumeration value="Medieval" />
            <xs:enumeration value="Industrial" />
            <xs:enumeration value="Spacer" />
            <xs:enumeration value="Ultra" />
            <xs:enumeration value="Archotech" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="backstoryFilters">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.BackstoryCategoryFilter" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="apparelStuffFilter" type="Verse.ThingFilter" />
      <xs:element minOccurs="0" name="raidLootMaker" type="xs:string" />
      <xs:element minOccurs="0" name="raidLootValueFromPointsCurve" type="Verse.SimpleCurve" />
      <xs:element minOccurs="0" name="caravanTraderKinds">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="visitorTraderKinds">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="baseTraderKinds">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="xenotypeSet" type="RimWorld.XenotypeSet" />
      <xs:element minOccurs="0" name="melaninRange" type="Verse.FloatRange" />
      <xs:element minOccurs="0" name="disallowedRaidStrategies">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="disallowedRaidAgeRestrictions">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="mustStartOneEnemy" type="xs:boolean" />
      <xs:element minOccurs="0" name="naturalEnemy" type="xs:boolean" />
      <xs:element minOccurs="0" name="permanentEnemy" type="xs:boolean" />
      <xs:element minOccurs="0" name="permanentEnemyToEveryoneExceptPlayer" type="xs:boolean" />
      <xs:element minOccurs="0" name="permanentEnemyToEveryoneExcept">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="settlementTexturePath" type="xs:string" />
      <xs:element minOccurs="0" name="factionIconPath" type="xs:string" />
      <xs:element minOccurs="0" name="colorSpectrum">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="UnityEngine.Color" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="royalTitleInheritanceRelations">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="royalTitleInheritanceWorkerClass" type="xs:string" />
      <xs:element minOccurs="0" name="royalImplantRules">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.RoyalImplantRule" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="minTitleForBladelinkWeapons" type="xs:string" />
      <xs:element minOccurs="0" name="renounceTitleMessage" type="xs:string" />
      <xs:element minOccurs="0" name="allowedCultures">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="requiredMemes">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="allowedMemes">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="disallowedMemes">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="disallowedPrecepts">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="structureMemeWeights" type="RimWorld.MemeWeight" />
      <xs:element minOccurs="0" name="classicIdeo" type="xs:boolean" />
      <xs:element minOccurs="0" name="dialogFactionGreetingHostile" type="xs:string" />
      <xs:element minOccurs="0" name="dialogFactionGreetingHostileAppreciative" type="xs:string" />
      <xs:element minOccurs="0" name="dialogFactionGreetingWary" type="xs:string" />
      <xs:element minOccurs="0" name="dialogFactionGreetingWarm" type="xs:string" />
      <xs:element minOccurs="0" name="dialogMilitaryAidSent" type="xs:string" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.PawnGroupMaker">
    <xs:all>
      <xs:element minOccurs="0" name="kindDef" type="xs:string" />
      <xs:element minOccurs="0" name="commonality" type="xs:float" />
      <xs:element minOccurs="0" name="disallowedStrategies">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="maxTotalPoints" type="xs:float" />
      <xs:element minOccurs="0" name="options" type="RimWorld.PawnGenOption" />
      <xs:element minOccurs="0" name="traders" type="RimWorld.PawnGenOption" />
      <xs:element minOccurs="0" name="carriers" type="RimWorld.PawnGenOption" />
      <xs:element minOccurs="0" name="guards" type="RimWorld.PawnGenOption" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.PawnGenOption">
    <xs:sequence>
      <xs:any minOccurs="0" processContents="skip" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="RimWorld.BackstoryCategoryFilter">
    <xs:all>
      <xs:element minOccurs="0" name="categories">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="exclude">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="categoriesChildhood">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="excludeChildhood">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="categoriesAdulthood">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="excludeAdulthood">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="commonality" type="xs:float" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.ThingFilter">
    <xs:all>
      <xs:element minOccurs="0" name="allowedHitPointsConfigurable" type="xs:boolean" />
      <xs:element minOccurs="0" name="allowedQualitiesConfigurable" type="xs:boolean" />
      <xs:element minOccurs="0" name="customSummary" type="xs:string" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.XenotypeSet">
    <xs:all />
  </xs:complexType>
  <xs:complexType name="RimWorld.RoyalImplantRule">
    <xs:all>
      <xs:element minOccurs="0" name="implantHediff" type="xs:string" />
      <xs:element minOccurs="0" name="minTitle" type="xs:string" />
      <xs:element minOccurs="0" name="maxLevel" type="xs:int" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.MemeWeight">
    <xs:sequence>
      <xs:any minOccurs="0" processContents="skip" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="RimWorld.FeatureDef">
    <xs:all>
      <xs:element minOccurs="0" name="workerClass" type="xs:string" />
      <xs:element minOccurs="0" name="order" type="xs:float" />
      <xs:element minOccurs="0" name="minSize" type="xs:int" />
      <xs:element minOccurs="0" name="maxSize" type="xs:int" />
      <xs:element minOccurs="0" name="canTouchWorldEdge" type="xs:boolean" />
      <xs:element minOccurs="0" name="nameMaker" type="xs:string" />
      <xs:element minOccurs="0" name="maxPossiblyAllowedSizeToTake" type="xs:int" />
      <xs:element minOccurs="0" name="maxPossiblyAllowedSizePctOfMeToTake" type="xs:float" />
      <xs:element minOccurs="0" name="rootBiomes">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="acceptableBiomes">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="maxSpaceBetweenRootGroups" type="xs:int" />
      <xs:element minOccurs="0" name="minRootGroupsInCluster" type="xs:int" />
      <xs:element minOccurs="0" name="minRootGroupSize" type="xs:int" />
      <xs:element minOccurs="0" name="maxRootGroupSize" type="xs:int" />
      <xs:element minOccurs="0" name="maxPassageWidth" type="xs:int" />
      <xs:element minOccurs="0" name="maxPctOfWholeArea" type="xs:float" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.FleshTypeDef">
    <xs:all>
      <xs:element minOccurs="0" name="ateDirect" type="xs:string" />
      <xs:element minOccurs="0" name="ateAsIngredient" type="xs:string" />
      <xs:element minOccurs="0" name="corpseCategory" type="xs:string" />
      <xs:element minOccurs="0" name="damageEffecter" type="xs:string" />
      <xs:element minOccurs="0" name="genericWounds">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.FleshTypeDef.Wound" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="bandagedWounds">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.FleshTypeDef.Wound" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="hediffWounds">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.FleshTypeDef.HediffWound" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.FleshTypeDef.Wound">
    <xs:all>
      <xs:element minOccurs="0" name="texture" type="xs:string" />
      <xs:element minOccurs="0" name="textureSouth" type="xs:string" />
      <xs:element minOccurs="0" name="textureEast" type="xs:string" />
      <xs:element minOccurs="0" name="textureNorth" type="xs:string" />
      <xs:element minOccurs="0" name="textureWest" type="xs:string" />
      <xs:element minOccurs="0" name="flipSouth" type="xs:boolean" />
      <xs:element minOccurs="0" name="flipEast" type="xs:boolean" />
      <xs:element minOccurs="0" name="flipNorth" type="xs:boolean" />
      <xs:element minOccurs="0" name="flipWest" type="xs:boolean" />
      <xs:element minOccurs="0" name="scale" type="xs:float" />
      <xs:element minOccurs="0" name="drawOffsetSouth" type="UnityEngine.Vector3" />
      <xs:element minOccurs="0" name="drawOffsetEastWest" type="UnityEngine.Vector3" />
      <xs:element minOccurs="0" name="color" type="UnityEngine.Color" />
      <xs:element minOccurs="0" name="tintWithSkinColor" type="xs:boolean" />
      <xs:element minOccurs="0" name="flipOnWoundAnchorTag" type="xs:string" />
      <xs:element minOccurs="0" name="flipOnRotation" type="Verse.Rot4" />
      <xs:element minOccurs="0" name="onlyOnPart" type="xs:string" />
      <xs:element minOccurs="0" name="displayOverApparel" type="xs:boolean" />
      <xs:element minOccurs="0" name="displayPermanent" type="xs:boolean" />
      <xs:element minOccurs="0" name="missingBodyPartFresh" type="xs:boolean" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.FleshTypeDef.HediffWound">
    <xs:all>
      <xs:element minOccurs="0" name="onlyHumanlikes" type="xs:boolean" />
      <xs:element minOccurs="0" name="hediff" type="xs:string" />
      <xs:element minOccurs="0" name="wounds">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.FleshTypeDef.Wound" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.FurDef">
    <xs:all>
      <xs:element minOccurs="0" name="bodyTypeGraphicPaths" type="RimWorld.FurCoveredGraphicData" />
      <xs:element minOccurs="0" name="styleTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="styleGender">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Male" />
            <xs:enumeration value="MaleUsually" />
            <xs:enumeration value="Any" />
            <xs:enumeration value="FemaleUsually" />
            <xs:enumeration value="Female" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="noGraphic" type="xs:boolean" />
      <xs:element minOccurs="0" name="requiredGene" type="xs:string" />
      <xs:element minOccurs="0" name="texPath" type="xs:string" />
      <xs:element minOccurs="0" name="iconPath" type="xs:string" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.FurCoveredGraphicData">
    <xs:sequence>
      <xs:any minOccurs="0" processContents="skip" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="RimWorld.GatheringDef">
    <xs:all>
      <xs:element minOccurs="0" name="workerClass" type="xs:string" />
      <xs:element minOccurs="0" name="duty" type="xs:string" />
      <xs:element minOccurs="0" name="randomSelectionWeight" type="xs:float" />
      <xs:element minOccurs="0" name="respectTimetable" type="xs:boolean" />
      <xs:element minOccurs="0" name="gatherSpotDefs">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="letterTitle" type="xs:string" />
      <xs:element minOccurs="0" name="letterText" type="xs:string" />
      <xs:element minOccurs="0" name="calledOffMessage" type="xs:string" />
      <xs:element minOccurs="0" name="finishedMessage" type="xs:string" />
      <xs:element minOccurs="0" name="requiredTitleAny">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.GauranlenTreeModeDef">
    <xs:all>
      <xs:element minOccurs="0" name="previousStage" type="xs:string" />
      <xs:element minOccurs="0" name="pawnKindDef" type="xs:string" />
      <xs:element minOccurs="0" name="requiredMemes">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="drawPosition" type="UnityEngine.Vector2" />
      <xs:element minOccurs="0" name="displayedStats">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="hyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.GeneTemplateDef">
    <xs:all>
      <xs:element minOccurs="0" name="geneClass" type="xs:string" />
      <xs:element minOccurs="0" name="biostatCpx" type="xs:int" />
      <xs:element minOccurs="0" name="biostatMet" type="xs:int" />
      <xs:element minOccurs="0" name="aptitudeOffset" type="xs:int" />
      <xs:element minOccurs="0" name="addictionChanceFactor" type="xs:float" />
      <xs:element minOccurs="0" name="passionModType">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="None" />
            <xs:enumeration value="AddOneLevel" />
            <xs:enumeration value="DropAll" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="geneTemplateType">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Skill" />
            <xs:enumeration value="Chemical" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="minAgeActive" type="xs:float" />
      <xs:element minOccurs="0" name="displayCategory" type="xs:string" />
      <xs:element minOccurs="0" name="displayOrderOffset" type="xs:int" />
      <xs:element minOccurs="0" name="selectionWeight" type="xs:float" />
      <xs:element minOccurs="0" name="labelShortAdj" type="xs:string" />
      <xs:element minOccurs="0" name="iconPath" type="xs:string" />
      <xs:element minOccurs="0" name="exclusionTagPrefix" type="xs:string" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.GoodwillSituationDef">
    <xs:all>
      <xs:element minOccurs="0" name="workerClass" type="xs:string" />
      <xs:element minOccurs="0" name="baseMaxGoodwill" type="xs:int" />
      <xs:element minOccurs="0" name="meme" type="xs:string" />
      <xs:element minOccurs="0" name="otherMeme" type="xs:string" />
      <xs:element minOccurs="0" name="naturalGoodwillOffset" type="xs:int" />
      <xs:element minOccurs="0" name="versusAll" type="xs:boolean" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.HairDef">
    <xs:all>
      <xs:element minOccurs="0" name="styleTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="styleGender">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Male" />
            <xs:enumeration value="MaleUsually" />
            <xs:enumeration value="Any" />
            <xs:enumeration value="FemaleUsually" />
            <xs:enumeration value="Female" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="noGraphic" type="xs:boolean" />
      <xs:element minOccurs="0" name="requiredGene" type="xs:string" />
      <xs:element minOccurs="0" name="texPath" type="xs:string" />
      <xs:element minOccurs="0" name="iconPath" type="xs:string" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.HediffGiverSetDef">
    <xs:all>
      <xs:element minOccurs="0" name="hediffGivers">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.HediffGiver" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.HediffGiver">
    <xs:all>
      <xs:element minOccurs="0" name="hediff" type="xs:string" />
      <xs:element minOccurs="0" name="partsToAffect">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="canAffectAnyLivePart" type="xs:boolean" />
      <xs:element minOccurs="0" name="allowOnLodgers" type="xs:boolean" />
      <xs:element minOccurs="0" name="allowOnQuestRewardPawns" type="xs:boolean" />
      <xs:element minOccurs="0" name="allowOnQuestReservedPawns" type="xs:boolean" />
      <xs:element minOccurs="0" name="allowOnBeggars" type="xs:boolean" />
      <xs:element minOccurs="0" name="countToAffect" type="xs:int" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.HibernatableStateDef">
    <xs:all>
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.HistoryAutoRecorderDef">
    <xs:all>
      <xs:element minOccurs="0" name="workerClass" type="xs:string" />
      <xs:element minOccurs="0" name="recordTicksFrequency" type="xs:int" />
      <xs:element minOccurs="0" name="graphColor" type="UnityEngine.Color" />
      <xs:element minOccurs="0" name="graphLabelY" type="xs:string" />
      <xs:element minOccurs="0" name="valueFormat" type="xs:string" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.HistoryAutoRecorderGroupDef">
    <xs:all>
      <xs:element minOccurs="0" name="useFixedScale" type="xs:boolean" />
      <xs:element minOccurs="0" name="fixedScale" type="UnityEngine.Vector2" />
      <xs:element minOccurs="0" name="integersOnly" type="xs:boolean" />
      <xs:element minOccurs="0" name="onlyPositiveValues" type="xs:boolean" />
      <xs:element minOccurs="0" name="devModeOnly" type="xs:boolean" />
      <xs:element minOccurs="0" name="historyAutoRecorderDefs">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.HistoryEventDef">
    <xs:all>
      <xs:element minOccurs="0" name="maxRemembered" type="xs:int" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.IdeoColorDef">
    <xs:all>
      <xs:element minOccurs="0" name="colorDef" type="xs:string" />
      <xs:element minOccurs="0" name="memes">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="cultures">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.IdeoFoundationDef">
    <xs:all>
      <xs:element minOccurs="0" name="foundationClass" type="xs:string" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.IdeoIconDef">
    <xs:all>
      <xs:element minOccurs="0" name="iconPath" type="xs:string" />
      <xs:element minOccurs="0" name="memes">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="cultures">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.IdeoPresetCategoryDef">
    <xs:all>
      <xs:element minOccurs="0" name="groupLabel" type="xs:string" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.IdeoPresetDef">
    <xs:all>
      <xs:element minOccurs="0" name="categoryDef" type="xs:string" />
      <xs:element minOccurs="0" name="memes">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="iconPath" type="xs:string" />
      <xs:element minOccurs="0" name="classicPlus" type="xs:boolean" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.IdeoSymbolPartDef">
    <xs:all>
      <xs:element minOccurs="0" name="memes">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="cultures">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.IncidentCategoryDef">
    <xs:all>
      <xs:element minOccurs="0" name="needsParmsPoints" type="xs:boolean" />
      <xs:element minOccurs="0" name="tale" type="xs:string" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.IncidentDef">
    <xs:all>
      <xs:element minOccurs="0" name="workerClass" type="xs:string" />
      <xs:element minOccurs="0" name="category" type="xs:string" />
      <xs:element minOccurs="0" name="targetTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="baseChance" type="xs:float" />
      <xs:element minOccurs="0" name="baseChanceWithRoyalty" type="xs:float" />
      <xs:element minOccurs="0" name="populationEffect">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="None" />
            <xs:enumeration value="IncreaseHard" />
            <xs:enumeration value="IncreaseMedium" />
            <xs:enumeration value="IncreaseEasy" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="earliestDay" type="xs:int" />
      <xs:element minOccurs="0" name="minPopulation" type="xs:int" />
      <xs:element minOccurs="0" name="requireColonistsPresent" type="xs:boolean" />
      <xs:element minOccurs="0" name="minRefireDays" type="xs:float" />
      <xs:element minOccurs="0" name="minDifficulty" type="xs:int" />
      <xs:element minOccurs="0" name="disabledWhen" type="RimWorld.DifficultyConditionConfig" />
      <xs:element minOccurs="0" name="pointsScaleable" type="xs:boolean" />
      <xs:element minOccurs="0" name="minThreatPoints" type="xs:float" />
      <xs:element minOccurs="0" name="allowedBiomes">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="disallowedBiomes">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="tags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="refireCheckTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="chanceFactorByPopulationCurve" type="Verse.SimpleCurve" />
      <xs:element minOccurs="0" name="tale" type="xs:string" />
      <xs:element minOccurs="0" name="minGreatestPopulation" type="xs:int" />
      <xs:element minOccurs="0" name="letterText" type="xs:string" />
      <xs:element minOccurs="0" name="letterLabel" type="xs:string" />
      <xs:element minOccurs="0" name="letterDef" type="xs:string" />
      <xs:element minOccurs="0" name="letterHyperlinkHediffDefs">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="pawnKind" type="xs:string" />
      <xs:element minOccurs="0" name="pawnMustBeCapableOfViolence" type="xs:boolean" />
      <xs:element minOccurs="0" name="pawnFixedGender">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="None" />
            <xs:enumeration value="Male" />
            <xs:enumeration value="Female" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="pawnHediff" type="xs:string" />
      <xs:element minOccurs="0" name="gameCondition" type="xs:string" />
      <xs:element minOccurs="0" name="durationDays" type="Verse.FloatRange" />
      <xs:element minOccurs="0" name="diseaseIncident" type="xs:string" />
      <xs:element minOccurs="0" name="diseaseVictimFractionRange" type="Verse.FloatRange" />
      <xs:element minOccurs="0" name="diseaseMaxVictims" type="xs:int" />
      <xs:element minOccurs="0" name="diseaseBiomeRecords">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.BiomeDiseaseRecord" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="diseasePartsToAffect">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="mechClusterBuilding" type="xs:string" />
      <xs:element minOccurs="0" name="mtbDaysByBiome" type="RimWorld.MTBByBiome" />
      <xs:element minOccurs="0" name="questScriptDef" type="xs:string" />
      <xs:element minOccurs="0" name="treeDef" type="xs:string" />
      <xs:element minOccurs="0" name="treeGenStepDef" type="xs:string" />
      <xs:element minOccurs="0" name="treeGrowth" type="xs:float" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.DifficultyConditionConfig">
    <xs:all>
      <xs:element minOccurs="0" name="bigThreatsDisabled" type="xs:boolean" />
      <xs:element minOccurs="0" name="trapsDisabled" type="xs:boolean" />
      <xs:element minOccurs="0" name="turretsDisabled" type="xs:boolean" />
      <xs:element minOccurs="0" name="mortarsDisabled" type="xs:boolean" />
      <xs:element minOccurs="0" name="extremeWeatherIncidentsDisabled" type="xs:boolean" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.BiomeDiseaseRecord">
    <xs:all>
      <xs:element minOccurs="0" name="biome" type="xs:string" />
      <xs:element minOccurs="0" name="diseaseInc" type="xs:string" />
      <xs:element minOccurs="0" name="commonality" type="xs:float" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.MTBByBiome">
    <xs:sequence>
      <xs:any minOccurs="0" processContents="skip" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="RimWorld.IncidentTargetTagDef">
    <xs:all>
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.InspirationDef">
    <xs:all>
      <xs:element minOccurs="0" name="inspirationClass" type="xs:string" />
      <xs:element minOccurs="0" name="workerClass" type="xs:string" />
      <xs:element minOccurs="0" name="baseCommonality" type="xs:float" />
      <xs:element minOccurs="0" name="baseDurationDays" type="xs:float" />
      <xs:element minOccurs="0" name="allowedOnAnimals" type="xs:boolean" />
      <xs:element minOccurs="0" name="allowedOnNonColonists" type="xs:boolean" />
      <xs:element minOccurs="0" name="allowedOnDownedPawns" type="xs:boolean" />
      <xs:element minOccurs="0" name="requiredNonDisabledStats">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="requiredSkills" type="Verse.SkillRequirement" />
      <xs:element minOccurs="0" name="requiredAnySkill" type="Verse.SkillRequirement" />
      <xs:element minOccurs="0" name="requiredNonDisabledWorkTypes">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="requiredAnyNonDisabledWorkType">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="requiredNonDisabledWorkTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="None" />
                  <xs:enumeration value="ManualDumb" />
                  <xs:enumeration value="ManualSkilled" />
                  <xs:enumeration value="Violent" />
                  <xs:enumeration value="Caring" />
                  <xs:enumeration value="Social" />
                  <xs:enumeration value="Commoner" />
                  <xs:enumeration value="Intellectual" />
                  <xs:enumeration value="Animals" />
                  <xs:enumeration value="Artistic" />
                  <xs:enumeration value="Crafting" />
                  <xs:enumeration value="Cooking" />
                  <xs:enumeration value="Firefighting" />
                  <xs:enumeration value="Cleaning" />
                  <xs:enumeration value="Hauling" />
                  <xs:enumeration value="PlantWork" />
                  <xs:enumeration value="Mining" />
                  <xs:enumeration value="Hunting" />
                  <xs:enumeration value="Constructing" />
                  <xs:enumeration value="Shooting" />
                  <xs:enumeration value="AllWork" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="requiredCapacities">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="associatedSkills">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="minAge" type="xs:float" />
      <xs:element minOccurs="0" name="statOffsets" type="RimWorld.StatModifier" />
      <xs:element minOccurs="0" name="statFactors" type="RimWorld.StatModifier" />
      <xs:element minOccurs="0" name="beginLetter" type="xs:string" />
      <xs:element minOccurs="0" name="beginLetterLabel" type="xs:string" />
      <xs:element minOccurs="0" name="beginLetterDef" type="xs:string" />
      <xs:element minOccurs="0" name="endMessage" type="xs:string" />
      <xs:element minOccurs="0" name="baseInspectLine" type="xs:string" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.SkillRequirement">
    <xs:sequence>
      <xs:any minOccurs="0" processContents="skip" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="RimWorld.InstructionDef">
    <xs:all>
      <xs:element minOccurs="0" name="instructionClass" type="xs:string" />
      <xs:element minOccurs="0" name="text" type="xs:string" />
      <xs:element minOccurs="0" name="textController" type="xs:string" />
      <xs:element minOccurs="0" name="startCentered" type="xs:boolean" />
      <xs:element minOccurs="0" name="tutorialModeOnly" type="xs:boolean" />
      <xs:element minOccurs="0" name="eventTagInitiate" type="xs:string" />
      <xs:element minOccurs="0" name="eventTagInitiateSource" type="xs:string" />
      <xs:element minOccurs="0" name="eventTagsEnd">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="actionTagsAllowed">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="rejectInputMessage" type="xs:string" />
      <xs:element minOccurs="0" name="concept" type="xs:string" />
      <xs:element minOccurs="0" name="highlightTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="onMapInstruction" type="xs:string" />
      <xs:element minOccurs="0" name="targetCount" type="xs:int" />
      <xs:element minOccurs="0" name="thingDef" type="xs:string" />
      <xs:element minOccurs="0" name="recipeDef" type="xs:string" />
      <xs:element minOccurs="0" name="recipeTargetCount" type="xs:int" />
      <xs:element minOccurs="0" name="giveOnActivateDef" type="xs:string" />
      <xs:element minOccurs="0" name="giveOnActivateCount" type="xs:int" />
      <xs:element minOccurs="0" name="endTutorial" type="xs:boolean" />
      <xs:element minOccurs="0" name="resetBuildDesignatorStuffs" type="xs:boolean" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.InteractionDef">
    <xs:all>
      <xs:element minOccurs="0" name="interactionMote" type="xs:string" />
      <xs:element minOccurs="0" name="socialFightBaseChance" type="xs:float" />
      <xs:element minOccurs="0" name="initiatorThought" type="xs:string" />
      <xs:element minOccurs="0" name="initiatorXpGainSkill" type="xs:string" />
      <xs:element minOccurs="0" name="initiatorXpGainAmount" type="xs:int" />
      <xs:element minOccurs="0" name="recipientThought" type="xs:string" />
      <xs:element minOccurs="0" name="recipientXpGainSkill" type="xs:string" />
      <xs:element minOccurs="0" name="recipientXpGainAmount" type="xs:int" />
      <xs:element minOccurs="0" name="ignoreTimeSinceLastInteraction" type="xs:boolean" />
      <xs:element minOccurs="0" name="symbolSource">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Def" />
            <xs:enumeration value="InitiatorIdeo" />
            <xs:enumeration value="InitiatorFaction" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="logRulesInitiator" type="Verse.Grammar.RulePack" />
      <xs:element minOccurs="0" name="logRulesRecipient" type="Verse.Grammar.RulePack" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.Grammar.RulePack">
    <xs:all>
      <xs:element minOccurs="0" name="include">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.IssueDef">
    <xs:all>
      <xs:element minOccurs="0" name="allowMultiplePrecepts" type="xs:boolean" />
      <xs:element minOccurs="0" name="iconPath" type="xs:string" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.JoyGiverDef">
    <xs:all>
      <xs:element minOccurs="0" name="giverClass" type="xs:string" />
      <xs:element minOccurs="0" name="baseChance" type="xs:float" />
      <xs:element minOccurs="0" name="requireChair" type="xs:boolean" />
      <xs:element minOccurs="0" name="thingDefs">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="jobDef" type="xs:string" />
      <xs:element minOccurs="0" name="desireSit" type="xs:boolean" />
      <xs:element minOccurs="0" name="pctPawnsEverDo" type="xs:float" />
      <xs:element minOccurs="0" name="unroofedOnly" type="xs:boolean" />
      <xs:element minOccurs="0" name="joyKind" type="xs:string" />
      <xs:element minOccurs="0" name="requiredCapacities">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="canDoWhileInBed" type="xs:boolean" />
      <xs:element minOccurs="0" name="requiresEnjoyOutdoors" type="xs:boolean" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.JoyKindDef">
    <xs:all>
      <xs:element minOccurs="0" name="titleRequiredAny">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="needsThing" type="xs:boolean" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.LearningDesireDef">
    <xs:all>
      <xs:element minOccurs="0" name="selectionWeight" type="xs:float" />
      <xs:element minOccurs="0" name="xpPerTick" type="xs:float" />
      <xs:element minOccurs="0" name="iconPath" type="xs:string" />
      <xs:element minOccurs="0" name="workerClass" type="xs:string" />
      <xs:element minOccurs="0" name="jobDef" type="xs:string" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.LifeStageDef">
    <xs:all>
      <xs:element minOccurs="0" name="visible" type="xs:boolean" />
      <xs:element minOccurs="0" name="reproductive" type="xs:boolean" />
      <xs:element minOccurs="0" name="milkable" type="xs:boolean" />
      <xs:element minOccurs="0" name="shearable" type="xs:boolean" />
      <xs:element minOccurs="0" name="caravanRideable" type="xs:boolean" />
      <xs:element minOccurs="0" name="alwaysDowned" type="xs:boolean" />
      <xs:element minOccurs="0" name="claimable" type="xs:boolean" />
      <xs:element minOccurs="0" name="developmentalStage">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="None" />
                  <xs:enumeration value="Newborn" />
                  <xs:enumeration value="Baby" />
                  <xs:enumeration value="Child" />
                  <xs:enumeration value="Adult" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="workerClass" type="xs:string" />
      <xs:element minOccurs="0" name="involuntarySleepIsNegativeEvent" type="xs:boolean" />
      <xs:element minOccurs="0" name="thinkTreeMainOverride" type="xs:string" />
      <xs:element minOccurs="0" name="thinkTreeConstantOverride" type="xs:string" />
      <xs:element minOccurs="0" name="canDoRandomMentalBreaks" type="xs:boolean" />
      <xs:element minOccurs="0" name="customMoodTipString" type="xs:string" />
      <xs:element minOccurs="0" name="canSleepWhileHeld" type="xs:boolean" />
      <xs:element minOccurs="0" name="canVoluntarilySleep" type="xs:boolean" />
      <xs:element minOccurs="0" name="canSleepWhenStarving" type="xs:boolean" />
      <xs:element minOccurs="0" name="canInitiateSocialInteraction" type="xs:boolean" />
      <xs:element minOccurs="0" name="equipmentDrawDistanceFactor" type="xs:float" />
      <xs:element minOccurs="0" name="voxPitch" type="xs:float" />
      <xs:element minOccurs="0" name="voxVolume" type="xs:float" />
      <xs:element minOccurs="0" name="icon" type="xs:string" />
      <xs:element minOccurs="0" name="statOffsets" type="RimWorld.StatModifier" />
      <xs:element minOccurs="0" name="statFactors" type="RimWorld.StatModifier" />
      <xs:element minOccurs="0" name="bodySizeFactor" type="xs:float" />
      <xs:element minOccurs="0" name="healthScaleFactor" type="xs:float" />
      <xs:element minOccurs="0" name="hungerRateFactor" type="xs:float" />
      <xs:element minOccurs="0" name="marketValueFactor" type="xs:float" />
      <xs:element minOccurs="0" name="foodMaxFactor" type="xs:float" />
      <xs:element minOccurs="0" name="meleeDamageFactor" type="xs:float" />
      <xs:element minOccurs="0" name="involuntarySleepMTBDaysFromRest" type="Verse.SimpleCurve" />
      <xs:element minOccurs="0" name="fallAsleepMaxThresholdOverride" type="xs:float" />
      <xs:element minOccurs="0" name="naturalWakeThresholdOverride" type="xs:float" />
      <xs:element minOccurs="0" name="bodyWidth" type="xs:float" />
      <xs:element minOccurs="0" name="bodyDrawOffset" type="UnityEngine.Vector3" />
      <xs:element minOccurs="0" name="headSizeFactor" type="xs:float" />
      <xs:element minOccurs="0" name="eyeSizeFactor" type="xs:float" />
      <xs:element minOccurs="0" name="sittingOffset" type="xs:float" />
      <xs:element minOccurs="0" name="hairStyleFilter" type="Verse.TagFilter" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.TagFilter">
    <xs:all>
      <xs:element minOccurs="0" name="tags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="whitelist" type="xs:boolean" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.MainButtonDef">
    <xs:all>
      <xs:element minOccurs="0" name="workerClass" type="xs:string" />
      <xs:element minOccurs="0" name="tabWindowClass" type="xs:string" />
      <xs:element minOccurs="0" name="buttonVisible" type="xs:boolean" />
      <xs:element minOccurs="0" name="order" type="xs:int" />
      <xs:element minOccurs="0" name="defaultHotKey">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="None" />
            <xs:enumeration value="Backspace" />
            <xs:enumeration value="Delete" />
            <xs:enumeration value="Tab" />
            <xs:enumeration value="Clear" />
            <xs:enumeration value="Return" />
            <xs:enumeration value="Pause" />
            <xs:enumeration value="Escape" />
            <xs:enumeration value="Space" />
            <xs:enumeration value="Keypad0" />
            <xs:enumeration value="Keypad1" />
            <xs:enumeration value="Keypad2" />
            <xs:enumeration value="Keypad3" />
            <xs:enumeration value="Keypad4" />
            <xs:enumeration value="Keypad5" />
            <xs:enumeration value="Keypad6" />
            <xs:enumeration value="Keypad7" />
            <xs:enumeration value="Keypad8" />
            <xs:enumeration value="Keypad9" />
            <xs:enumeration value="KeypadPeriod" />
            <xs:enumeration value="KeypadDivide" />
            <xs:enumeration value="KeypadMultiply" />
            <xs:enumeration value="KeypadMinus" />
            <xs:enumeration value="KeypadPlus" />
            <xs:enumeration value="KeypadEnter" />
            <xs:enumeration value="KeypadEquals" />
            <xs:enumeration value="UpArrow" />
            <xs:enumeration value="DownArrow" />
            <xs:enumeration value="RightArrow" />
            <xs:enumeration value="LeftArrow" />
            <xs:enumeration value="Insert" />
            <xs:enumeration value="Home" />
            <xs:enumeration value="End" />
            <xs:enumeration value="PageUp" />
            <xs:enumeration value="PageDown" />
            <xs:enumeration value="F1" />
            <xs:enumeration value="F2" />
            <xs:enumeration value="F3" />
            <xs:enumeration value="F4" />
            <xs:enumeration value="F5" />
            <xs:enumeration value="F6" />
            <xs:enumeration value="F7" />
            <xs:enumeration value="F8" />
            <xs:enumeration value="F9" />
            <xs:enumeration value="F10" />
            <xs:enumeration value="F11" />
            <xs:enumeration value="F12" />
            <xs:enumeration value="F13" />
            <xs:enumeration value="F14" />
            <xs:enumeration value="F15" />
            <xs:enumeration value="Alpha0" />
            <xs:enumeration value="Alpha1" />
            <xs:enumeration value="Alpha2" />
            <xs:enumeration value="Alpha3" />
            <xs:enumeration value="Alpha4" />
            <xs:enumeration value="Alpha5" />
            <xs:enumeration value="Alpha6" />
            <xs:enumeration value="Alpha7" />
            <xs:enumeration value="Alpha8" />
            <xs:enumeration value="Alpha9" />
            <xs:enumeration value="Exclaim" />
            <xs:enumeration value="DoubleQuote" />
            <xs:enumeration value="Hash" />
            <xs:enumeration value="Dollar" />
            <xs:enumeration value="Percent" />
            <xs:enumeration value="Ampersand" />
            <xs:enumeration value="Quote" />
            <xs:enumeration value="LeftParen" />
            <xs:enumeration value="RightParen" />
            <xs:enumeration value="Asterisk" />
            <xs:enumeration value="Plus" />
            <xs:enumeration value="Comma" />
            <xs:enumeration value="Minus" />
            <xs:enumeration value="Period" />
            <xs:enumeration value="Slash" />
            <xs:enumeration value="Colon" />
            <xs:enumeration value="Semicolon" />
            <xs:enumeration value="Less" />
            <xs:enumeration value="Equals" />
            <xs:enumeration value="Greater" />
            <xs:enumeration value="Question" />
            <xs:enumeration value="At" />
            <xs:enumeration value="LeftBracket" />
            <xs:enumeration value="Backslash" />
            <xs:enumeration value="RightBracket" />
            <xs:enumeration value="Caret" />
            <xs:enumeration value="Underscore" />
            <xs:enumeration value="BackQuote" />
            <xs:enumeration value="A" />
            <xs:enumeration value="B" />
            <xs:enumeration value="C" />
            <xs:enumeration value="D" />
            <xs:enumeration value="E" />
            <xs:enumeration value="F" />
            <xs:enumeration value="G" />
            <xs:enumeration value="H" />
            <xs:enumeration value="I" />
            <xs:enumeration value="J" />
            <xs:enumeration value="K" />
            <xs:enumeration value="L" />
            <xs:enumeration value="M" />
            <xs:enumeration value="N" />
            <xs:enumeration value="O" />
            <xs:enumeration value="P" />
            <xs:enumeration value="Q" />
            <xs:enumeration value="R" />
            <xs:enumeration value="S" />
            <xs:enumeration value="T" />
            <xs:enumeration value="U" />
            <xs:enumeration value="V" />
            <xs:enumeration value="W" />
            <xs:enumeration value="X" />
            <xs:enumeration value="Y" />
            <xs:enumeration value="Z" />
            <xs:enumeration value="LeftCurlyBracket" />
            <xs:enumeration value="Pipe" />
            <xs:enumeration value="RightCurlyBracket" />
            <xs:enumeration value="Tilde" />
            <xs:enumeration value="Numlock" />
            <xs:enumeration value="CapsLock" />
            <xs:enumeration value="ScrollLock" />
            <xs:enumeration value="RightShift" />
            <xs:enumeration value="LeftShift" />
            <xs:enumeration value="RightControl" />
            <xs:enumeration value="LeftControl" />
            <xs:enumeration value="RightAlt" />
            <xs:enumeration value="LeftAlt" />
            <xs:enumeration value="LeftCommand" />
            <xs:enumeration value="LeftApple" />
            <xs:enumeration value="LeftWindows" />
            <xs:enumeration value="RightCommand" />
            <xs:enumeration value="RightApple" />
            <xs:enumeration value="RightWindows" />
            <xs:enumeration value="AltGr" />
            <xs:enumeration value="Help" />
            <xs:enumeration value="Print" />
            <xs:enumeration value="SysReq" />
            <xs:enumeration value="Break" />
            <xs:enumeration value="Menu" />
            <xs:enumeration value="Mouse0" />
            <xs:enumeration value="Mouse1" />
            <xs:enumeration value="Mouse2" />
            <xs:enumeration value="Mouse3" />
            <xs:enumeration value="Mouse4" />
            <xs:enumeration value="Mouse5" />
            <xs:enumeration value="Mouse6" />
            <xs:enumeration value="JoystickButton0" />
            <xs:enumeration value="JoystickButton1" />
            <xs:enumeration value="JoystickButton2" />
            <xs:enumeration value="JoystickButton3" />
            <xs:enumeration value="JoystickButton4" />
            <xs:enumeration value="JoystickButton5" />
            <xs:enumeration value="JoystickButton6" />
            <xs:enumeration value="JoystickButton7" />
            <xs:enumeration value="JoystickButton8" />
            <xs:enumeration value="JoystickButton9" />
            <xs:enumeration value="JoystickButton10" />
            <xs:enumeration value="JoystickButton11" />
            <xs:enumeration value="JoystickButton12" />
            <xs:enumeration value="JoystickButton13" />
            <xs:enumeration value="JoystickButton14" />
            <xs:enumeration value="JoystickButton15" />
            <xs:enumeration value="JoystickButton16" />
            <xs:enumeration value="JoystickButton17" />
            <xs:enumeration value="JoystickButton18" />
            <xs:enumeration value="JoystickButton19" />
            <xs:enumeration value="Joystick1Button0" />
            <xs:enumeration value="Joystick1Button1" />
            <xs:enumeration value="Joystick1Button2" />
            <xs:enumeration value="Joystick1Button3" />
            <xs:enumeration value="Joystick1Button4" />
            <xs:enumeration value="Joystick1Button5" />
            <xs:enumeration value="Joystick1Button6" />
            <xs:enumeration value="Joystick1Button7" />
            <xs:enumeration value="Joystick1Button8" />
            <xs:enumeration value="Joystick1Button9" />
            <xs:enumeration value="Joystick1Button10" />
            <xs:enumeration value="Joystick1Button11" />
            <xs:enumeration value="Joystick1Button12" />
            <xs:enumeration value="Joystick1Button13" />
            <xs:enumeration value="Joystick1Button14" />
            <xs:enumeration value="Joystick1Button15" />
            <xs:enumeration value="Joystick1Button16" />
            <xs:enumeration value="Joystick1Button17" />
            <xs:enumeration value="Joystick1Button18" />
            <xs:enumeration value="Joystick1Button19" />
            <xs:enumeration value="Joystick2Button0" />
            <xs:enumeration value="Joystick2Button1" />
            <xs:enumeration value="Joystick2Button2" />
            <xs:enumeration value="Joystick2Button3" />
            <xs:enumeration value="Joystick2Button4" />
            <xs:enumeration value="Joystick2Button5" />
            <xs:enumeration value="Joystick2Button6" />
            <xs:enumeration value="Joystick2Button7" />
            <xs:enumeration value="Joystick2Button8" />
            <xs:enumeration value="Joystick2Button9" />
            <xs:enumeration value="Joystick2Button10" />
            <xs:enumeration value="Joystick2Button11" />
            <xs:enumeration value="Joystick2Button12" />
            <xs:enumeration value="Joystick2Button13" />
            <xs:enumeration value="Joystick2Button14" />
            <xs:enumeration value="Joystick2Button15" />
            <xs:enumeration value="Joystick2Button16" />
            <xs:enumeration value="Joystick2Button17" />
            <xs:enumeration value="Joystick2Button18" />
            <xs:enumeration value="Joystick2Button19" />
            <xs:enumeration value="Joystick3Button0" />
            <xs:enumeration value="Joystick3Button1" />
            <xs:enumeration value="Joystick3Button2" />
            <xs:enumeration value="Joystick3Button3" />
            <xs:enumeration value="Joystick3Button4" />
            <xs:enumeration value="Joystick3Button5" />
            <xs:enumeration value="Joystick3Button6" />
            <xs:enumeration value="Joystick3Button7" />
            <xs:enumeration value="Joystick3Button8" />
            <xs:enumeration value="Joystick3Button9" />
            <xs:enumeration value="Joystick3Button10" />
            <xs:enumeration value="Joystick3Button11" />
            <xs:enumeration value="Joystick3Button12" />
            <xs:enumeration value="Joystick3Button13" />
            <xs:enumeration value="Joystick3Button14" />
            <xs:enumeration value="Joystick3Button15" />
            <xs:enumeration value="Joystick3Button16" />
            <xs:enumeration value="Joystick3Button17" />
            <xs:enumeration value="Joystick3Button18" />
            <xs:enumeration value="Joystick3Button19" />
            <xs:enumeration value="Joystick4Button0" />
            <xs:enumeration value="Joystick4Button1" />
            <xs:enumeration value="Joystick4Button2" />
            <xs:enumeration value="Joystick4Button3" />
            <xs:enumeration value="Joystick4Button4" />
            <xs:enumeration value="Joystick4Button5" />
            <xs:enumeration value="Joystick4Button6" />
            <xs:enumeration value="Joystick4Button7" />
            <xs:enumeration value="Joystick4Button8" />
            <xs:enumeration value="Joystick4Button9" />
            <xs:enumeration value="Joystick4Button10" />
            <xs:enumeration value="Joystick4Button11" />
            <xs:enumeration value="Joystick4Button12" />
            <xs:enumeration value="Joystick4Button13" />
            <xs:enumeration value="Joystick4Button14" />
            <xs:enumeration value="Joystick4Button15" />
            <xs:enumeration value="Joystick4Button16" />
            <xs:enumeration value="Joystick4Button17" />
            <xs:enumeration value="Joystick4Button18" />
            <xs:enumeration value="Joystick4Button19" />
            <xs:enumeration value="Joystick5Button0" />
            <xs:enumeration value="Joystick5Button1" />
            <xs:enumeration value="Joystick5Button2" />
            <xs:enumeration value="Joystick5Button3" />
            <xs:enumeration value="Joystick5Button4" />
            <xs:enumeration value="Joystick5Button5" />
            <xs:enumeration value="Joystick5Button6" />
            <xs:enumeration value="Joystick5Button7" />
            <xs:enumeration value="Joystick5Button8" />
            <xs:enumeration value="Joystick5Button9" />
            <xs:enumeration value="Joystick5Button10" />
            <xs:enumeration value="Joystick5Button11" />
            <xs:enumeration value="Joystick5Button12" />
            <xs:enumeration value="Joystick5Button13" />
            <xs:enumeration value="Joystick5Button14" />
            <xs:enumeration value="Joystick5Button15" />
            <xs:enumeration value="Joystick5Button16" />
            <xs:enumeration value="Joystick5Button17" />
            <xs:enumeration value="Joystick5Button18" />
            <xs:enumeration value="Joystick5Button19" />
            <xs:enumeration value="Joystick6Button0" />
            <xs:enumeration value="Joystick6Button1" />
            <xs:enumeration value="Joystick6Button2" />
            <xs:enumeration value="Joystick6Button3" />
            <xs:enumeration value="Joystick6Button4" />
            <xs:enumeration value="Joystick6Button5" />
            <xs:enumeration value="Joystick6Button6" />
            <xs:enumeration value="Joystick6Button7" />
            <xs:enumeration value="Joystick6Button8" />
            <xs:enumeration value="Joystick6Button9" />
            <xs:enumeration value="Joystick6Button10" />
            <xs:enumeration value="Joystick6Button11" />
            <xs:enumeration value="Joystick6Button12" />
            <xs:enumeration value="Joystick6Button13" />
            <xs:enumeration value="Joystick6Button14" />
            <xs:enumeration value="Joystick6Button15" />
            <xs:enumeration value="Joystick6Button16" />
            <xs:enumeration value="Joystick6Button17" />
            <xs:enumeration value="Joystick6Button18" />
            <xs:enumeration value="Joystick6Button19" />
            <xs:enumeration value="Joystick7Button0" />
            <xs:enumeration value="Joystick7Button1" />
            <xs:enumeration value="Joystick7Button2" />
            <xs:enumeration value="Joystick7Button3" />
            <xs:enumeration value="Joystick7Button4" />
            <xs:enumeration value="Joystick7Button5" />
            <xs:enumeration value="Joystick7Button6" />
            <xs:enumeration value="Joystick7Button7" />
            <xs:enumeration value="Joystick7Button8" />
            <xs:enumeration value="Joystick7Button9" />
            <xs:enumeration value="Joystick7Button10" />
            <xs:enumeration value="Joystick7Button11" />
            <xs:enumeration value="Joystick7Button12" />
            <xs:enumeration value="Joystick7Button13" />
            <xs:enumeration value="Joystick7Button14" />
            <xs:enumeration value="Joystick7Button15" />
            <xs:enumeration value="Joystick7Button16" />
            <xs:enumeration value="Joystick7Button17" />
            <xs:enumeration value="Joystick7Button18" />
            <xs:enumeration value="Joystick7Button19" />
            <xs:enumeration value="Joystick8Button0" />
            <xs:enumeration value="Joystick8Button1" />
            <xs:enumeration value="Joystick8Button2" />
            <xs:enumeration value="Joystick8Button3" />
            <xs:enumeration value="Joystick8Button4" />
            <xs:enumeration value="Joystick8Button5" />
            <xs:enumeration value="Joystick8Button6" />
            <xs:enumeration value="Joystick8Button7" />
            <xs:enumeration value="Joystick8Button8" />
            <xs:enumeration value="Joystick8Button9" />
            <xs:enumeration value="Joystick8Button10" />
            <xs:enumeration value="Joystick8Button11" />
            <xs:enumeration value="Joystick8Button12" />
            <xs:enumeration value="Joystick8Button13" />
            <xs:enumeration value="Joystick8Button14" />
            <xs:enumeration value="Joystick8Button15" />
            <xs:enumeration value="Joystick8Button16" />
            <xs:enumeration value="Joystick8Button17" />
            <xs:enumeration value="Joystick8Button18" />
            <xs:enumeration value="Joystick8Button19" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="canBeTutorDenied" type="xs:boolean" />
      <xs:element minOccurs="0" name="validWithoutMap" type="xs:boolean" />
      <xs:element minOccurs="0" name="minimized" type="xs:boolean" />
      <xs:element minOccurs="0" name="iconPath" type="xs:string" />
      <xs:element minOccurs="0" name="closesWorldView" type="xs:boolean" />
      <xs:element minOccurs="0" name="validWithClassicIdeo" type="xs:boolean" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.MeditationFocusDef">
    <xs:all>
      <xs:element minOccurs="0" name="requiresRoyalTitle" type="xs:boolean" />
      <xs:element minOccurs="0" name="requiredBackstoriesAny">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.BackstoryCategoryAndSlot" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="incompatibleBackstoriesAny">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.BackstoryCategoryAndSlot" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.BackstoryCategoryAndSlot">
    <xs:all>
      <xs:element minOccurs="0" name="categoryName" type="xs:string" />
      <xs:element minOccurs="0" name="slot">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Childhood" />
            <xs:enumeration value="Adulthood" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.MemeDef">
    <xs:all>
      <xs:element minOccurs="0" name="iconPath" type="xs:string" />
      <xs:element minOccurs="0" name="renderOrder" type="xs:int" />
      <xs:element minOccurs="0" name="impact" type="xs:int" />
      <xs:element minOccurs="0" name="category">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Normal" />
            <xs:enumeration value="Structure" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="groupDef" type="xs:string" />
      <xs:element minOccurs="0" name="exclusionTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="requireOne">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li">
              <xs:complexType>
                <xs:choice minOccurs="0" maxOccurs="unbounded">
                  <xs:element name="li" type="xs:string" />
                </xs:choice>
              </xs:complexType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="selectOneOrNone" type="RimWorld.PreceptsWithNoneChance" />
      <xs:element minOccurs="0" name="requiredRituals">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.RequiredRitualAndBuilding" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="preferredWeaponClasses" type="RimWorld.IdeoWeaponClassPair" />
      <xs:element minOccurs="0" name="randomizationSelectionWeightFactor" type="xs:float" />
      <xs:element minOccurs="0" name="requireAnyRitualSeat">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="deityCount" type="Verse.IntRange" />
      <xs:element minOccurs="0" name="allowDuringTutorial" type="xs:boolean" />
      <xs:element minOccurs="0" name="generalRules" type="Verse.Grammar.RulePack" />
      <xs:element minOccurs="0" name="descriptionMaker" type="RimWorld.IdeoDescriptionMaker" />
      <xs:element minOccurs="0" name="deityNameMakerOverride" type="xs:string" />
      <xs:element minOccurs="0" name="deityTypeMakerOverride" type="xs:string" />
      <xs:element minOccurs="0" name="allowSymbolsFromDeity" type="xs:boolean" />
      <xs:element minOccurs="0" name="symbolPackOverride" type="xs:boolean" />
      <xs:element minOccurs="0" name="symbolPacks">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.IdeoSymbolPack" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="fixedDeityNameTypes">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.DeityNameType" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="thingStyleCategories">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.ThingStyleCategoryWithPriority" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="ritualsToMake" type="Verse.IntRange" />
      <xs:element minOccurs="0" name="replaceRitualsWithTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="replacementPatterns">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="consumableBuildings">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="veneratedAnimalsCountOffset" type="xs:int" />
      <xs:element minOccurs="0" name="veneratedAnimalsCountOverride" type="xs:int" />
      <xs:element minOccurs="0" name="styleItemTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.StyleItemTagWeighted" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="worshipRoomLabel" type="xs:string" />
      <xs:element minOccurs="0" name="startingResearchProjects">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="addDesignators">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.BuildableDef" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="addDesignatorGroups">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="apparelRequirements">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.PreceptApparelRequirement" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="agreeableTraits" type="Verse.TraitRequirement" />
      <xs:element minOccurs="0" name="disagreeableTraits" type="Verse.TraitRequirement" />
      <xs:element minOccurs="0" name="preventApparelRequirements" type="xs:boolean" />
      <xs:element minOccurs="0" name="xenotypeSet" type="RimWorld.XenotypeSet" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.PreceptsWithNoneChance">
    <xs:all>
      <xs:element minOccurs="0" name="preceptThingPairs">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.PreceptThingPair" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="noneChance" type="xs:float" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.PreceptThingPair">
    <xs:all>
      <xs:element minOccurs="0" name="precept" type="xs:string" />
      <xs:element minOccurs="0" name="thing" type="xs:string" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.RequiredRitualAndBuilding">
    <xs:all>
      <xs:element minOccurs="0" name="precept" type="xs:string" />
      <xs:element minOccurs="0" name="pattern" type="xs:string" />
      <xs:element minOccurs="0" name="building" type="xs:string" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.IdeoDescriptionMaker">
    <xs:all>
      <xs:element minOccurs="0" name="patterns">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.IdeoDescriptionMaker.PatternEntry" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="rules" type="Verse.Grammar.RulePack" />
      <xs:element minOccurs="0" name="constants">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="key" type="xs:string" />
                  <xs:element name="value" type="xs:string" />
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.IdeoDescriptionMaker.PatternEntry">
    <xs:all>
      <xs:element minOccurs="0" name="def" type="xs:string" />
      <xs:element minOccurs="0" name="weight" type="xs:float" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.IdeoSymbolPack">
    <xs:all>
      <xs:element minOccurs="0" name="ideoName" type="xs:string" />
      <xs:element minOccurs="0" name="theme" type="xs:string" />
      <xs:element minOccurs="0" name="adjective" type="xs:string" />
      <xs:element minOccurs="0" name="member" type="xs:string" />
      <xs:element minOccurs="0" name="prefix" type="xs:boolean" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.DeityNameType">
    <xs:all>
      <xs:element minOccurs="0" name="name" type="xs:string" />
      <xs:element minOccurs="0" name="type" type="xs:string" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.BuildableDef">
    <xs:all>
      <xs:element minOccurs="0" name="statBases" type="RimWorld.StatModifier" />
      <xs:element minOccurs="0" name="passability">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Standable" />
            <xs:enumeration value="PassThroughOnly" />
            <xs:enumeration value="Impassable" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="pathCost" type="xs:int" />
      <xs:element minOccurs="0" name="pathCostIgnoreRepeat" type="xs:boolean" />
      <xs:element minOccurs="0" name="fertility" type="xs:float" />
      <xs:element minOccurs="0" name="costList" type="Verse.ThingDefCountClass" />
      <xs:element minOccurs="0" name="costStuffCount" type="xs:int" />
      <xs:element minOccurs="0" name="stuffCategories">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="stuffCategorySummary" type="xs:string" />
      <xs:element minOccurs="0" name="costListForDifficulty" type="Verse.CostListForDifficulty" />
      <xs:element minOccurs="0" name="placingDraggableDimensions" type="xs:int" />
      <xs:element minOccurs="0" name="clearBuildingArea" type="xs:boolean" />
      <xs:element minOccurs="0" name="defaultPlacingRot" type="Verse.Rot4" />
      <xs:element minOccurs="0" name="resourcesFractionWhenDeconstructed" type="xs:float" />
      <xs:element minOccurs="0" name="blocksAltitudes">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="Terrain" />
                  <xs:enumeration value="TerrainScatter" />
                  <xs:enumeration value="Floor" />
                  <xs:enumeration value="Conduits" />
                  <xs:enumeration value="FloorCoverings" />
                  <xs:enumeration value="FloorEmplacement" />
                  <xs:enumeration value="Filth" />
                  <xs:enumeration value="Zone" />
                  <xs:enumeration value="SmallWire" />
                  <xs:enumeration value="LowPlant" />
                  <xs:enumeration value="MoteLow" />
                  <xs:enumeration value="Shadows" />
                  <xs:enumeration value="DoorMoveable" />
                  <xs:enumeration value="Building" />
                  <xs:enumeration value="BuildingBelowTop" />
                  <xs:enumeration value="BuildingOnTop" />
                  <xs:enumeration value="Item" />
                  <xs:enumeration value="ItemImportant" />
                  <xs:enumeration value="LayingPawn" />
                  <xs:enumeration value="PawnRope" />
                  <xs:enumeration value="Projectile" />
                  <xs:enumeration value="Pawn" />
                  <xs:enumeration value="PawnUnused" />
                  <xs:enumeration value="PawnState" />
                  <xs:enumeration value="Blueprint" />
                  <xs:enumeration value="MoteOverheadLow" />
                  <xs:enumeration value="MoteOverhead" />
                  <xs:enumeration value="Gas" />
                  <xs:enumeration value="Skyfaller" />
                  <xs:enumeration value="Weather" />
                  <xs:enumeration value="LightingOverlay" />
                  <xs:enumeration value="VisEffects" />
                  <xs:enumeration value="FogOfWar" />
                  <xs:enumeration value="WorldClipper" />
                  <xs:enumeration value="MapDataOverlay" />
                  <xs:enumeration value="MetaOverlays" />
                  <xs:enumeration value="_Count" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="dominantStyleCategory" type="xs:string" />
      <xs:element minOccurs="0" name="isAltar" type="xs:boolean" />
      <xs:element minOccurs="0" name="useStuffTerrainAffordance" type="xs:boolean" />
      <xs:element minOccurs="0" name="terrainAffordanceNeeded" type="xs:string" />
      <xs:element minOccurs="0" name="buildingPrerequisites">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="researchPrerequisites">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="constructionSkillPrerequisite" type="xs:int" />
      <xs:element minOccurs="0" name="artisticSkillPrerequisite" type="xs:int" />
      <xs:element minOccurs="0" name="minTechLevelToBuild">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Undefined" />
            <xs:enumeration value="Animal" />
            <xs:enumeration value="Neolithic" />
            <xs:enumeration value="Medieval" />
            <xs:enumeration value="Industrial" />
            <xs:enumeration value="Spacer" />
            <xs:enumeration value="Ultra" />
            <xs:enumeration value="Archotech" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="maxTechLevelToBuild">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Undefined" />
            <xs:enumeration value="Animal" />
            <xs:enumeration value="Neolithic" />
            <xs:enumeration value="Medieval" />
            <xs:enumeration value="Industrial" />
            <xs:enumeration value="Spacer" />
            <xs:enumeration value="Ultra" />
            <xs:enumeration value="Archotech" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="altitudeLayer">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Terrain" />
            <xs:enumeration value="TerrainScatter" />
            <xs:enumeration value="Floor" />
            <xs:enumeration value="Conduits" />
            <xs:enumeration value="FloorCoverings" />
            <xs:enumeration value="FloorEmplacement" />
            <xs:enumeration value="Filth" />
            <xs:enumeration value="Zone" />
            <xs:enumeration value="SmallWire" />
            <xs:enumeration value="LowPlant" />
            <xs:enumeration value="MoteLow" />
            <xs:enumeration value="Shadows" />
            <xs:enumeration value="DoorMoveable" />
            <xs:enumeration value="Building" />
            <xs:enumeration value="BuildingBelowTop" />
            <xs:enumeration value="BuildingOnTop" />
            <xs:enumeration value="Item" />
            <xs:enumeration value="ItemImportant" />
            <xs:enumeration value="LayingPawn" />
            <xs:enumeration value="PawnRope" />
            <xs:enumeration value="Projectile" />
            <xs:enumeration value="Pawn" />
            <xs:enumeration value="PawnUnused" />
            <xs:enumeration value="PawnState" />
            <xs:enumeration value="Blueprint" />
            <xs:enumeration value="MoteOverheadLow" />
            <xs:enumeration value="MoteOverhead" />
            <xs:enumeration value="Gas" />
            <xs:enumeration value="Skyfaller" />
            <xs:enumeration value="Weather" />
            <xs:enumeration value="LightingOverlay" />
            <xs:enumeration value="VisEffects" />
            <xs:enumeration value="FogOfWar" />
            <xs:enumeration value="WorldClipper" />
            <xs:enumeration value="MapDataOverlay" />
            <xs:enumeration value="MetaOverlays" />
            <xs:enumeration value="_Count" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="repairEffect" type="xs:string" />
      <xs:element minOccurs="0" name="constructEffect" type="xs:string" />
      <xs:element minOccurs="0" name="colorPerStuff">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.ColorForStuff" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="canGenerateDefaultDesignator" type="xs:boolean" />
      <xs:element minOccurs="0" name="ideoBuilding" type="xs:boolean" />
      <xs:element minOccurs="0" name="specialDisplayRadius" type="xs:float" />
      <xs:element minOccurs="0" name="placeWorkers">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="designationCategory" type="xs:string" />
      <xs:element minOccurs="0" name="designatorDropdown" type="xs:string" />
      <xs:element minOccurs="0" name="designationHotKey" type="xs:string" />
      <xs:element minOccurs="0" name="uiOrder" type="xs:float" />
      <xs:element minOccurs="0" name="uiIconPath" type="xs:string" />
      <xs:element minOccurs="0" name="uiIconPathsStuff">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.IconForStuffAppearance" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="uiIconOffset" type="UnityEngine.Vector2" />
      <xs:element minOccurs="0" name="uiIconColor" type="UnityEngine.Color" />
      <xs:element minOccurs="0" name="uiIconForStackCount" type="xs:int" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.ThingDefCountClass">
    <xs:sequence>
      <xs:any minOccurs="0" processContents="skip" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Verse.CostListForDifficulty">
    <xs:all>
      <xs:element minOccurs="0" name="difficultyVar" type="xs:string" />
      <xs:element minOccurs="0" name="costList" type="Verse.ThingDefCountClass" />
      <xs:element minOccurs="0" name="costStuffCount" type="xs:int" />
      <xs:element minOccurs="0" name="invert" type="xs:boolean" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.ColorForStuff">
    <xs:all />
  </xs:complexType>
  <xs:complexType name="Verse.IconForStuffAppearance">
    <xs:all />
  </xs:complexType>
  <xs:complexType name="RimWorld.PreceptApparelRequirement">
    <xs:all>
      <xs:element minOccurs="0" name="allowedFactionCategoryTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="disallowedFactionCategoryTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="anyMemeRequired">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="requirement" type="RimWorld.ApparelRequirement" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.ApparelRequirement">
    <xs:all>
      <xs:element minOccurs="0" name="bodyPartGroupsMatchAny">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="requiredTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="allowedTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="requiredDefs">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="groupLabel" type="xs:string" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.TraitRequirement">
    <xs:sequence>
      <xs:any minOccurs="0" processContents="skip" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="RimWorld.MemeGroupDef">
    <xs:all>
      <xs:element minOccurs="0" name="drawOffset" type="UnityEngine.Vector2" />
      <xs:element minOccurs="0" name="maxRows" type="xs:int" />
      <xs:element minOccurs="0" name="renderOrder" type="xs:int" />
      <xs:element minOccurs="0" name="renderWithGap" type="xs:boolean" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.NeedDef">
    <xs:all>
      <xs:element minOccurs="0" name="needClass" type="xs:string" />
      <xs:element minOccurs="0" name="minIntelligence">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Animal" />
            <xs:enumeration value="ToolUser" />
            <xs:enumeration value="Humanlike" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="colonistAndPrisonersOnly" type="xs:boolean" />
      <xs:element minOccurs="0" name="playerMechsOnly" type="xs:boolean" />
      <xs:element minOccurs="0" name="colonistsOnly" type="xs:boolean" />
      <xs:element minOccurs="0" name="slavesOnly" type="xs:boolean" />
      <xs:element minOccurs="0" name="onlyIfCausedByHediff" type="xs:boolean" />
      <xs:element minOccurs="0" name="onlyIfCausedByGene" type="xs:boolean" />
      <xs:element minOccurs="0" name="onlyIfCausedByTrait" type="xs:boolean" />
      <xs:element minOccurs="0" name="neverOnPrisoner" type="xs:boolean" />
      <xs:element minOccurs="0" name="neverOnSlave" type="xs:boolean" />
      <xs:element minOccurs="0" name="titleRequiredAny">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="hediffRequiredAny">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="nullifyingPrecepts">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="developmentalStageFilter">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="None" />
                  <xs:enumeration value="Newborn" />
                  <xs:enumeration value="Baby" />
                  <xs:enumeration value="Child" />
                  <xs:enumeration value="Adult" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="showOnNeedList" type="xs:boolean" />
      <xs:element minOccurs="0" name="baseLevel" type="xs:float" />
      <xs:element minOccurs="0" name="major" type="xs:boolean" />
      <xs:element minOccurs="0" name="listPriority" type="xs:int" />
      <xs:element minOccurs="0" name="tutorHighlightTag" type="xs:string" />
      <xs:element minOccurs="0" name="showForCaravanMembers" type="xs:boolean" />
      <xs:element minOccurs="0" name="scaleBar" type="xs:boolean" />
      <xs:element minOccurs="0" name="showUnitTicks" type="xs:boolean" />
      <xs:element minOccurs="0" name="fallPerDay" type="xs:float" />
      <xs:element minOccurs="0" name="seekerRisePerHour" type="xs:float" />
      <xs:element minOccurs="0" name="seekerFallPerHour" type="xs:float" />
      <xs:element minOccurs="0" name="freezeWhileSleeping" type="xs:boolean" />
      <xs:element minOccurs="0" name="freezeInMentalState" type="xs:boolean" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.PawnColumnDef">
    <xs:all>
      <xs:element minOccurs="0" name="workerClass" type="xs:string" />
      <xs:element minOccurs="0" name="sortable" type="xs:boolean" />
      <xs:element minOccurs="0" name="ignoreWhenCalculatingOptimalTableSize" type="xs:boolean" />
      <xs:element minOccurs="0" name="headerIcon" type="xs:string" />
      <xs:element minOccurs="0" name="headerIconSize" type="UnityEngine.Vector2" />
      <xs:element minOccurs="0" name="headerTip" type="xs:string" />
      <xs:element minOccurs="0" name="headerAlwaysInteractable" type="xs:boolean" />
      <xs:element minOccurs="0" name="paintable" type="xs:boolean" />
      <xs:element minOccurs="0" name="groupable" type="xs:boolean" />
      <xs:element minOccurs="0" name="trainable" type="xs:string" />
      <xs:element minOccurs="0" name="gap" type="xs:int" />
      <xs:element minOccurs="0" name="workType" type="xs:string" />
      <xs:element minOccurs="0" name="moveWorkTypeLabelDown" type="xs:boolean" />
      <xs:element minOccurs="0" name="showIcon" type="xs:boolean" />
      <xs:element minOccurs="0" name="useLabelShort" type="xs:boolean" />
      <xs:element minOccurs="0" name="widthPriority" type="xs:int" />
      <xs:element minOccurs="0" name="width" type="xs:int" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.PawnGroupKindDef">
    <xs:all>
      <xs:element minOccurs="0" name="workerClass" type="xs:string" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.PawnRelationDef">
    <xs:all>
      <xs:element minOccurs="0" name="workerClass" type="xs:string" />
      <xs:element minOccurs="0" name="labelFemale" type="xs:string" />
      <xs:element minOccurs="0" name="importance" type="xs:float" />
      <xs:element minOccurs="0" name="implied" type="xs:boolean" />
      <xs:element minOccurs="0" name="reflexive" type="xs:boolean" />
      <xs:element minOccurs="0" name="opinionOffset" type="xs:int" />
      <xs:element minOccurs="0" name="generationChanceFactor" type="xs:float" />
      <xs:element minOccurs="0" name="romanceChanceFactor" type="xs:float" />
      <xs:element minOccurs="0" name="incestOpinionOffset" type="xs:float" />
      <xs:element minOccurs="0" name="familyByBloodRelation" type="xs:boolean" />
      <xs:element minOccurs="0" name="removeOnDeath" type="xs:boolean" />
      <xs:element minOccurs="0" name="inbredChanceOnChild" type="xs:float" />
      <xs:element minOccurs="0" name="diedThought" type="xs:string" />
      <xs:element minOccurs="0" name="diedThoughtFemale" type="xs:string" />
      <xs:element minOccurs="0" name="lostThought" type="xs:string" />
      <xs:element minOccurs="0" name="lostThoughtFemale" type="xs:string" />
      <xs:element minOccurs="0" name="soldThoughts">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="killedThought" type="xs:string" />
      <xs:element minOccurs="0" name="killedThoughtFemale" type="xs:string" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.PawnsArrivalModeDef">
    <xs:all>
      <xs:element minOccurs="0" name="workerClass" type="xs:string" />
      <xs:element minOccurs="0" name="selectionWeightCurve" type="Verse.SimpleCurve" />
      <xs:element minOccurs="0" name="pointsFactorCurve" type="Verse.SimpleCurve" />
      <xs:element minOccurs="0" name="minTechLevel">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Undefined" />
            <xs:enumeration value="Animal" />
            <xs:enumeration value="Neolithic" />
            <xs:enumeration value="Medieval" />
            <xs:enumeration value="Industrial" />
            <xs:enumeration value="Spacer" />
            <xs:enumeration value="Ultra" />
            <xs:enumeration value="Archotech" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="forQuickMilitaryAid" type="xs:boolean" />
      <xs:element minOccurs="0" name="walkIn" type="xs:boolean" />
      <xs:element minOccurs="0" name="textEnemy" type="xs:string" />
      <xs:element minOccurs="0" name="textFriendly" type="xs:string" />
      <xs:element minOccurs="0" name="textWillArrive" type="xs:string" />
      <xs:element minOccurs="0" name="selectionWeightCurvesPerFaction">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.FactionCurve" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.FactionCurve">
    <xs:all>
      <xs:element minOccurs="0" name="faction" type="xs:string" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.PawnTableDef">
    <xs:all>
      <xs:element minOccurs="0" name="columns">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="workerClass" type="xs:string" />
      <xs:element minOccurs="0" name="minWidth" type="xs:int" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.PreceptDef">
    <xs:all>
      <xs:element minOccurs="0" name="preceptClass" type="xs:string" />
      <xs:element minOccurs="0" name="issue" type="xs:string" />
      <xs:element minOccurs="0" name="comps">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.PreceptComp" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="abilityStatFactors">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.AbilityStatModifiers" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="statOffsets" type="RimWorld.StatModifier" />
      <xs:element minOccurs="0" name="statFactors" type="RimWorld.StatModifier" />
      <xs:element minOccurs="0" name="conditionalStatAffecters">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.ConditionalStatAffecter" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="selectionWeight" type="xs:float" />
      <xs:element minOccurs="0" name="opposedWorkTypes">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="impact">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Low" />
            <xs:enumeration value="Medium" />
            <xs:enumeration value="High" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="associatedMemes">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="conflictingMemes">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="requiredMemes">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="visible" type="xs:boolean" />
      <xs:element minOccurs="0" name="listedForRoles" type="xs:boolean" />
      <xs:element minOccurs="0" name="takeNameFrom" type="xs:string" />
      <xs:element minOccurs="0" name="alsoAdds" type="xs:string" />
      <xs:element minOccurs="0" name="maxCount" type="xs:int" />
      <xs:element minOccurs="0" name="exclusionTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="allowDuplicates" type="xs:boolean" />
      <xs:element minOccurs="0" name="ignoreLimitsInEditMode" type="xs:boolean" />
      <xs:element minOccurs="0" name="canUseAlreadyUsedThingDef" type="xs:boolean" />
      <xs:element minOccurs="0" name="classic" type="xs:boolean" />
      <xs:element minOccurs="0" name="classicExtra" type="xs:boolean" />
      <xs:element minOccurs="0" name="defaultSelectionWeight" type="xs:float" />
      <xs:element minOccurs="0" name="enabledForNPCFactions" type="xs:boolean" />
      <xs:element minOccurs="0" name="countsTowardsPreceptLimit" type="xs:boolean" />
      <xs:element minOccurs="0" name="canGenerateAsSpecialPrecept" type="xs:boolean" />
      <xs:element minOccurs="0" name="nameMaker" type="xs:string" />
      <xs:element minOccurs="0" name="nameMaxLength" type="xs:int" />
      <xs:element minOccurs="0" name="preceptInstanceCountCurve" type="Verse.SimpleCurve" />
      <xs:element minOccurs="0" name="ritualPatternBase" type="xs:string" />
      <xs:element minOccurs="0" name="receivesExpectationsQualityOffset" type="xs:boolean" />
      <xs:element minOccurs="0" name="usesIdeoVisualEffects" type="xs:boolean" />
      <xs:element minOccurs="0" name="mergeRitualGizmosFromAllIdeos" type="xs:boolean" />
      <xs:element minOccurs="0" name="allowSpectatorsFromOtherIdeos" type="xs:boolean" />
      <xs:element minOccurs="0" name="allowOptionalRitualObligations" type="xs:boolean" />
      <xs:element minOccurs="0" name="classicModeOnly" type="xs:boolean" />
      <xs:element minOccurs="0" name="buildingDefChances" type="RimWorld.PreceptThingChanceClass" />
      <xs:element minOccurs="0" name="buildingMinExpectations">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="buildingRoomRequirements">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.RoomRequirement" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="buildingRoomRequirementsFixed">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.RoomRequirement" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="roomRequirementCountCurve" type="Verse.SimpleCurve" />
      <xs:element minOccurs="0" name="leaderRole" type="xs:boolean" />
      <xs:element minOccurs="0" name="activationBelieverCount" type="xs:int" />
      <xs:element minOccurs="0" name="deactivationBelieverCount" type="xs:int" />
      <xs:element minOccurs="0" name="roleRequirements">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.RoleRequirement" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="roleDisabledWorkTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="None" />
                  <xs:enumeration value="ManualDumb" />
                  <xs:enumeration value="ManualSkilled" />
                  <xs:enumeration value="Violent" />
                  <xs:enumeration value="Caring" />
                  <xs:enumeration value="Social" />
                  <xs:enumeration value="Commoner" />
                  <xs:enumeration value="Intellectual" />
                  <xs:enumeration value="Animals" />
                  <xs:enumeration value="Artistic" />
                  <xs:enumeration value="Crafting" />
                  <xs:enumeration value="Cooking" />
                  <xs:enumeration value="Firefighting" />
                  <xs:enumeration value="Cleaning" />
                  <xs:enumeration value="Hauling" />
                  <xs:enumeration value="PlantWork" />
                  <xs:enumeration value="Mining" />
                  <xs:enumeration value="Hunting" />
                  <xs:enumeration value="Constructing" />
                  <xs:enumeration value="Shooting" />
                  <xs:enumeration value="AllWork" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="roleRequiredWorkTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="None" />
                  <xs:enumeration value="ManualDumb" />
                  <xs:enumeration value="ManualSkilled" />
                  <xs:enumeration value="Violent" />
                  <xs:enumeration value="Caring" />
                  <xs:enumeration value="Social" />
                  <xs:enumeration value="Commoner" />
                  <xs:enumeration value="Intellectual" />
                  <xs:enumeration value="Animals" />
                  <xs:enumeration value="Artistic" />
                  <xs:enumeration value="Crafting" />
                  <xs:enumeration value="Cooking" />
                  <xs:enumeration value="Firefighting" />
                  <xs:enumeration value="Cleaning" />
                  <xs:enumeration value="Hauling" />
                  <xs:enumeration value="PlantWork" />
                  <xs:enumeration value="Mining" />
                  <xs:enumeration value="Hunting" />
                  <xs:enumeration value="Constructing" />
                  <xs:enumeration value="Shooting" />
                  <xs:enumeration value="AllWork" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="roleRequiredWorkTagAny">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="None" />
                  <xs:enumeration value="ManualDumb" />
                  <xs:enumeration value="ManualSkilled" />
                  <xs:enumeration value="Violent" />
                  <xs:enumeration value="Caring" />
                  <xs:enumeration value="Social" />
                  <xs:enumeration value="Commoner" />
                  <xs:enumeration value="Intellectual" />
                  <xs:enumeration value="Animals" />
                  <xs:enumeration value="Artistic" />
                  <xs:enumeration value="Crafting" />
                  <xs:enumeration value="Cooking" />
                  <xs:enumeration value="Firefighting" />
                  <xs:enumeration value="Cleaning" />
                  <xs:enumeration value="Hauling" />
                  <xs:enumeration value="PlantWork" />
                  <xs:enumeration value="Mining" />
                  <xs:enumeration value="Hunting" />
                  <xs:enumeration value="Constructing" />
                  <xs:enumeration value="Shooting" />
                  <xs:enumeration value="AllWork" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="roleApparelRequirements">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.PreceptApparelRequirement" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="roleApparelRequirementCountCurve" type="Verse.SimpleCurve" />
      <xs:element minOccurs="0" name="grantedAbilities">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="roleEffects">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.RoleEffect" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="roleTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="iconPath" type="xs:string" />
      <xs:element minOccurs="0" name="restrictToSupremeGenderChance" type="xs:float" />
      <xs:element minOccurs="0" name="certaintyLossFactor" type="xs:float" />
      <xs:element minOccurs="0" name="convertPowerFactor" type="xs:float" />
      <xs:element minOccurs="0" name="expectationsOffset" type="xs:int" />
      <xs:element minOccurs="0" name="createsRoleEmptyThought" type="xs:boolean" />
      <xs:element minOccurs="0" name="roleCanBeChild" type="xs:boolean" />
      <xs:element minOccurs="0" name="disallowLoggingCamps" type="xs:boolean" />
      <xs:element minOccurs="0" name="disallowMiningCamps" type="xs:boolean" />
      <xs:element minOccurs="0" name="disallowHuntingCamps" type="xs:boolean" />
      <xs:element minOccurs="0" name="disallowFarmingCamps" type="xs:boolean" />
      <xs:element minOccurs="0" name="approvesOfSlavery" type="xs:boolean" />
      <xs:element minOccurs="0" name="prefersNudity" type="xs:boolean" />
      <xs:element minOccurs="0" name="genderPrefersNudity">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="None" />
            <xs:enumeration value="Male" />
            <xs:enumeration value="Female" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="useChoicesFromBuildingDefs" type="xs:boolean" />
      <xs:element minOccurs="0" name="displayOrderInImpact" type="xs:int" />
      <xs:element minOccurs="0" name="displayOrderInIssue" type="xs:int" />
      <xs:element minOccurs="0" name="proselytizes" type="xs:boolean" />
      <xs:element minOccurs="0" name="requiredScars" type="xs:int" />
      <xs:element minOccurs="0" name="approvesOfCharity" type="xs:boolean" />
      <xs:element minOccurs="0" name="blindPawnChance" type="xs:float" />
      <xs:element minOccurs="0" name="approvesOfBlindness" type="xs:boolean" />
      <xs:element minOccurs="0" name="canRemoveInUI" type="xs:boolean" />
      <xs:element minOccurs="0" name="prefersDarkness" type="xs:boolean" />
      <xs:element minOccurs="0" name="disableCrampedRoomThoughts" type="xs:boolean" />
      <xs:element minOccurs="0" name="blindPsychicSensitivityOffset" type="xs:float" />
      <xs:element minOccurs="0" name="defaultDrugPolicyOverride" type="xs:string" />
      <xs:element minOccurs="0" name="warnPlayerOnDesignateChopTree" type="xs:boolean" />
      <xs:element minOccurs="0" name="warnPlayerOnDesignateMine" type="xs:boolean" />
      <xs:element minOccurs="0" name="willingToConstructOtherIdeoBuildables" type="xs:boolean" />
      <xs:element minOccurs="0" name="biosculpterPodCycleSpeedFactor" type="xs:float" />
      <xs:element minOccurs="0" name="growthVatSpeedFactor" type="xs:float" />
      <xs:element minOccurs="0" name="prefersSlabBed" type="xs:boolean" />
      <xs:element minOccurs="0" name="useRepeatPenalty" type="xs:boolean" />
      <xs:element minOccurs="0" name="showRitualFloatMenuOption" type="xs:boolean" />
      <xs:element minOccurs="0" name="tipLabelOverride" type="xs:string" />
      <xs:element minOccurs="0" name="capitalizeAsTitle" type="xs:boolean" />
      <xs:element minOccurs="0" name="ignoreNameUniqueness" type="xs:boolean" />
      <xs:element minOccurs="0" name="extraTextPawnDeathLetter" type="xs:string" />
      <xs:element minOccurs="0" name="apparelPreceptSwapDef" type="xs:string" />
      <xs:element minOccurs="0" name="useCooldownFromAbilityGroupDef" type="xs:string" />
      <xs:element minOccurs="0" name="iconIgnoresIdeoColor" type="xs:boolean" />
      <xs:element minOccurs="0" name="sourcePawnRoleDef" type="xs:string" />
      <xs:element minOccurs="0" name="sourceAbilityDef" type="xs:string" />
      <xs:element minOccurs="0" name="likesHumanLeatherApparel" type="xs:boolean" />
      <xs:element minOccurs="0" name="approvesOfRaiding" type="xs:boolean" />
      <xs:element minOccurs="0" name="skipOpportunityLettersBeforeDay" type="xs:float" />
      <xs:element minOccurs="0" name="notifyPlayerOnOpportunity" type="xs:boolean" />
      <xs:element minOccurs="0" name="workerClass" type="xs:string" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.PreceptComp">
    <xs:all>
      <xs:element minOccurs="0" name="description" type="xs:string" />
      <xs:element minOccurs="0" name="preceptDef" type="xs:string" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.AbilityStatModifiers">
    <xs:all>
      <xs:element minOccurs="0" name="ability" type="xs:string" />
      <xs:element minOccurs="0" name="modifiers" type="RimWorld.StatModifier" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.ConditionalStatAffecter">
    <xs:all>
      <xs:element minOccurs="0" name="statFactors" type="RimWorld.StatModifier" />
      <xs:element minOccurs="0" name="statOffsets" type="RimWorld.StatModifier" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.PreceptThingChanceClass">
    <xs:sequence>
      <xs:any minOccurs="0" processContents="skip" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="RimWorld.RoomRequirement">
    <xs:all>
      <xs:element minOccurs="0" name="disablingPrecepts">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="labelKey" type="xs:string" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.RoleRequirement">
    <xs:all>
      <xs:element minOccurs="0" name="labelKey" type="xs:string" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.RoleEffect">
    <xs:all>
      <xs:element minOccurs="0" name="label" type="xs:string" />
      <xs:element minOccurs="0" name="labelKey" type="xs:string" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.PrisonerInteractionModeDef">
    <xs:all>
      <xs:element minOccurs="0" name="listOrder" type="xs:int" />
      <xs:element minOccurs="0" name="allowOnWildMan" type="xs:boolean" />
      <xs:element minOccurs="0" name="hideIfNoBloodfeeders" type="xs:boolean" />
      <xs:element minOccurs="0" name="hideOnHemogenicPawns" type="xs:boolean" />
      <xs:element minOccurs="0" name="mustBeAwake" type="xs:boolean" />
      <xs:element minOccurs="0" name="allowInClassicIdeoMode" type="xs:boolean" />
      <xs:element minOccurs="0" name="hideIfNotRecruitable" type="xs:boolean" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.QuestScriptDef">
    <xs:all>
      <xs:element minOccurs="0" name="root" type="RimWorld.QuestGen.QuestNode" />
      <xs:element minOccurs="0" name="rootSelectionWeight" type="xs:float" />
      <xs:element minOccurs="0" name="rootSelectionWeightFactorFromPointsCurve" type="Verse.SimpleCurve" />
      <xs:element minOccurs="0" name="rootMinPoints" type="xs:float" />
      <xs:element minOccurs="0" name="rootMinProgressScore" type="xs:float" />
      <xs:element minOccurs="0" name="rootIncreasesPopulation" type="xs:boolean" />
      <xs:element minOccurs="0" name="minRefireDays" type="xs:float" />
      <xs:element minOccurs="0" name="decreeSelectionWeight" type="xs:float" />
      <xs:element minOccurs="0" name="decreeTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="questDescriptionRules" type="Verse.Grammar.RulePack" />
      <xs:element minOccurs="0" name="questNameRules" type="Verse.Grammar.RulePack" />
      <xs:element minOccurs="0" name="questDescriptionAndNameRules" type="Verse.Grammar.RulePack" />
      <xs:element minOccurs="0" name="questContentRules" type="Verse.Grammar.RulePack" />
      <xs:element minOccurs="0" name="autoAccept" type="xs:boolean" />
      <xs:element minOccurs="0" name="hideOnCleanup" type="xs:boolean" />
      <xs:element minOccurs="0" name="expireDaysRange" type="Verse.FloatRange" />
      <xs:element minOccurs="0" name="nameMustBeUnique" type="xs:boolean" />
      <xs:element minOccurs="0" name="defaultChallengeRating" type="xs:int" />
      <xs:element minOccurs="0" name="defaultHidden" type="xs:boolean" />
      <xs:element minOccurs="0" name="isRootSpecial" type="xs:boolean" />
      <xs:element minOccurs="0" name="canGiveRoyalFavor" type="xs:boolean" />
      <xs:element minOccurs="0" name="questAvailableLetterDef" type="xs:string" />
      <xs:element minOccurs="0" name="hideInvolvedFactionsInfo" type="xs:boolean" />
      <xs:element minOccurs="0" name="affectedByPopulation" type="xs:boolean" />
      <xs:element minOccurs="0" name="affectedByPoints" type="xs:boolean" />
      <xs:element minOccurs="0" name="defaultCharity" type="xs:boolean" />
      <xs:element minOccurs="0" name="successHistoryEvent" type="xs:string" />
      <xs:element minOccurs="0" name="failedOrExpiredHistoryEvent" type="xs:string" />
      <xs:element minOccurs="0" name="sendAvailableLetter" type="xs:boolean" />
      <xs:element minOccurs="0" name="epic" type="xs:boolean" />
      <xs:element minOccurs="0" name="epicParent" type="xs:string" />
      <xs:element minOccurs="0" name="endOnColonyMove" type="xs:boolean" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.QuestGen.QuestNode">
    <xs:all>
      <xs:element minOccurs="0" name="selectionWeight" type="xs:string" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.RaidAgeRestrictionDef">
    <xs:all>
      <xs:element minOccurs="0" name="workerClass" type="xs:string" />
      <xs:element minOccurs="0" name="developmentStage">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="None" />
                  <xs:enumeration value="Newborn" />
                  <xs:enumeration value="Baby" />
                  <xs:enumeration value="Child" />
                  <xs:enumeration value="Adult" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="ageRange" type="Verse.FloatRange" />
      <xs:element minOccurs="0" name="threatPointsFactor" type="xs:float" />
      <xs:element minOccurs="0" name="earliestDay" type="xs:int" />
      <xs:element minOccurs="0" name="chance" type="xs:float" />
      <xs:element minOccurs="0" name="arrivalTextExtra" type="xs:string" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.RaidStrategyDef">
    <xs:all>
      <xs:element minOccurs="0" name="workerClass" type="xs:string" />
      <xs:element minOccurs="0" name="selectionWeightPerPointsCurve" type="Verse.SimpleCurve" />
      <xs:element minOccurs="0" name="minPawns" type="xs:float" />
      <xs:element minOccurs="0" name="selectionWeightCurvesPerFaction">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.FactionCurve" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="arrivalTextFriendly" type="xs:string" />
      <xs:element minOccurs="0" name="arrivalTextEnemy" type="xs:string" />
      <xs:element minOccurs="0" name="letterLabelEnemy" type="xs:string" />
      <xs:element minOccurs="0" name="letterLabelFriendly" type="xs:string" />
      <xs:element minOccurs="0" name="pointsFactorCurve" type="Verse.SimpleCurve" />
      <xs:element minOccurs="0" name="pawnsCanBringFood" type="xs:boolean" />
      <xs:element minOccurs="0" name="arriveModes">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="raidLootValueFactor" type="xs:float" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.RecordDef">
    <xs:all>
      <xs:element minOccurs="0" name="type">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Time" />
            <xs:enumeration value="Int" />
            <xs:enumeration value="Float" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="workerClass" type="xs:string" />
      <xs:element minOccurs="0" name="measuredTimeJobs">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.ResearchTabDef">
    <xs:all>
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.RitualAttachableOutcomeEffectDef">
    <xs:all>
      <xs:element minOccurs="0" name="workerClass" type="xs:string" />
      <xs:element minOccurs="0" name="requiredMemeAny">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="allowedRituals">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="disallowedRituals">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="requiredFaction" type="xs:string" />
      <xs:element minOccurs="0" name="onlyPositiveOutcomes" type="xs:boolean" />
      <xs:element minOccurs="0" name="onlyBestOutcome" type="xs:boolean" />
      <xs:element minOccurs="0" name="onlyNegativeOutcomes" type="xs:boolean" />
      <xs:element minOccurs="0" name="onlyWorstOutcome" type="xs:boolean" />
      <xs:element minOccurs="0" name="letterInfoText" type="xs:string" />
      <xs:element minOccurs="0" name="effectDesc" type="xs:string" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.RitualBehaviorDef">
    <xs:all>
      <xs:element minOccurs="0" name="workerClass" type="xs:string" />
      <xs:element minOccurs="0" name="roles">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.RitualRole" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="stages">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.RitualStage" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="durationTicks" type="Verse.IntRange" />
      <xs:element minOccurs="0" name="preceptRequirements">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.PreceptRequirement" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="cancellationTriggers">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.RitualCancellationTrigger" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="useVisualEffectsFromRoleIdIdeo" type="xs:string" />
      <xs:element minOccurs="0" name="displayOrder" type="xs:int" />
      <xs:element minOccurs="0" name="letterTitle" type="xs:string" />
      <xs:element minOccurs="0" name="letterText" type="xs:string" />
      <xs:element minOccurs="0" name="spectatorsLabel" type="xs:string" />
      <xs:element minOccurs="0" name="spectatorGerund" type="xs:string" />
      <xs:element minOccurs="0" name="soundDefsPerEnhancerCount">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="maxEnhancerDistance" type="xs:int" />
      <xs:element minOccurs="0" name="spectatorFilter" type="RimWorld.RitualSpectatorFilter" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.RitualRole">
    <xs:all>
      <xs:element minOccurs="0" name="missingDesc" type="xs:string" />
      <xs:element minOccurs="0" name="noCandidatesGizmoDesc" type="xs:string" />
      <xs:element minOccurs="0" name="customChildDisallowMessage" type="xs:string" />
      <xs:element minOccurs="0" name="id" type="xs:string" />
      <xs:element minOccurs="0" name="precept" type="xs:string" />
      <xs:element minOccurs="0" name="maxCount" type="xs:int" />
      <xs:element minOccurs="0" name="mergeId" type="xs:string" />
      <xs:element minOccurs="0" name="required" type="xs:boolean" />
      <xs:element minOccurs="0" name="substitutable" type="xs:boolean" />
      <xs:element minOccurs="0" name="ignoreBleeding" type="xs:boolean" />
      <xs:element minOccurs="0" name="countsAsParticipant" type="xs:boolean" />
      <xs:element minOccurs="0" name="addToLord" type="xs:boolean" />
      <xs:element minOccurs="0" name="allowNonAggroMentalState" type="xs:boolean" />
      <xs:element minOccurs="0" name="defaultForSelectedColonist" type="xs:boolean" />
      <xs:element minOccurs="0" name="allowOtherIdeos" type="xs:boolean" />
      <xs:element minOccurs="0" name="allowDowned" type="xs:boolean" />
      <xs:element minOccurs="0" name="allowKeepLayingDown" type="xs:boolean" />
      <xs:element minOccurs="0" name="allowChild" type="xs:boolean" />
      <xs:element minOccurs="0" name="allowBaby" type="xs:boolean" />
      <xs:element minOccurs="0" name="endJobOnRitualCleanup" type="xs:boolean" />
      <xs:element minOccurs="0" name="mustBeAbleToReachTarget" type="xs:boolean" />
      <xs:element minOccurs="0" name="blocksSocialInteraction" type="xs:boolean" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.RitualStage">
    <xs:all>
      <xs:element minOccurs="0" name="parent" type="xs:string" />
      <xs:element minOccurs="0" name="defaultDuty" type="xs:string" />
      <xs:element minOccurs="0" name="endTriggers">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.StageEndTrigger" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="failTriggers">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.StageFailTrigger" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="preAction" type="RimWorld.RitualStageAction" />
      <xs:element minOccurs="0" name="postAction" type="RimWorld.RitualStageAction" />
      <xs:element minOccurs="0" name="interruptedAction" type="RimWorld.RitualStageAction" />
      <xs:element minOccurs="0" name="pawnLeaveAction" type="RimWorld.RitualStageAction" />
      <xs:element minOccurs="0" name="highlightRolePositions">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="highlightRolePawns">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="tickActionMaker" type="RimWorld.RitualStageTickActionMaker" />
      <xs:element minOccurs="0" name="visualEffectDef" type="xs:string" />
      <xs:element minOccurs="0" name="spectatorsRequired" type="xs:boolean" />
      <xs:element minOccurs="0" name="essential" type="xs:boolean" />
      <xs:element minOccurs="0" name="ignoreDurationToFinishAfterStage" type="xs:boolean" />
      <xs:element minOccurs="0" name="allowedSpectateSidesOverride">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="None" />
                  <xs:enumeration value="Up" />
                  <xs:enumeration value="Right" />
                  <xs:enumeration value="Down" />
                  <xs:enumeration value="Left" />
                  <xs:enumeration value="Vertical" />
                  <xs:enumeration value="Horizontal" />
                  <xs:enumeration value="All" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="spectateDistanceOverride" type="Verse.IntRange" />
      <xs:element minOccurs="0" name="showProgressBar" type="xs:boolean" />
      <xs:element minOccurs="0" name="roleBehaviors">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.RitualRoleBehavior" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.StageEndTrigger">
    <xs:all>
      <xs:element minOccurs="0" name="countsTowardsProgress" type="xs:boolean" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.StageFailTrigger">
    <xs:all>
      <xs:element minOccurs="0" name="desc" type="xs:string" />
      <xs:element minOccurs="0" name="allowanceTicks" type="xs:int" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.RitualStageAction">
    <xs:all />
  </xs:complexType>
  <xs:complexType name="RimWorld.RitualStageTickActionMaker">
    <xs:all />
  </xs:complexType>
  <xs:complexType name="RimWorld.RitualRoleBehavior">
    <xs:all>
      <xs:element minOccurs="0" name="roleId" type="xs:string" />
      <xs:element minOccurs="0" name="dutyDef" type="xs:string" />
      <xs:element minOccurs="0" name="jobReportOverride" type="xs:string" />
      <xs:element minOccurs="0" name="speakerInteraction" type="xs:string" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.PreceptRequirement">
    <xs:all />
  </xs:complexType>
  <xs:complexType name="RimWorld.RitualCancellationTrigger">
    <xs:all />
  </xs:complexType>
  <xs:complexType name="RimWorld.RitualSpectatorFilter">
    <xs:all>
      <xs:element minOccurs="0" name="description" type="xs:string" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.RitualObligationTargetFilterDef">
    <xs:all>
      <xs:element minOccurs="0" name="workerClass" type="xs:string" />
      <xs:element minOccurs="0" name="colonistThingsOnly" type="xs:boolean" />
      <xs:element minOccurs="0" name="thingDefs">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="minUnroofedCells" type="xs:int" />
      <xs:element minOccurs="0" name="unroofedCellSearchRadius" type="xs:int" />
      <xs:element minOccurs="0" name="woodPerParticipant" type="xs:int" />
      <xs:element minOccurs="0" name="maxSpeakerDistance" type="xs:int" />
      <xs:element minOccurs="0" name="maxDrumDistance" type="xs:int" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.RitualOutcomeEffectDef">
    <xs:all>
      <xs:element minOccurs="0" name="workerClass" type="xs:string" />
      <xs:element minOccurs="0" name="startingQuality" type="xs:float" />
      <xs:element minOccurs="0" name="minQuality" type="xs:float" />
      <xs:element minOccurs="0" name="maxQuality" type="xs:float" />
      <xs:element minOccurs="0" name="givesDevelopmentPoints" type="xs:boolean" />
      <xs:element minOccurs="0" name="memoryDef" type="xs:string" />
      <xs:element minOccurs="0" name="outcomeChances">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.OutcomeChance" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="honorFromQuality" type="Verse.SimpleCurve" />
      <xs:element minOccurs="0" name="extraPredictedOutcomeDescriptions">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="extraInfoLines">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="extraOutcomeDescriptions">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.RitualOutcomeEffectDef.ExtraOutcomeChanceDescription" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="effecter" type="xs:string" />
      <xs:element minOccurs="0" name="fleckDef" type="xs:string" />
      <xs:element minOccurs="0" name="flecksPerCell" type="xs:int" />
      <xs:element minOccurs="0" name="fleckRotationRange" type="Verse.FloatRange" />
      <xs:element minOccurs="0" name="fleckScaleRange" type="Verse.FloatRange" />
      <xs:element minOccurs="0" name="fleckVelocityAngle" type="Verse.FloatRange" />
      <xs:element minOccurs="0" name="fleckVelocitySpeed" type="Verse.FloatRange" />
      <xs:element minOccurs="0" name="filthDefToSpawn" type="xs:string" />
      <xs:element minOccurs="0" name="filthCountToSpawn" type="Verse.IntRange" />
      <xs:element minOccurs="0" name="comps">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.RitualOutcomeComp" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="warnOnLowQuality" type="xs:boolean" />
      <xs:element minOccurs="0" name="allowAttachableOutcome" type="xs:boolean" />
      <xs:element minOccurs="0" name="allowOutcomeWithNoAttendance" type="xs:boolean" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.OutcomeChance">
    <xs:all>
      <xs:element minOccurs="0" name="label" type="xs:string" />
      <xs:element minOccurs="0" name="description" type="xs:string" />
      <xs:element minOccurs="0" name="potentialExtraOutcomeDesc" type="xs:string" />
      <xs:element minOccurs="0" name="chance" type="xs:float" />
      <xs:element minOccurs="0" name="memory" type="xs:string" />
      <xs:element minOccurs="0" name="positivityIndex" type="xs:int" />
      <xs:element minOccurs="0" name="roleIdsNotGainingMemory">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="ideoCertaintyOffset" type="xs:float" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.RitualOutcomeEffectDef.ExtraOutcomeChanceDescription">
    <xs:all>
      <xs:element minOccurs="0" name="description" type="xs:string" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.RitualOutcomeComp">
    <xs:all />
  </xs:complexType>
  <xs:complexType name="RimWorld.RitualPatternDef">
    <xs:all>
      <xs:element minOccurs="0" name="nameMaker" type="xs:string" />
      <xs:element minOccurs="0" name="ritualFreeStartIntervalDaysRange" type="Verse.FloatRange" />
      <xs:element minOccurs="0" name="ritualObligationTriggers">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.RitualObligationTriggerProperties" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="ritualObligationTargetFilter" type="xs:string" />
      <xs:element minOccurs="0" name="ritualTargetFilter" type="xs:string" />
      <xs:element minOccurs="0" name="ritualBehavior" type="xs:string" />
      <xs:element minOccurs="0" name="ritualOutcomeEffect" type="xs:string" />
      <xs:element minOccurs="0" name="ritualOnlyForIdeoMembers" type="xs:boolean" />
      <xs:element minOccurs="0" name="canStartAnytime" type="xs:boolean" />
      <xs:element minOccurs="0" name="alwaysStartAnytime" type="xs:boolean" />
      <xs:element minOccurs="0" name="allowOtherInstances" type="xs:boolean" />
      <xs:element minOccurs="0" name="playsIdeoMusic" type="xs:boolean" />
      <xs:element minOccurs="0" name="ignoreConsumableBuildingRequirement" type="xs:boolean" />
      <xs:element minOccurs="0" name="mergeGizmosForObligations" type="xs:boolean" />
      <xs:element minOccurs="0" name="canMergeGizmosFromDifferentIdeos" type="xs:boolean" />
      <xs:element minOccurs="0" name="minTechLevel">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Undefined" />
            <xs:enumeration value="Animal" />
            <xs:enumeration value="Neolithic" />
            <xs:enumeration value="Medieval" />
            <xs:enumeration value="Industrial" />
            <xs:enumeration value="Spacer" />
            <xs:enumeration value="Ultra" />
            <xs:enumeration value="Archotech" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="maxTechLevel">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Undefined" />
            <xs:enumeration value="Animal" />
            <xs:enumeration value="Neolithic" />
            <xs:enumeration value="Medieval" />
            <xs:enumeration value="Industrial" />
            <xs:enumeration value="Spacer" />
            <xs:enumeration value="Ultra" />
            <xs:enumeration value="Archotech" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="ritualExpectedDesc" type="xs:string" />
      <xs:element minOccurs="0" name="ritualExpectedDescNoAdjective" type="xs:string" />
      <xs:element minOccurs="0" name="shortDescOverride" type="xs:string" />
      <xs:element minOccurs="0" name="descOverride" type="xs:string" />
      <xs:element minOccurs="0" name="ritualExplanation" type="xs:string" />
      <xs:element minOccurs="0" name="beginRitualOverride" type="xs:string" />
      <xs:element minOccurs="0" name="iconPathOverride" type="xs:string" />
      <xs:element minOccurs="0" name="tags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="patternGroupTag" type="xs:string" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.RitualObligationTriggerProperties">
    <xs:all>
      <xs:element minOccurs="0" name="triggerClass" type="xs:string" />
      <xs:element minOccurs="0" name="mustBePlayerIdeo" type="xs:boolean" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.RitualTargetFilterDef">
    <xs:all>
      <xs:element minOccurs="0" name="workerClass" type="xs:string" />
      <xs:element minOccurs="0" name="fallBackToGatherSpot" type="xs:boolean" />
      <xs:element minOccurs="0" name="fallbackToRitualSpot" type="xs:boolean" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.RitualVisualEffectDef">
    <xs:all>
      <xs:element minOccurs="0" name="workerClass" type="xs:string" />
      <xs:element minOccurs="0" name="comps">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.CompProperties_RitualVisualEffect" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="tintColor" type="UnityEngine.Color" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.CompProperties_RitualVisualEffect">
    <xs:all>
      <xs:element minOccurs="0" name="compClass" type="xs:string" />
      <xs:element minOccurs="0" name="moteDef" type="xs:string" />
      <xs:element minOccurs="0" name="fleckDef" type="xs:string" />
      <xs:element minOccurs="0" name="effecterDef" type="xs:string" />
      <xs:element minOccurs="0" name="velocity" type="Verse.FloatRange" />
      <xs:element minOccurs="0" name="velocityDir" type="UnityEngine.Vector3" />
      <xs:element minOccurs="0" name="rotation" type="Verse.FloatRange" />
      <xs:element minOccurs="0" name="rotationRate" type="Verse.FloatRange" />
      <xs:element minOccurs="0" name="scale" type="Verse.FloatRange" />
      <xs:element minOccurs="0" name="offset" type="UnityEngine.Vector3" />
      <xs:element minOccurs="0" name="roomCheckOffset" type="Verse.IntVec3" />
      <xs:element minOccurs="0" name="scaleWithRoom" type="xs:boolean" />
      <xs:element minOccurs="0" name="scalePositionWithRoom" type="xs:boolean" />
      <xs:element minOccurs="0" name="onlySpawnInSameRoom" type="xs:boolean" />
      <xs:element minOccurs="0" name="colorOverride" type="UnityEngine.Color" />
      <xs:element minOccurs="0" name="overrideColors">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="UnityEngine.Color" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.IntVec3">
    <xs:all>
      <xs:element minOccurs="0" name="x" type="xs:int" />
      <xs:element minOccurs="0" name="y" type="xs:int" />
      <xs:element minOccurs="0" name="z" type="xs:int" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.RiverDef">
    <xs:all>
      <xs:element minOccurs="0" name="spawnFlowThreshold" type="xs:int" />
      <xs:element minOccurs="0" name="spawnChance" type="xs:float" />
      <xs:element minOccurs="0" name="degradeThreshold" type="xs:int" />
      <xs:element minOccurs="0" name="degradeChild" type="xs:string" />
      <xs:element minOccurs="0" name="branches">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.RiverDef.Branch" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="widthOnWorld" type="xs:float" />
      <xs:element minOccurs="0" name="widthOnMap" type="xs:float" />
      <xs:element minOccurs="0" name="debugOpacity" type="xs:float" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.RiverDef.Branch">
    <xs:all>
      <xs:element minOccurs="0" name="minFlow" type="xs:int" />
      <xs:element minOccurs="0" name="child" type="xs:string" />
      <xs:element minOccurs="0" name="chance" type="xs:float" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.RoadDef">
    <xs:all>
      <xs:element minOccurs="0" name="priority" type="xs:int" />
      <xs:element minOccurs="0" name="ancientOnly" type="xs:boolean" />
      <xs:element minOccurs="0" name="movementCostMultiplier" type="xs:float" />
      <xs:element minOccurs="0" name="tilesPerSegment" type="xs:int" />
      <xs:element minOccurs="0" name="pathingMode" type="xs:string" />
      <xs:element minOccurs="0" name="roadGenSteps">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.RoadDefGenStep" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="worldRenderSteps">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.RoadDef.WorldRenderStep" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="worldTransitionGroup" type="xs:string" />
      <xs:element minOccurs="0" name="distortionFrequency" type="xs:float" />
      <xs:element minOccurs="0" name="distortionIntensity" type="xs:float" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.RoadDefGenStep">
    <xs:all>
      <xs:element minOccurs="0" name="chancePerPositionCurve" type="Verse.SimpleCurve" />
      <xs:element minOccurs="0" name="antialiasingMultiplier" type="xs:float" />
      <xs:element minOccurs="0" name="periodicSpacing" type="xs:int" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.RoadDef.WorldRenderStep">
    <xs:all>
      <xs:element minOccurs="0" name="layer" type="xs:string" />
      <xs:element minOccurs="0" name="width" type="xs:float" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.RoadPathingDef">
    <xs:all>
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.RoadWorldLayerDef">
    <xs:all>
      <xs:element minOccurs="0" name="order" type="xs:int" />
      <xs:element minOccurs="0" name="color" type="UnityEngine.Color" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.RoyalTitleDef">
    <xs:all>
      <xs:element minOccurs="0" name="seniority" type="xs:int" />
      <xs:element minOccurs="0" name="favorCost" type="xs:int" />
      <xs:element minOccurs="0" name="labelFemale" type="xs:string" />
      <xs:element minOccurs="0" name="changeHeirQuestPoints" type="xs:int" />
      <xs:element minOccurs="0" name="commonality" type="xs:float" />
      <xs:element minOccurs="0" name="disabledWorkTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="None" />
                  <xs:enumeration value="ManualDumb" />
                  <xs:enumeration value="ManualSkilled" />
                  <xs:enumeration value="Violent" />
                  <xs:enumeration value="Caring" />
                  <xs:enumeration value="Social" />
                  <xs:enumeration value="Commoner" />
                  <xs:enumeration value="Intellectual" />
                  <xs:enumeration value="Animals" />
                  <xs:enumeration value="Artistic" />
                  <xs:enumeration value="Crafting" />
                  <xs:enumeration value="Cooking" />
                  <xs:enumeration value="Firefighting" />
                  <xs:enumeration value="Cleaning" />
                  <xs:enumeration value="Hauling" />
                  <xs:enumeration value="PlantWork" />
                  <xs:enumeration value="Mining" />
                  <xs:enumeration value="Hunting" />
                  <xs:enumeration value="Constructing" />
                  <xs:enumeration value="Shooting" />
                  <xs:enumeration value="AllWork" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="inheritanceWorkerOverrideClass" type="xs:string" />
      <xs:element minOccurs="0" name="requiredMinimumApparelQuality">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Awful" />
            <xs:enumeration value="Poor" />
            <xs:enumeration value="Normal" />
            <xs:enumeration value="Good" />
            <xs:enumeration value="Excellent" />
            <xs:enumeration value="Masterwork" />
            <xs:enumeration value="Legendary" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="requiredApparel">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.ApparelRequirement" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="permits">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="minExpectation" type="xs:string" />
      <xs:element minOccurs="0" name="disabledJoyKinds">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="tags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="rewards" type="Verse.ThingDefCountClass" />
      <xs:element minOccurs="0" name="suppressIdleAlert" type="xs:boolean" />
      <xs:element minOccurs="0" name="canBeInherited" type="xs:boolean" />
      <xs:element minOccurs="0" name="allowDignifiedMeditationFocus" type="xs:boolean" />
      <xs:element minOccurs="0" name="permitPointsAwarded" type="xs:int" />
      <xs:element minOccurs="0" name="awardWorkerClass" type="xs:string" />
      <xs:element minOccurs="0" name="awardThought" type="xs:string" />
      <xs:element minOccurs="0" name="lostThought" type="xs:string" />
      <xs:element minOccurs="0" name="throneRoomRequirements">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.RoomRequirement" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="bedroomRequirements">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.RoomRequirement" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="recruitmentResistanceOffset" type="xs:float" />
      <xs:element minOccurs="0" name="foodRequirement" type="RimWorld.RoyalTitleFoodRequirement" />
      <xs:element minOccurs="0" name="replaceOnRecruited" type="xs:string" />
      <xs:element minOccurs="0" name="decreeMtbDays" type="xs:float" />
      <xs:element minOccurs="0" name="decreeMinIntervalDays" type="xs:float" />
      <xs:element minOccurs="0" name="decreeMentalBreakCommonality" type="xs:float" />
      <xs:element minOccurs="0" name="decreeTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="grantedAbilities">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="speechCooldown" type="Verse.IntRange" />
      <xs:element minOccurs="0" name="maxPsylinkLevel" type="xs:int" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.RoyalTitleFoodRequirement">
    <xs:all>
      <xs:element minOccurs="0" name="minQuality">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Undefined" />
            <xs:enumeration value="NeverForNutrition" />
            <xs:enumeration value="DesperateOnly" />
            <xs:enumeration value="DesperateOnlyForHumanlikes" />
            <xs:enumeration value="RawBad" />
            <xs:enumeration value="RawTasty" />
            <xs:enumeration value="MealTerrible" />
            <xs:enumeration value="MealAwful" />
            <xs:enumeration value="MealSimple" />
            <xs:enumeration value="MealFine" />
            <xs:enumeration value="MealLavish" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="allowedTypes">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="None" />
                  <xs:enumeration value="VegetableOrFruit" />
                  <xs:enumeration value="Meat" />
                  <xs:enumeration value="Fluid" />
                  <xs:enumeration value="Corpse" />
                  <xs:enumeration value="Seed" />
                  <xs:enumeration value="AnimalProduct" />
                  <xs:enumeration value="Plant" />
                  <xs:enumeration value="Tree" />
                  <xs:enumeration value="Meal" />
                  <xs:enumeration value="Processed" />
                  <xs:enumeration value="Liquor" />
                  <xs:enumeration value="Kibble" />
                  <xs:enumeration value="Fungus" />
                  <xs:enumeration value="VegetarianAnimal" />
                  <xs:enumeration value="VegetarianRoughAnimal" />
                  <xs:enumeration value="CarnivoreAnimal" />
                  <xs:enumeration value="CarnivoreAnimalStrict" />
                  <xs:enumeration value="OmnivoreAnimal" />
                  <xs:enumeration value="OmnivoreRoughAnimal" />
                  <xs:enumeration value="DendrovoreAnimal" />
                  <xs:enumeration value="OvivoreAnimal" />
                  <xs:enumeration value="OmnivoreHuman" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="allowedDefs">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.RoyalTitlePermitDef">
    <xs:all>
      <xs:element minOccurs="0" name="workerClass" type="xs:string" />
      <xs:element minOccurs="0" name="royalAid" type="RimWorld.RoyalAid" />
      <xs:element minOccurs="0" name="cooldownDays" type="xs:float" />
      <xs:element minOccurs="0" name="minTitle" type="xs:string" />
      <xs:element minOccurs="0" name="permitPointCost" type="xs:int" />
      <xs:element minOccurs="0" name="faction" type="xs:string" />
      <xs:element minOccurs="0" name="usableOnWorldMap" type="xs:boolean" />
      <xs:element minOccurs="0" name="prerequisite" type="xs:string" />
      <xs:element minOccurs="0" name="uiPosition" type="UnityEngine.Vector2" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.RoyalAid">
    <xs:all>
      <xs:element minOccurs="0" name="favorCost" type="xs:int" />
      <xs:element minOccurs="0" name="points" type="xs:int" />
      <xs:element minOccurs="0" name="pawnCount" type="xs:int" />
      <xs:element minOccurs="0" name="pawnKindDef" type="xs:string" />
      <xs:element minOccurs="0" name="targetingRange" type="xs:float" />
      <xs:element minOccurs="0" name="targetingRequireLOS" type="xs:boolean" />
      <xs:element minOccurs="0" name="aidDurationDays" type="xs:float" />
      <xs:element minOccurs="0" name="radius" type="xs:float" />
      <xs:element minOccurs="0" name="intervalTicks" type="xs:int" />
      <xs:element minOccurs="0" name="explosionCount" type="xs:int" />
      <xs:element minOccurs="0" name="warmupTicks" type="xs:int" />
      <xs:element minOccurs="0" name="explosionRadiusRange" type="Verse.FloatRange" />
      <xs:element minOccurs="0" name="itemsToDrop" type="Verse.ThingDefCountClass" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.RuleDef">
    <xs:all>
      <xs:element minOccurs="0" name="symbol" type="xs:string" />
      <xs:element minOccurs="0" name="resolvers">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.BaseGen.SymbolResolver" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.BaseGen.SymbolResolver">
    <xs:all>
      <xs:element minOccurs="0" name="minRectSize" type="Verse.IntVec2" />
      <xs:element minOccurs="0" name="selectionWeight" type="xs:float" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.IntVec2">
    <xs:all>
      <xs:element minOccurs="0" name="x" type="xs:int" />
      <xs:element minOccurs="0" name="z" type="xs:int" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.ScenarioDef">
    <xs:all>
      <xs:element minOccurs="0" name="scenario" type="RimWorld.Scenario" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.Scenario">
    <xs:all>
      <xs:element minOccurs="0" name="name" type="xs:string" />
      <xs:element minOccurs="0" name="summary" type="xs:string" />
      <xs:element minOccurs="0" name="description" type="xs:string" />
      <xs:element minOccurs="0" name="fileName" type="xs:string" />
      <xs:element minOccurs="0" name="enabled" type="xs:boolean" />
      <xs:element minOccurs="0" name="showInUI" type="xs:boolean" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.ScenPartDef">
    <xs:all>
      <xs:element minOccurs="0" name="category">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Undefined" />
            <xs:enumeration value="Fixed" />
            <xs:enumeration value="StartingImportant" />
            <xs:enumeration value="PlayerPawnFilter" />
            <xs:enumeration value="PlayerPawnModifier" />
            <xs:enumeration value="GameCondition" />
            <xs:enumeration value="Rule" />
            <xs:enumeration value="StartingItem" />
            <xs:enumeration value="WorldThing" />
            <xs:enumeration value="Misc" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="scenPartClass" type="xs:string" />
      <xs:element minOccurs="0" name="summaryPriority" type="xs:float" />
      <xs:element minOccurs="0" name="selectionWeight" type="xs:float" />
      <xs:element minOccurs="0" name="maxUses" type="xs:int" />
      <xs:element minOccurs="0" name="pageClass" type="xs:string" />
      <xs:element minOccurs="0" name="gameCondition" type="xs:string" />
      <xs:element minOccurs="0" name="gameConditionTargetsWorld" type="xs:boolean" />
      <xs:element minOccurs="0" name="durationRandomRange" type="Verse.FloatRange" />
      <xs:element minOccurs="0" name="designatorType" type="xs:string" />
      <xs:element minOccurs="0" name="genStep" type="xs:string" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.ShipJobDef">
    <xs:all>
      <xs:element minOccurs="0" name="jobClass" type="xs:string" />
      <xs:element minOccurs="0" name="blocksDisposalIfQueuedUnspawned" type="xs:boolean" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.SitePartDef">
    <xs:all>
      <xs:element minOccurs="0" name="conditionCauserDef" type="xs:string" />
      <xs:element minOccurs="0" name="activeThreatDisturbanceFactor" type="xs:float" />
      <xs:element minOccurs="0" name="defaultHidden" type="xs:boolean" />
      <xs:element minOccurs="0" name="workerClass" type="xs:string" />
      <xs:element minOccurs="0" name="siteTexture" type="xs:string" />
      <xs:element minOccurs="0" name="expandingIconTexture" type="xs:string" />
      <xs:element minOccurs="0" name="applyFactionColorToSiteTexture" type="xs:boolean" />
      <xs:element minOccurs="0" name="showFactionInInspectString" type="xs:boolean" />
      <xs:element minOccurs="0" name="requiresFaction" type="xs:boolean" />
      <xs:element minOccurs="0" name="disallowsAutomaticDetectionTimerStart" type="xs:boolean" />
      <xs:element minOccurs="0" name="minFactionTechLevel">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Undefined" />
            <xs:enumeration value="Animal" />
            <xs:enumeration value="Neolithic" />
            <xs:enumeration value="Medieval" />
            <xs:enumeration value="Industrial" />
            <xs:enumeration value="Spacer" />
            <xs:enumeration value="Ultra" />
            <xs:enumeration value="Archotech" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="approachOrderString" type="xs:string" />
      <xs:element minOccurs="0" name="approachingReportString" type="xs:string" />
      <xs:element minOccurs="0" name="tags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="excludesTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="arrivedLetter" type="xs:string" />
      <xs:element minOccurs="0" name="arrivedLetterLabelPart" type="xs:string" />
      <xs:element minOccurs="0" name="arrivedLetterHediffHyperlinks">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="arrivedLetterDef" type="xs:string" />
      <xs:element minOccurs="0" name="wantsThreatPoints" type="xs:boolean" />
      <xs:element minOccurs="0" name="minThreatPoints" type="xs:float" />
      <xs:element minOccurs="0" name="increasesPopulation" type="xs:boolean" />
      <xs:element minOccurs="0" name="badEvenIfNoMap" type="xs:boolean" />
      <xs:element minOccurs="0" name="forceExitAndRemoveMapCountdownDurationDays" type="xs:float" />
      <xs:element minOccurs="0" name="handlesWorldObjectTimeoutInspectString" type="xs:boolean" />
      <xs:element minOccurs="0" name="mainPartAllThreatsLabel" type="xs:string" />
      <xs:element minOccurs="0" name="minMapSize" type="Verse.IntVec3" />
      <xs:element minOccurs="0" name="lootTable">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.SitePartDef.WorkSiteLootThing" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="selectionWeight" type="xs:float" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.SitePartDef.WorkSiteLootThing">
    <xs:all>
      <xs:element minOccurs="0" name="thing" type="xs:string" />
      <xs:element minOccurs="0" name="weight" type="xs:float" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.SketchResolverDef">
    <xs:all>
      <xs:element minOccurs="0" name="resolver" type="RimWorld.SketchGen.SketchResolver" />
      <xs:element minOccurs="0" name="isRoot" type="xs:boolean" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.SketchGen.SketchResolver">
    <xs:all />
  </xs:complexType>
  <xs:complexType name="RimWorld.SkillDef">
    <xs:all>
      <xs:element minOccurs="0" name="skillLabel" type="xs:string" />
      <xs:element minOccurs="0" name="usuallyDefinedInBackstories" type="xs:boolean" />
      <xs:element minOccurs="0" name="pawnCreatorSummaryVisible" type="xs:boolean" />
      <xs:element minOccurs="0" name="disablingWorkTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="None" />
                  <xs:enumeration value="ManualDumb" />
                  <xs:enumeration value="ManualSkilled" />
                  <xs:enumeration value="Violent" />
                  <xs:enumeration value="Caring" />
                  <xs:enumeration value="Social" />
                  <xs:enumeration value="Commoner" />
                  <xs:enumeration value="Intellectual" />
                  <xs:enumeration value="Animals" />
                  <xs:enumeration value="Artistic" />
                  <xs:enumeration value="Crafting" />
                  <xs:enumeration value="Cooking" />
                  <xs:enumeration value="Firefighting" />
                  <xs:enumeration value="Cleaning" />
                  <xs:enumeration value="Hauling" />
                  <xs:enumeration value="PlantWork" />
                  <xs:enumeration value="Mining" />
                  <xs:enumeration value="Hunting" />
                  <xs:enumeration value="Constructing" />
                  <xs:enumeration value="Shooting" />
                  <xs:enumeration value="AllWork" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="listOrder" type="xs:float" />
      <xs:element minOccurs="0" name="neverDisabledBasedOnWorkTypes" type="xs:boolean" />
      <xs:element minOccurs="0" name="lessonInteraction" type="xs:string" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.SlaveInteractionModeDef">
    <xs:all>
      <xs:element minOccurs="0" name="listOrder" type="xs:int" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.StatCategoryDef">
    <xs:all>
      <xs:element minOccurs="0" name="displayOrder" type="xs:int" />
      <xs:element minOccurs="0" name="displayAllByDefault" type="xs:boolean" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.StatDef">
    <xs:all>
      <xs:element minOccurs="0" name="category" type="xs:string" />
      <xs:element minOccurs="0" name="workerClass" type="xs:string" />
      <xs:element minOccurs="0" name="labelForFullStatList" type="xs:string" />
      <xs:element minOccurs="0" name="forInformationOnly" type="xs:boolean" />
      <xs:element minOccurs="0" name="hideAtValue" type="xs:float" />
      <xs:element minOccurs="0" name="alwaysHide" type="xs:boolean" />
      <xs:element minOccurs="0" name="showNonAbstract" type="xs:boolean" />
      <xs:element minOccurs="0" name="showIfUndefined" type="xs:boolean" />
      <xs:element minOccurs="0" name="showOnPawns" type="xs:boolean" />
      <xs:element minOccurs="0" name="showOnHumanlikes" type="xs:boolean" />
      <xs:element minOccurs="0" name="showOnNonWildManHumanlikes" type="xs:boolean" />
      <xs:element minOccurs="0" name="showOnAnimals" type="xs:boolean" />
      <xs:element minOccurs="0" name="showOnMechanoids" type="xs:boolean" />
      <xs:element minOccurs="0" name="showOnNonWorkTables" type="xs:boolean" />
      <xs:element minOccurs="0" name="showOnDefaultValue" type="xs:boolean" />
      <xs:element minOccurs="0" name="showOnUnhaulables" type="xs:boolean" />
      <xs:element minOccurs="0" name="showOnUntradeables" type="xs:boolean" />
      <xs:element minOccurs="0" name="showIfModsLoaded">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="showIfModsLoadedAny">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="showIfHediffsPresent">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="neverDisabled" type="xs:boolean" />
      <xs:element minOccurs="0" name="showZeroBaseValue" type="xs:boolean" />
      <xs:element minOccurs="0" name="showOnSlavesOnly" type="xs:boolean" />
      <xs:element minOccurs="0" name="showOnPlayerMechanoids" type="xs:boolean" />
      <xs:element minOccurs="0" name="showDevelopmentalStageFilter">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="None" />
                  <xs:enumeration value="Newborn" />
                  <xs:enumeration value="Baby" />
                  <xs:enumeration value="Child" />
                  <xs:enumeration value="Adult" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="hideInClassicMode" type="xs:boolean" />
      <xs:element minOccurs="0" name="showOnPawnKind">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="displayPriorityInCategory" type="xs:int" />
      <xs:element minOccurs="0" name="toStringNumberSense">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Undefined" />
            <xs:enumeration value="Absolute" />
            <xs:enumeration value="Factor" />
            <xs:enumeration value="Offset" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="toStringStyle">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Integer" />
            <xs:enumeration value="FloatOne" />
            <xs:enumeration value="FloatTwo" />
            <xs:enumeration value="FloatThree" />
            <xs:enumeration value="FloatMaxOne" />
            <xs:enumeration value="FloatMaxTwo" />
            <xs:enumeration value="FloatMaxThree" />
            <xs:enumeration value="FloatTwoOrThree" />
            <xs:enumeration value="PercentZero" />
            <xs:enumeration value="PercentOne" />
            <xs:enumeration value="PercentTwo" />
            <xs:enumeration value="Temperature" />
            <xs:enumeration value="TemperatureOffset" />
            <xs:enumeration value="WorkAmount" />
            <xs:enumeration value="Money" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="formatString" type="xs:string" />
      <xs:element minOccurs="0" name="formatStringUnfinalized" type="xs:string" />
      <xs:element minOccurs="0" name="finalizeEquippedStatOffset" type="xs:boolean" />
      <xs:element minOccurs="0" name="statFactorsExplanationHeader" type="xs:string" />
      <xs:element minOccurs="0" name="defaultBaseValue" type="xs:float" />
      <xs:element minOccurs="0" name="skillNeedOffsets">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.SkillNeed" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="noSkillOffset" type="xs:float" />
      <xs:element minOccurs="0" name="capacityOffsets">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.PawnCapacityOffset" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="statFactors">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="applyFactorsIfNegative" type="xs:boolean" />
      <xs:element minOccurs="0" name="skillNeedFactors">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.SkillNeed" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="noSkillFactor" type="xs:float" />
      <xs:element minOccurs="0" name="capacityFactors">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.PawnCapacityFactor" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="postProcessCurve" type="Verse.SimpleCurve" />
      <xs:element minOccurs="0" name="postProcessStatFactors">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="minValue" type="xs:float" />
      <xs:element minOccurs="0" name="maxValue" type="xs:float" />
      <xs:element minOccurs="0" name="valueIfMissing" type="xs:float" />
      <xs:element minOccurs="0" name="roundValue" type="xs:boolean" />
      <xs:element minOccurs="0" name="roundToFiveOver" type="xs:float" />
      <xs:element minOccurs="0" name="minifiedThingInherits" type="xs:boolean" />
      <xs:element minOccurs="0" name="supressDisabledError" type="xs:boolean" />
      <xs:element minOccurs="0" name="cacheable" type="xs:boolean" />
      <xs:element minOccurs="0" name="scenarioRandomizable" type="xs:boolean" />
      <xs:element minOccurs="0" name="disableIfSkillDisabled" type="xs:string" />
      <xs:element minOccurs="0" name="parts">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.StatPart" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.SkillNeed">
    <xs:all>
      <xs:element minOccurs="0" name="skill" type="xs:string" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.PawnCapacityOffset">
    <xs:all>
      <xs:element minOccurs="0" name="capacity" type="xs:string" />
      <xs:element minOccurs="0" name="scale" type="xs:float" />
      <xs:element minOccurs="0" name="max" type="xs:float" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.PawnCapacityFactor">
    <xs:all>
      <xs:element minOccurs="0" name="capacity" type="xs:string" />
      <xs:element minOccurs="0" name="weight" type="xs:float" />
      <xs:element minOccurs="0" name="max" type="xs:float" />
      <xs:element minOccurs="0" name="useReciprocal" type="xs:boolean" />
      <xs:element minOccurs="0" name="allowedDefect" type="xs:float" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.StatPart">
    <xs:all>
      <xs:element minOccurs="0" name="priority" type="xs:float" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.StorytellerDef">
    <xs:all>
      <xs:element minOccurs="0" name="listOrder" type="xs:int" />
      <xs:element minOccurs="0" name="listVisible" type="xs:boolean" />
      <xs:element minOccurs="0" name="tutorialMode" type="xs:boolean" />
      <xs:element minOccurs="0" name="disableAdaptiveTraining" type="xs:boolean" />
      <xs:element minOccurs="0" name="disableAlerts" type="xs:boolean" />
      <xs:element minOccurs="0" name="disablePermadeath" type="xs:boolean" />
      <xs:element minOccurs="0" name="forcedDifficulty" type="xs:string" />
      <xs:element minOccurs="0" name="comps">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.StorytellerCompProperties" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="populationIntentFactorFromPopCurve" type="Verse.SimpleCurve" />
      <xs:element minOccurs="0" name="populationIntentFactorFromPopAdaptDaysCurve" type="Verse.SimpleCurve" />
      <xs:element minOccurs="0" name="pointsFactorFromDaysPassed" type="Verse.SimpleCurve" />
      <xs:element minOccurs="0" name="adaptDaysMin" type="xs:float" />
      <xs:element minOccurs="0" name="adaptDaysMax" type="xs:float" />
      <xs:element minOccurs="0" name="adaptDaysGameStartGraceDays" type="xs:float" />
      <xs:element minOccurs="0" name="pointsFactorFromAdaptDays" type="Verse.SimpleCurve" />
      <xs:element minOccurs="0" name="adaptDaysLossFromColonistLostByPostPopulation" type="Verse.SimpleCurve" />
      <xs:element minOccurs="0" name="adaptDaysLossFromColonistViolentlyDownedByPopulation" type="Verse.SimpleCurve" />
      <xs:element minOccurs="0" name="adaptDaysGrowthRateCurve" type="Verse.SimpleCurve" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.StorytellerCompProperties">
    <xs:all>
      <xs:element minOccurs="0" name="compClass" type="xs:string" />
      <xs:element minOccurs="0" name="minDaysPassed" type="xs:float" />
      <xs:element minOccurs="0" name="allowedTargetTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="disallowedTargetTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="minIncChancePopulationIntentFactor" type="xs:float" />
      <xs:element minOccurs="0" name="enableIfAnyModActive">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="disableIfAnyModActive">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.StuffCategoryDef">
    <xs:all>
      <xs:element minOccurs="0" name="noun" type="xs:string" />
      <xs:element minOccurs="0" name="destroySoundSmall" type="xs:string" />
      <xs:element minOccurs="0" name="destroySoundMedium" type="xs:string" />
      <xs:element minOccurs="0" name="destroySoundLarge" type="xs:string" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.StyleItemCategoryDef">
    <xs:all>
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.SurgeryOutcomeEffectDef">
    <xs:all>
      <xs:element minOccurs="0" name="comps">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.SurgeryOutcomeComp" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="outcomes">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.SurgeryOutcome" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.SurgeryOutcomeComp">
    <xs:all />
  </xs:complexType>
  <xs:complexType name="RimWorld.SurgeryOutcome">
    <xs:all>
      <xs:element minOccurs="0" name="chance" type="xs:float" />
      <xs:element minOccurs="0" name="totalDamage" type="xs:int" />
      <xs:element minOccurs="0" name="applyEffectsToPart" type="xs:boolean" />
      <xs:element minOccurs="0" name="failure" type="xs:boolean" />
      <xs:element minOccurs="0" name="letterLabel" type="xs:string" />
      <xs:element minOccurs="0" name="letterText" type="xs:string" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.TaleDef">
    <xs:all>
      <xs:element minOccurs="0" name="type">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Volatile" />
            <xs:enumeration value="Expirable" />
            <xs:enumeration value="PermanentHistorical" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="taleClass" type="xs:string" />
      <xs:element minOccurs="0" name="usableForArt" type="xs:boolean" />
      <xs:element minOccurs="0" name="colonistOnly" type="xs:boolean" />
      <xs:element minOccurs="0" name="maxPerPawn" type="xs:int" />
      <xs:element minOccurs="0" name="ignoreChance" type="xs:float" />
      <xs:element minOccurs="0" name="expireDays" type="xs:float" />
      <xs:element minOccurs="0" name="rulePack" type="Verse.Grammar.RulePack" />
      <xs:element minOccurs="0" name="firstPawnSymbol" type="xs:string" />
      <xs:element minOccurs="0" name="secondPawnSymbol" type="xs:string" />
      <xs:element minOccurs="0" name="defSymbol" type="xs:string" />
      <xs:element minOccurs="0" name="defType" type="xs:string" />
      <xs:element minOccurs="0" name="baseInterest" type="xs:float" />
      <xs:element minOccurs="0" name="historyGraphColor" type="UnityEngine.Color" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.TattooDef">
    <xs:all>
      <xs:element minOccurs="0" name="tattooType">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Face" />
            <xs:enumeration value="Body" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="visibleNorth" type="xs:boolean" />
      <xs:element minOccurs="0" name="styleTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="styleGender">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Male" />
            <xs:enumeration value="MaleUsually" />
            <xs:enumeration value="Any" />
            <xs:enumeration value="FemaleUsually" />
            <xs:enumeration value="Female" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="noGraphic" type="xs:boolean" />
      <xs:element minOccurs="0" name="requiredGene" type="xs:string" />
      <xs:element minOccurs="0" name="texPath" type="xs:string" />
      <xs:element minOccurs="0" name="iconPath" type="xs:string" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.TerrainTemplateDef">
    <xs:all>
      <xs:element minOccurs="0" name="texturePath" type="xs:string" />
      <xs:element minOccurs="0" name="tags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="researchPrerequisites">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="burnedDef" type="xs:string" />
      <xs:element minOccurs="0" name="costList" type="Verse.ThingDefCountClass" />
      <xs:element minOccurs="0" name="designatorDropdown" type="xs:string" />
      <xs:element minOccurs="0" name="statBases" type="RimWorld.StatModifier" />
      <xs:element minOccurs="0" name="uiOrder" type="xs:int" />
      <xs:element minOccurs="0" name="renderPrecedenceStart" type="xs:int" />
      <xs:element minOccurs="0" name="constructionSkillPrerequisite" type="xs:int" />
      <xs:element minOccurs="0" name="canGenerateDefaultDesignator" type="xs:boolean" />
      <xs:element minOccurs="0" name="dominantStyleCategory" type="xs:string" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.ThingSetMakerDef">
    <xs:all>
      <xs:element minOccurs="0" name="root" type="RimWorld.ThingSetMaker" />
      <xs:element minOccurs="0" name="debugParams" type="RimWorld.ThingSetMakerParams" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.ThingSetMaker">
    <xs:all>
      <xs:element minOccurs="0" name="fixedParams" type="RimWorld.ThingSetMakerParams" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.ThingSetMakerParams">
    <xs:all>
      <xs:element minOccurs="0" name="techLevel">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Undefined" />
            <xs:enumeration value="Animal" />
            <xs:enumeration value="Neolithic" />
            <xs:enumeration value="Medieval" />
            <xs:enumeration value="Industrial" />
            <xs:enumeration value="Spacer" />
            <xs:enumeration value="Ultra" />
            <xs:enumeration value="Archotech" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="countRange" type="Verse.IntRange" />
      <xs:element minOccurs="0" name="filter" type="Verse.ThingFilter" />
      <xs:element minOccurs="0" name="qualityGenerator">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="BaseGen" />
            <xs:enumeration value="Reward" />
            <xs:enumeration value="Gift" />
            <xs:enumeration value="Super" />
            <xs:enumeration value="Trader" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="maxTotalMass" type="xs:float" />
      <xs:element minOccurs="0" name="maxThingMarketValue" type="xs:float" />
      <xs:element minOccurs="0" name="allowNonStackableDuplicates" type="xs:boolean" />
      <xs:element minOccurs="0" name="minSingleItemMarketValuePct" type="xs:float" />
      <xs:element minOccurs="0" name="totalMarketValueRange" type="Verse.FloatRange" />
      <xs:element minOccurs="0" name="totalNutritionRange" type="Verse.FloatRange" />
      <xs:element minOccurs="0" name="podContentsType">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Empty" />
            <xs:enumeration value="AncientFriendly" />
            <xs:enumeration value="AncientIncapped" />
            <xs:enumeration value="AncientHalfEaten" />
            <xs:enumeration value="AncientHostile" />
            <xs:enumeration value="Slave" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="makingFaction" type="xs:string" />
      <xs:element minOccurs="0" name="traderDef" type="xs:string" />
      <xs:element minOccurs="0" name="tile" type="xs:int" />
      <xs:element minOccurs="0" name="custom">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="key" type="xs:string" />
                  <xs:element name="value" type="System.Object" />
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="System.Object">
    <xs:all />
  </xs:complexType>
  <xs:complexType name="RimWorld.ThoughtDef">
    <xs:all>
      <xs:element minOccurs="0" name="thoughtClass" type="xs:string" />
      <xs:element minOccurs="0" name="workerClass" type="xs:string" />
      <xs:element minOccurs="0" name="stages">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.ThoughtStage" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="stackLimit" type="xs:int" />
      <xs:element minOccurs="0" name="stackedEffectMultiplier" type="xs:float" />
      <xs:element minOccurs="0" name="durationDays" type="xs:float" />
      <xs:element minOccurs="0" name="invert" type="xs:boolean" />
      <xs:element minOccurs="0" name="validWhileDespawned" type="xs:boolean" />
      <xs:element minOccurs="0" name="nextThought" type="xs:string" />
      <xs:element minOccurs="0" name="producesMemoryThought" type="xs:string" />
      <xs:element minOccurs="0" name="nullifyingTraits">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="neverNullifyIfAnyTrait">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="nullifyingTraitDegrees" type="Verse.TraitRequirement" />
      <xs:element minOccurs="0" name="nullifyingOwnTales">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="nullifyingPrecepts">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="nullifyingHediffs">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="nullifyingGenes">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="requiredTraits">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="requiredGenes">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="requiredTraitsDegree" type="xs:int" />
      <xs:element minOccurs="0" name="effectMultiplyingStat" type="xs:string" />
      <xs:element minOccurs="0" name="hediff" type="xs:string" />
      <xs:element minOccurs="0" name="gameCondition" type="xs:string" />
      <xs:element minOccurs="0" name="nullifiedIfNotColonist" type="xs:boolean" />
      <xs:element minOccurs="0" name="thoughtToMake" type="xs:string" />
      <xs:element minOccurs="0" name="showBubble" type="xs:boolean" />
      <xs:element minOccurs="0" name="minExpectation" type="xs:string" />
      <xs:element minOccurs="0" name="minExpectationForNegativeThought" type="xs:string" />
      <xs:element minOccurs="0" name="replaceThoughts">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="developmentalStageFilter">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="None" />
                  <xs:enumeration value="Newborn" />
                  <xs:enumeration value="Baby" />
                  <xs:enumeration value="Child" />
                  <xs:enumeration value="Adult" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="lerpMoodToZero" type="xs:boolean" />
      <xs:element minOccurs="0" name="stackLimitForSameOtherPawn" type="xs:int" />
      <xs:element minOccurs="0" name="lerpOpinionToZeroAfterDurationPct" type="xs:float" />
      <xs:element minOccurs="0" name="socialTargetDevelopmentalStageFilter">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="None" />
                  <xs:enumeration value="Newborn" />
                  <xs:enumeration value="Baby" />
                  <xs:enumeration value="Child" />
                  <xs:enumeration value="Adult" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="doNotApplyToQuestLodgers" type="xs:boolean" />
      <xs:element minOccurs="0" name="maxCumulatedOpinionOffset" type="xs:float" />
      <xs:element minOccurs="0" name="taleDef" type="xs:string" />
      <xs:element minOccurs="0" name="gender">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="None" />
            <xs:enumeration value="Male" />
            <xs:enumeration value="Female" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="labelInBracketsExtraForHediff" type="xs:string" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.ThoughtStage">
    <xs:all>
      <xs:element minOccurs="0" name="label" type="xs:string" />
      <xs:element minOccurs="0" name="labelSocial" type="xs:string" />
      <xs:element minOccurs="0" name="labelAbstract" type="xs:string" />
      <xs:element minOccurs="0" name="description" type="xs:string" />
      <xs:element minOccurs="0" name="baseMoodEffect" type="xs:float" />
      <xs:element minOccurs="0" name="baseOpinionOffset" type="xs:float" />
      <xs:element minOccurs="0" name="visible" type="xs:boolean" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.TimeAssignmentDef">
    <xs:all>
      <xs:element minOccurs="0" name="color" type="UnityEngine.Color" />
      <xs:element minOccurs="0" name="allowRest" type="xs:boolean" />
      <xs:element minOccurs="0" name="allowJoy" type="xs:boolean" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.TraderKindDef">
    <xs:all>
      <xs:element minOccurs="0" name="stockGenerators">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.StockGenerator" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="orbital" type="xs:boolean" />
      <xs:element minOccurs="0" name="requestable" type="xs:boolean" />
      <xs:element minOccurs="0" name="hideThingsNotWillingToTrade" type="xs:boolean" />
      <xs:element minOccurs="0" name="commonality" type="xs:float" />
      <xs:element minOccurs="0" name="category" type="xs:string" />
      <xs:element minOccurs="0" name="tradeCurrency">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Silver" />
            <xs:enumeration value="Favor" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="commonalityMultFromPopulationIntent" type="Verse.SimpleCurve" />
      <xs:element minOccurs="0" name="faction" type="xs:string" />
      <xs:element minOccurs="0" name="permitRequiredForTrading" type="xs:string" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.StockGenerator">
    <xs:all>
      <xs:element minOccurs="0" name="countRange" type="Verse.IntRange" />
      <xs:element minOccurs="0" name="customCountRanges" type="Verse.ThingDefCountRangeClass" />
      <xs:element minOccurs="0" name="totalPriceRange" type="Verse.FloatRange" />
      <xs:element minOccurs="0" name="maxTechLevelGenerate">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Undefined" />
            <xs:enumeration value="Animal" />
            <xs:enumeration value="Neolithic" />
            <xs:enumeration value="Medieval" />
            <xs:enumeration value="Industrial" />
            <xs:enumeration value="Spacer" />
            <xs:enumeration value="Ultra" />
            <xs:enumeration value="Archotech" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="maxTechLevelBuy">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Undefined" />
            <xs:enumeration value="Animal" />
            <xs:enumeration value="Neolithic" />
            <xs:enumeration value="Medieval" />
            <xs:enumeration value="Industrial" />
            <xs:enumeration value="Spacer" />
            <xs:enumeration value="Ultra" />
            <xs:enumeration value="Archotech" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="price">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Undefined" />
            <xs:enumeration value="VeryCheap" />
            <xs:enumeration value="Cheap" />
            <xs:enumeration value="Normal" />
            <xs:enumeration value="Expensive" />
            <xs:enumeration value="Exorbitant" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.ThingDefCountRangeClass">
    <xs:sequence>
      <xs:any minOccurs="0" processContents="skip" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="RimWorld.TrainableDef">
    <xs:all>
      <xs:element minOccurs="0" name="difficulty" type="xs:float" />
      <xs:element minOccurs="0" name="minBodySize" type="xs:float" />
      <xs:element minOccurs="0" name="prerequisites">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="tags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="defaultTrainable" type="xs:boolean" />
      <xs:element minOccurs="0" name="requiredTrainability" type="xs:string" />
      <xs:element minOccurs="0" name="steps" type="xs:int" />
      <xs:element minOccurs="0" name="listPriority" type="xs:float" />
      <xs:element minOccurs="0" name="icon" type="xs:string" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.TraitDef">
    <xs:all>
      <xs:element minOccurs="0" name="degreeDatas">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.TraitDegreeData" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="conflictingTraits">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="exclusionTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="conflictingPassions">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="forcedPassions">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="requiredWorkTypes">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="requiredWorkTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="None" />
                  <xs:enumeration value="ManualDumb" />
                  <xs:enumeration value="ManualSkilled" />
                  <xs:enumeration value="Violent" />
                  <xs:enumeration value="Caring" />
                  <xs:enumeration value="Social" />
                  <xs:enumeration value="Commoner" />
                  <xs:enumeration value="Intellectual" />
                  <xs:enumeration value="Animals" />
                  <xs:enumeration value="Artistic" />
                  <xs:enumeration value="Crafting" />
                  <xs:enumeration value="Cooking" />
                  <xs:enumeration value="Firefighting" />
                  <xs:enumeration value="Cleaning" />
                  <xs:enumeration value="Hauling" />
                  <xs:enumeration value="PlantWork" />
                  <xs:enumeration value="Mining" />
                  <xs:enumeration value="Hunting" />
                  <xs:enumeration value="Constructing" />
                  <xs:enumeration value="Shooting" />
                  <xs:enumeration value="AllWork" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="disabledWorkTypes">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="disabledWorkTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="None" />
                  <xs:enumeration value="ManualDumb" />
                  <xs:enumeration value="ManualSkilled" />
                  <xs:enumeration value="Violent" />
                  <xs:enumeration value="Caring" />
                  <xs:enumeration value="Social" />
                  <xs:enumeration value="Commoner" />
                  <xs:enumeration value="Intellectual" />
                  <xs:enumeration value="Animals" />
                  <xs:enumeration value="Artistic" />
                  <xs:enumeration value="Crafting" />
                  <xs:enumeration value="Cooking" />
                  <xs:enumeration value="Firefighting" />
                  <xs:enumeration value="Cleaning" />
                  <xs:enumeration value="Hauling" />
                  <xs:enumeration value="PlantWork" />
                  <xs:enumeration value="Mining" />
                  <xs:enumeration value="Hunting" />
                  <xs:enumeration value="Constructing" />
                  <xs:enumeration value="Shooting" />
                  <xs:enumeration value="AllWork" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="disableHostilityFromAnimalType">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="None" />
            <xs:enumeration value="Canine" />
            <xs:enumeration value="Dryad" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="disableHostilityFromFaction" type="xs:string" />
      <xs:element minOccurs="0" name="allowOnHostileSpawn" type="xs:boolean" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.TraitDegreeData">
    <xs:all>
      <xs:element minOccurs="0" name="label" type="xs:string" />
      <xs:element minOccurs="0" name="labelMale" type="xs:string" />
      <xs:element minOccurs="0" name="labelFemale" type="xs:string" />
      <xs:element minOccurs="0" name="description" type="xs:string" />
      <xs:element minOccurs="0" name="degree" type="xs:int" />
      <xs:element minOccurs="0" name="commonality" type="xs:float" />
      <xs:element minOccurs="0" name="statOffsets" type="RimWorld.StatModifier" />
      <xs:element minOccurs="0" name="statFactors" type="RimWorld.StatModifier" />
      <xs:element minOccurs="0" name="thinkTree" type="xs:string" />
      <xs:element minOccurs="0" name="randomMentalState" type="xs:string" />
      <xs:element minOccurs="0" name="randomMentalStateMtbDaysMoodCurve" type="Verse.SimpleCurve" />
      <xs:element minOccurs="0" name="forcedMentalState" type="xs:string" />
      <xs:element minOccurs="0" name="forcedMentalStateMtbDays" type="xs:float" />
      <xs:element minOccurs="0" name="disallowedMentalStates">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="disallowedThoughts">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="disallowedThoughtsFromIngestion">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.TraitIngestionThoughtsOverride" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="extraThoughtsFromIngestion">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.TraitIngestionThoughtsOverride" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="disallowedInspirations">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="mentalBreakInspirationGainSet">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="mentalBreakInspirationGainReasonText" type="xs:string" />
      <xs:element minOccurs="0" name="allowedMeditationFocusTypes">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="disallowedMeditationFocusTypes">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="mentalBreakInspirationGainChance" type="xs:float" />
      <xs:element minOccurs="0" name="theOnlyAllowedMentalBreaks">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="skillGains">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="key" type="xs:string" />
                  <xs:element name="value" type="xs:int" />
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="socialFightChanceFactor" type="xs:float" />
      <xs:element minOccurs="0" name="marketValueFactorOffset" type="xs:float" />
      <xs:element minOccurs="0" name="randomDiseaseMtbDays" type="xs:float" />
      <xs:element minOccurs="0" name="hungerRateFactor" type="xs:float" />
      <xs:element minOccurs="0" name="mentalStateGiverClass" type="xs:string" />
      <xs:element minOccurs="0" name="abilities">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="needs">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="ingestibleModifiers">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.IngestibleModifiers" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.TraitIngestionThoughtsOverride">
    <xs:all>
      <xs:element minOccurs="0" name="thing" type="xs:string" />
      <xs:element minOccurs="0" name="meatSource">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="NotMeat" />
            <xs:enumeration value="Undefined" />
            <xs:enumeration value="Insect" />
            <xs:enumeration value="Humanlike" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="thoughts">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="thoughtsDirect">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="thoughtsAsIngredient">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.IngestibleModifiers">
    <xs:all>
      <xs:element minOccurs="0" name="ingestible" type="xs:string" />
      <xs:element minOccurs="0" name="optimalityOffset" type="xs:float" />
      <xs:element minOccurs="0" name="poisonChanceOverride" type="xs:float" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.TransferableSorterDef">
    <xs:all>
      <xs:element minOccurs="0" name="comparerClass" type="xs:string" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.TransportShipDef">
    <xs:all>
      <xs:element minOccurs="0" name="shipThing" type="xs:string" />
      <xs:element minOccurs="0" name="arrivingSkyfaller" type="xs:string" />
      <xs:element minOccurs="0" name="leavingSkyfaller" type="xs:string" />
      <xs:element minOccurs="0" name="worldObject" type="xs:string" />
      <xs:element minOccurs="0" name="maxLaunchDistance" type="xs:int" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.WeaponTraitDef">
    <xs:all>
      <xs:element minOccurs="0" name="equippedStatOffsets" type="RimWorld.StatModifier" />
      <xs:element minOccurs="0" name="equippedHediffs">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="bondedHediffs">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="bondedThought" type="xs:string" />
      <xs:element minOccurs="0" name="killThought" type="xs:string" />
      <xs:element minOccurs="0" name="workerClass" type="xs:string" />
      <xs:element minOccurs="0" name="exclusionTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="commonality" type="xs:float" />
      <xs:element minOccurs="0" name="marketValueOffset" type="xs:float" />
      <xs:element minOccurs="0" name="neverBond" type="xs:boolean" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.WorkGiverDef">
    <xs:all>
      <xs:element minOccurs="0" name="giverClass" type="xs:string" />
      <xs:element minOccurs="0" name="workType" type="xs:string" />
      <xs:element minOccurs="0" name="workTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="None" />
                  <xs:enumeration value="ManualDumb" />
                  <xs:enumeration value="ManualSkilled" />
                  <xs:enumeration value="Violent" />
                  <xs:enumeration value="Caring" />
                  <xs:enumeration value="Social" />
                  <xs:enumeration value="Commoner" />
                  <xs:enumeration value="Intellectual" />
                  <xs:enumeration value="Animals" />
                  <xs:enumeration value="Artistic" />
                  <xs:enumeration value="Crafting" />
                  <xs:enumeration value="Cooking" />
                  <xs:enumeration value="Firefighting" />
                  <xs:enumeration value="Cleaning" />
                  <xs:enumeration value="Hauling" />
                  <xs:enumeration value="PlantWork" />
                  <xs:enumeration value="Mining" />
                  <xs:enumeration value="Hunting" />
                  <xs:enumeration value="Constructing" />
                  <xs:enumeration value="Shooting" />
                  <xs:enumeration value="AllWork" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="priorityInType" type="xs:int" />
      <xs:element minOccurs="0" name="verb" type="xs:string" />
      <xs:element minOccurs="0" name="gerund" type="xs:string" />
      <xs:element minOccurs="0" name="scanThings" type="xs:boolean" />
      <xs:element minOccurs="0" name="scanCells" type="xs:boolean" />
      <xs:element minOccurs="0" name="emergency" type="xs:boolean" />
      <xs:element minOccurs="0" name="requiredCapacities">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="directOrderable" type="xs:boolean" />
      <xs:element minOccurs="0" name="prioritizeSustains" type="xs:boolean" />
      <xs:element minOccurs="0" name="nonColonistsCanDo" type="xs:boolean" />
      <xs:element minOccurs="0" name="tagToGive">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Misc" />
            <xs:enumeration value="MiscWork" />
            <xs:enumeration value="Fieldwork" />
            <xs:enumeration value="Idle" />
            <xs:enumeration value="InMentalState" />
            <xs:enumeration value="SatisfyingNeeds" />
            <xs:enumeration value="DraftedOrder" />
            <xs:enumeration value="UnspecifiedLordDuty" />
            <xs:enumeration value="WaitingForOthersToFinishGatheringItems" />
            <xs:enumeration value="TuckedIntoBed" />
            <xs:enumeration value="RestingForMedicalReasons" />
            <xs:enumeration value="ChangingApparel" />
            <xs:enumeration value="Escaping" />
            <xs:enumeration value="JoiningCaravan" />
            <xs:enumeration value="TrainedAnimalBehavior" />
            <xs:enumeration value="UnloadingOwnInventory" />
            <xs:enumeration value="TakeForInventoryStock" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="equivalenceGroup" type="xs:string" />
      <xs:element minOccurs="0" name="canBeDoneWhileDrafted" type="xs:boolean" />
      <xs:element minOccurs="0" name="autoTakeablePriorityDrafted" type="xs:int" />
      <xs:element minOccurs="0" name="forceMote" type="xs:string" />
      <xs:element minOccurs="0" name="forceFleck" type="xs:string" />
      <xs:element minOccurs="0" name="canBeDoneByMechs" type="xs:boolean" />
      <xs:element minOccurs="0" name="fixedBillGiverDefs">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="billGiversAllHumanlikes" type="xs:boolean" />
      <xs:element minOccurs="0" name="billGiversAllHumanlikesCorpses" type="xs:boolean" />
      <xs:element minOccurs="0" name="billGiversAllMechanoids" type="xs:boolean" />
      <xs:element minOccurs="0" name="billGiversAllMechanoidsCorpses" type="xs:boolean" />
      <xs:element minOccurs="0" name="billGiversAllAnimals" type="xs:boolean" />
      <xs:element minOccurs="0" name="billGiversAllAnimalsCorpses" type="xs:boolean" />
      <xs:element minOccurs="0" name="tendToHumanlikesOnly" type="xs:boolean" />
      <xs:element minOccurs="0" name="tendToAnimalsOnly" type="xs:boolean" />
      <xs:element minOccurs="0" name="feedHumanlikesOnly" type="xs:boolean" />
      <xs:element minOccurs="0" name="feedAnimalsOnly" type="xs:boolean" />
      <xs:element minOccurs="0" name="doesSmoothing" type="xs:boolean" />
      <xs:element minOccurs="0" name="scannerDef" type="xs:string" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.WorkGiverEquivalenceGroupDef">
    <xs:all>
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.WorldObjectDef">
    <xs:all>
      <xs:element minOccurs="0" name="worldObjectClass" type="xs:string" />
      <xs:element minOccurs="0" name="canHaveFaction" type="xs:boolean" />
      <xs:element minOccurs="0" name="saved" type="xs:boolean" />
      <xs:element minOccurs="0" name="canBePlayerHome" type="xs:boolean" />
      <xs:element minOccurs="0" name="comps">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.WorldObjectCompProperties" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="allowCaravanIncidentsWhichGenerateMap" type="xs:boolean" />
      <xs:element minOccurs="0" name="isTempIncidentMapOwner" type="xs:boolean" />
      <xs:element minOccurs="0" name="IncidentTargetTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="selectable" type="xs:boolean" />
      <xs:element minOccurs="0" name="neverMultiSelect" type="xs:boolean" />
      <xs:element minOccurs="0" name="mapGenerator" type="xs:string" />
      <xs:element minOccurs="0" name="inspectorTabs">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="useDynamicDrawer" type="xs:boolean" />
      <xs:element minOccurs="0" name="expandingIcon" type="xs:boolean" />
      <xs:element minOccurs="0" name="expandingIconTexture" type="xs:string" />
      <xs:element minOccurs="0" name="expandingIconPriority" type="xs:float" />
      <xs:element minOccurs="0" name="texture" type="xs:string" />
      <xs:element minOccurs="0" name="expandMore" type="xs:boolean" />
      <xs:element minOccurs="0" name="rotateGraphicWhenTraveling" type="xs:boolean" />
      <xs:element minOccurs="0" name="expandingIconColor" type="UnityEngine.Color" />
      <xs:element minOccurs="0" name="expandingIconDrawSize" type="xs:float" />
      <xs:element minOccurs="0" name="blockExitGridUntilBattleIsWon" type="xs:boolean" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.WorldObjectCompProperties">
    <xs:all>
      <xs:element minOccurs="0" name="compClass" type="xs:string" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.XenotypeDef">
    <xs:all>
      <xs:element minOccurs="0" name="genes">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="inheritable" type="xs:boolean" />
      <xs:element minOccurs="0" name="iconPath" type="xs:string" />
      <xs:element minOccurs="0" name="descriptionShort" type="xs:string" />
      <xs:element minOccurs="0" name="combatPowerFactor" type="xs:float" />
      <xs:element minOccurs="0" name="canGenerateAsCombatant" type="xs:boolean" />
      <xs:element minOccurs="0" name="factionlessGenerationWeight" type="xs:float" />
      <xs:element minOccurs="0" name="nameMaker" type="xs:string" />
      <xs:element minOccurs="0" name="nameMakerFemale" type="xs:string" />
      <xs:element minOccurs="0" name="chanceToUseNameMaker" type="xs:float" />
      <xs:element minOccurs="0" name="forbiddenWeaponClasses">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="generateWithXenogermReplicatingHediffChance" type="xs:float" />
      <xs:element minOccurs="0" name="xenogermReplicatingDurationLeftDaysRange" type="Verse.FloatRange" />
      <xs:element minOccurs="0" name="soundDefOnImplant" type="xs:string" />
      <xs:element minOccurs="0" name="doubleXenotypeChances" type="RimWorld.XenotypeChance" />
      <xs:element minOccurs="0" name="displayPriority" type="xs:float" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.XenotypeChance">
    <xs:sequence>
      <xs:any minOccurs="0" processContents="skip" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="RimWorld.XenotypeIconDef">
    <xs:all>
      <xs:element minOccurs="0" name="texPath" type="xs:string" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.AI.DutyDef">
    <xs:all>
      <xs:element minOccurs="0" name="thinkNode" type="Verse.AI.ThinkNode" />
      <xs:element minOccurs="0" name="constantThinkNode" type="Verse.AI.ThinkNode" />
      <xs:element minOccurs="0" name="alwaysShowWeapon" type="xs:boolean" />
      <xs:element minOccurs="0" name="hook">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="None" />
            <xs:enumeration value="HighPriority" />
            <xs:enumeration value="MediumPriority" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="socialModeMax">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Off" />
            <xs:enumeration value="Quiet" />
            <xs:enumeration value="Normal" />
            <xs:enumeration value="SuperActive" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="threatDisabled" type="xs:boolean" />
      <xs:element minOccurs="0" name="ritualSpectateTarget" type="xs:boolean" />
      <xs:element minOccurs="0" name="forceFaceUpPosture" type="xs:boolean" />
      <xs:element minOccurs="0" name="drawBodyOverride" type="xs:boolean" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.AI.ThinkNode">
    <xs:all>
      <xs:element minOccurs="0" name="subNodes">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.AI.ThinkNode" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="leaveJoinableLordIfIssuesJob" type="xs:boolean" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.ApparelLayerDef">
    <xs:all>
      <xs:element minOccurs="0" name="drawOrder" type="xs:int" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.BodyDef">
    <xs:all>
      <xs:element minOccurs="0" name="corePart" type="Verse.BodyPartRecord" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.BodyPartRecord">
    <xs:all>
      <xs:element minOccurs="0" name="body" type="xs:string" />
      <xs:element minOccurs="0" name="def" type="xs:string" />
      <xs:element minOccurs="0" name="customLabel" type="xs:string" />
      <xs:element minOccurs="0" name="parts">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.BodyPartRecord" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="height">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Undefined" />
            <xs:enumeration value="Bottom" />
            <xs:enumeration value="Middle" />
            <xs:enumeration value="Top" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="depth">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Undefined" />
            <xs:enumeration value="Inside" />
            <xs:enumeration value="Outside" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="coverage" type="xs:float" />
      <xs:element minOccurs="0" name="groups">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="woundAnchorTag" type="xs:string" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.BodyPartDef">
    <xs:all>
      <xs:element minOccurs="0" name="labelShort" type="xs:string" />
      <xs:element minOccurs="0" name="tags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="hitPoints" type="xs:int" />
      <xs:element minOccurs="0" name="permanentInjuryChanceFactor" type="xs:float" />
      <xs:element minOccurs="0" name="bleedRate" type="xs:float" />
      <xs:element minOccurs="0" name="frostbiteVulnerability" type="xs:float" />
      <xs:element minOccurs="0" name="alive" type="xs:boolean" />
      <xs:element minOccurs="0" name="delicate" type="xs:boolean" />
      <xs:element minOccurs="0" name="canScarify" type="xs:boolean" />
      <xs:element minOccurs="0" name="beautyRelated" type="xs:boolean" />
      <xs:element minOccurs="0" name="conceptual" type="xs:boolean" />
      <xs:element minOccurs="0" name="socketed" type="xs:boolean" />
      <xs:element minOccurs="0" name="spawnThingOnRemoved" type="xs:string" />
      <xs:element minOccurs="0" name="pawnGeneratorCanAmputate" type="xs:boolean" />
      <xs:element minOccurs="0" name="canSuggestAmputation" type="xs:boolean" />
      <xs:element minOccurs="0" name="forceAlwaysRemovable" type="xs:boolean" />
      <xs:element minOccurs="0" name="hitChanceFactors">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="key" type="xs:string" />
                  <xs:element name="value" type="xs:float" />
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="destroyableByDamage" type="xs:boolean" />
      <xs:element minOccurs="0" name="removeRecipeLabelOverride" type="xs:string" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.BodyPartGroupDef">
    <xs:all>
      <xs:element minOccurs="0" name="labelShort" type="xs:string" />
      <xs:element minOccurs="0" name="listOrder" type="xs:int" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.BodyPartTagDef">
    <xs:all>
      <xs:element minOccurs="0" name="vital" type="xs:boolean" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.ClamorDef">
    <xs:all>
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.DamageArmorCategoryDef">
    <xs:all>
      <xs:element minOccurs="0" name="multStat" type="xs:string" />
      <xs:element minOccurs="0" name="armorRatingStat" type="xs:string" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.DamageDef">
    <xs:all>
      <xs:element minOccurs="0" name="workerClass" type="xs:string" />
      <xs:element minOccurs="0" name="hasForcefulImpact" type="xs:boolean" />
      <xs:element minOccurs="0" name="harmsHealth" type="xs:boolean" />
      <xs:element minOccurs="0" name="makesBlood" type="xs:boolean" />
      <xs:element minOccurs="0" name="canInterruptJobs" type="xs:boolean" />
      <xs:element minOccurs="0" name="isRanged" type="xs:boolean" />
      <xs:element minOccurs="0" name="makesAnimalsFlee" type="xs:boolean" />
      <xs:element minOccurs="0" name="execution" type="xs:boolean" />
      <xs:element minOccurs="0" name="combatLogRules" type="xs:string" />
      <xs:element minOccurs="0" name="buildingDamageFactor" type="xs:float" />
      <xs:element minOccurs="0" name="buildingDamageFactorPassable" type="xs:float" />
      <xs:element minOccurs="0" name="buildingDamageFactorImpassable" type="xs:float" />
      <xs:element minOccurs="0" name="plantDamageFactor" type="xs:float" />
      <xs:element minOccurs="0" name="corpseDamageFactor" type="xs:float" />
      <xs:element minOccurs="0" name="canUseDeflectMetalEffect" type="xs:boolean" />
      <xs:element minOccurs="0" name="impactSoundType" type="xs:string" />
      <xs:element minOccurs="0" name="deathMessage" type="xs:string" />
      <xs:element minOccurs="0" name="damageEffecter" type="xs:string" />
      <xs:element minOccurs="0" name="defaultDamage" type="xs:int" />
      <xs:element minOccurs="0" name="defaultArmorPenetration" type="xs:float" />
      <xs:element minOccurs="0" name="defaultStoppingPower" type="xs:float" />
      <xs:element minOccurs="0" name="additionalHediffs">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DamageDefAdditionalHediff" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="applyAdditionalHediffsIfHuntingForFood" type="xs:boolean" />
      <xs:element minOccurs="0" name="armorCategory" type="xs:string" />
      <xs:element minOccurs="0" name="minDamageToFragment" type="xs:int" />
      <xs:element minOccurs="0" name="overkillPctToDestroyPart" type="Verse.FloatRange" />
      <xs:element minOccurs="0" name="consideredHelpful" type="xs:boolean" />
      <xs:element minOccurs="0" name="harmAllLayersUntilOutside" type="xs:boolean" />
      <xs:element minOccurs="0" name="hediff" type="xs:string" />
      <xs:element minOccurs="0" name="hediffSkin" type="xs:string" />
      <xs:element minOccurs="0" name="hediffSolid" type="xs:string" />
      <xs:element minOccurs="0" name="isExplosive" type="xs:boolean" />
      <xs:element minOccurs="0" name="explosionSnowMeltAmount" type="xs:float" />
      <xs:element minOccurs="0" name="explosionAffectOutsidePartsOnly" type="xs:boolean" />
      <xs:element minOccurs="0" name="explosionCellMote" type="xs:string" />
      <xs:element minOccurs="0" name="explosionCellFleck" type="xs:string" />
      <xs:element minOccurs="0" name="explosionColorCenter" type="UnityEngine.Color" />
      <xs:element minOccurs="0" name="explosionColorEdge" type="UnityEngine.Color" />
      <xs:element minOccurs="0" name="explosionInteriorEffecter" type="xs:string" />
      <xs:element minOccurs="0" name="explosionInteriorMote" type="xs:string" />
      <xs:element minOccurs="0" name="explosionInteriorFleck" type="xs:string" />
      <xs:element minOccurs="0" name="explosionCenterMote" type="xs:string" />
      <xs:element minOccurs="0" name="explosionCenterFleck" type="xs:string" />
      <xs:element minOccurs="0" name="explosionCenterEffecter" type="xs:string" />
      <xs:element minOccurs="0" name="explosionCellEffecter" type="xs:string" />
      <xs:element minOccurs="0" name="explosionCellEffecterChance" type="xs:float" />
      <xs:element minOccurs="0" name="explosionCellEffecterMaxRadius" type="xs:float" />
      <xs:element minOccurs="0" name="explosionHeatEnergyPerCell" type="xs:float" />
      <xs:element minOccurs="0" name="expolosionPropagationSpeed" type="xs:float" />
      <xs:element minOccurs="0" name="soundExplosion" type="xs:string" />
      <xs:element minOccurs="0" name="explosionInteriorCellCountMultiplier" type="xs:float" />
      <xs:element minOccurs="0" name="explosionInteriorCellDistanceMultiplier" type="xs:float" />
      <xs:element minOccurs="0" name="stabChanceOfForcedInternal" type="xs:float" />
      <xs:element minOccurs="0" name="stabPierceBonus" type="xs:float" />
      <xs:element minOccurs="0" name="cutExtraTargetsCurve" type="Verse.SimpleCurve" />
      <xs:element minOccurs="0" name="cutCleaveBonus" type="xs:float" />
      <xs:element minOccurs="0" name="bluntInnerHitChance" type="xs:float" />
      <xs:element minOccurs="0" name="bluntInnerHitDamageFractionToConvert" type="Verse.FloatRange" />
      <xs:element minOccurs="0" name="bluntInnerHitDamageFractionToAdd" type="Verse.FloatRange" />
      <xs:element minOccurs="0" name="bluntStunDuration" type="xs:float" />
      <xs:element minOccurs="0" name="bluntStunChancePerDamagePctOfCorePartToHeadCurve" type="Verse.SimpleCurve" />
      <xs:element minOccurs="0" name="bluntStunChancePerDamagePctOfCorePartToBodyCurve" type="Verse.SimpleCurve" />
      <xs:element minOccurs="0" name="scratchSplitPercentage" type="xs:float" />
      <xs:element minOccurs="0" name="biteDamageMultiplier" type="xs:float" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.DamageDefAdditionalHediff">
    <xs:all>
      <xs:element minOccurs="0" name="hediff" type="xs:string" />
      <xs:element minOccurs="0" name="severityPerDamageDealt" type="xs:float" />
      <xs:element minOccurs="0" name="severityFixed" type="xs:float" />
      <xs:element minOccurs="0" name="victimSeverityScaling" type="xs:string" />
      <xs:element minOccurs="0" name="inverseStatScaling" type="xs:boolean" />
      <xs:element minOccurs="0" name="victimSeverityScalingByInvBodySize" type="xs:boolean" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.DebugTabMenuDef">
    <xs:all>
      <xs:element minOccurs="0" name="menuClass" type="xs:string" />
      <xs:element minOccurs="0" name="displayOrder" type="xs:int" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.DesignationCategoryDef">
    <xs:all>
      <xs:element minOccurs="0" name="specialDesignatorClasses">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="order" type="xs:int" />
      <xs:element minOccurs="0" name="showPowerGrid" type="xs:boolean" />
      <xs:element minOccurs="0" name="researchPrerequisites">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="preferredColumn" type="xs:int" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.DesignationDef">
    <xs:all>
      <xs:element minOccurs="0" name="texturePath" type="xs:string" />
      <xs:element minOccurs="0" name="targetType">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Thing" />
            <xs:enumeration value="Cell" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="removeIfBuildingDespawned" type="xs:boolean" />
      <xs:element minOccurs="0" name="designateCancelable" type="xs:boolean" />
      <xs:element minOccurs="0" name="shouldBatchDraw" type="xs:boolean" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.DesignatorDropdownGroupDef">
    <xs:all>
      <xs:element minOccurs="0" name="iconSource">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Cost" />
            <xs:enumeration value="Placed" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="useGridMenu" type="xs:boolean" />
      <xs:element minOccurs="0" name="includeEyeDropperTool" type="xs:boolean" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.EffecterDef">
    <xs:all>
      <xs:element minOccurs="0" name="children">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.SubEffecterDef" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="positionRadius" type="xs:float" />
      <xs:element minOccurs="0" name="offsetTowardsTarget" type="Verse.FloatRange" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.SubEffecterDef">
    <xs:all>
      <xs:element minOccurs="0" name="subEffecterClass" type="xs:string" />
      <xs:element minOccurs="0" name="burstCount" type="Verse.IntRange" />
      <xs:element minOccurs="0" name="ticksBetweenMotes" type="xs:int" />
      <xs:element minOccurs="0" name="maxMoteCount" type="xs:int" />
      <xs:element minOccurs="0" name="initialDelayTicks" type="xs:int" />
      <xs:element minOccurs="0" name="chancePerTick" type="xs:float" />
      <xs:element minOccurs="0" name="spawnLocType">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="OnSource" />
            <xs:enumeration value="BetweenPositions" />
            <xs:enumeration value="BetweenTouchingCells" />
            <xs:enumeration value="RandomCellOnTarget" />
            <xs:enumeration value="RandomDrawPosOnTarget" />
            <xs:enumeration value="OnTarget" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="positionLerpFactor" type="xs:float" />
      <xs:element minOccurs="0" name="positionOffset" type="UnityEngine.Vector3" />
      <xs:element minOccurs="0" name="positionRadius" type="xs:float" />
      <xs:element minOccurs="0" name="positionRadiusMin" type="xs:float" />
      <xs:element minOccurs="0" name="perRotationOffsets">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="UnityEngine.Vector3" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="positionDimensions" type="UnityEngine.Vector3" />
      <xs:element minOccurs="0" name="attachToSpawnThing" type="xs:boolean" />
      <xs:element minOccurs="0" name="avoidLastPositionRadius" type="xs:float" />
      <xs:element minOccurs="0" name="moteDef" type="xs:string" />
      <xs:element minOccurs="0" name="fleckDef" type="xs:string" />
      <xs:element minOccurs="0" name="color" type="UnityEngine.Color" />
      <xs:element minOccurs="0" name="angle" type="Verse.FloatRange" />
      <xs:element minOccurs="0" name="absoluteAngle" type="xs:boolean" />
      <xs:element minOccurs="0" name="useTargetAInitialRotation" type="xs:boolean" />
      <xs:element minOccurs="0" name="useTargetBInitialRotation" type="xs:boolean" />
      <xs:element minOccurs="0" name="fleckUsesAngleForVelocity" type="xs:boolean" />
      <xs:element minOccurs="0" name="rotateTowardsTargetCenter" type="xs:boolean" />
      <xs:element minOccurs="0" name="speed" type="Verse.FloatRange" />
      <xs:element minOccurs="0" name="rotation" type="Verse.FloatRange" />
      <xs:element minOccurs="0" name="rotationRate" type="Verse.FloatRange" />
      <xs:element minOccurs="0" name="scale" type="Verse.FloatRange" />
      <xs:element minOccurs="0" name="airTime" type="Verse.FloatRange" />
      <xs:element minOccurs="0" name="soundDef" type="xs:string" />
      <xs:element minOccurs="0" name="intermittentSoundInterval" type="Verse.IntRange" />
      <xs:element minOccurs="0" name="ticksBeforeSustainerStart" type="xs:int" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.FleckDef">
    <xs:all>
      <xs:element minOccurs="0" name="fleckSystemClass" type="xs:string" />
      <xs:element minOccurs="0" name="altitudeLayer">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Terrain" />
            <xs:enumeration value="TerrainScatter" />
            <xs:enumeration value="Floor" />
            <xs:enumeration value="Conduits" />
            <xs:enumeration value="FloorCoverings" />
            <xs:enumeration value="FloorEmplacement" />
            <xs:enumeration value="Filth" />
            <xs:enumeration value="Zone" />
            <xs:enumeration value="SmallWire" />
            <xs:enumeration value="LowPlant" />
            <xs:enumeration value="MoteLow" />
            <xs:enumeration value="Shadows" />
            <xs:enumeration value="DoorMoveable" />
            <xs:enumeration value="Building" />
            <xs:enumeration value="BuildingBelowTop" />
            <xs:enumeration value="BuildingOnTop" />
            <xs:enumeration value="Item" />
            <xs:enumeration value="ItemImportant" />
            <xs:enumeration value="LayingPawn" />
            <xs:enumeration value="PawnRope" />
            <xs:enumeration value="Projectile" />
            <xs:enumeration value="Pawn" />
            <xs:enumeration value="PawnUnused" />
            <xs:enumeration value="PawnState" />
            <xs:enumeration value="Blueprint" />
            <xs:enumeration value="MoteOverheadLow" />
            <xs:enumeration value="MoteOverhead" />
            <xs:enumeration value="Gas" />
            <xs:enumeration value="Skyfaller" />
            <xs:enumeration value="Weather" />
            <xs:enumeration value="LightingOverlay" />
            <xs:enumeration value="VisEffects" />
            <xs:enumeration value="FogOfWar" />
            <xs:enumeration value="WorldClipper" />
            <xs:enumeration value="MapDataOverlay" />
            <xs:enumeration value="MetaOverlays" />
            <xs:enumeration value="_Count" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="altitudeLayerIncOffset" type="xs:float" />
      <xs:element minOccurs="0" name="drawGUIOverlay" type="xs:boolean" />
      <xs:element minOccurs="0" name="graphicData" type="Verse.GraphicData" />
      <xs:element minOccurs="0" name="randomGraphics">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.GraphicData" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="realTime" type="xs:boolean" />
      <xs:element minOccurs="0" name="attachedToHead" type="xs:boolean" />
      <xs:element minOccurs="0" name="fadeInTime" type="xs:float" />
      <xs:element minOccurs="0" name="solidTime" type="xs:float" />
      <xs:element minOccurs="0" name="fadeOutTime" type="xs:float" />
      <xs:element minOccurs="0" name="acceleration" type="UnityEngine.Vector3" />
      <xs:element minOccurs="0" name="speedPerTime" type="Verse.FloatRange" />
      <xs:element minOccurs="0" name="growthRate" type="xs:float" />
      <xs:element minOccurs="0" name="collide" type="xs:boolean" />
      <xs:element minOccurs="0" name="landSound" type="xs:string" />
      <xs:element minOccurs="0" name="unattachedDrawOffset" type="UnityEngine.Vector3" />
      <xs:element minOccurs="0" name="attachedDrawOffset" type="UnityEngine.Vector3" />
      <xs:element minOccurs="0" name="rotateTowardsMoveDirection" type="xs:boolean" />
      <xs:element minOccurs="0" name="rotateTowardsMoveDirectionExtraAngle" type="xs:float" />
      <xs:element minOccurs="0" name="drawOffscreen" type="xs:boolean" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.GraphicData">
    <xs:all>
      <xs:element minOccurs="0" name="texPath" type="xs:string" />
      <xs:element minOccurs="0" name="maskPath" type="xs:string" />
      <xs:element minOccurs="0" name="graphicClass" type="xs:string" />
      <xs:element minOccurs="0" name="shaderType" type="xs:string" />
      <xs:element minOccurs="0" name="shaderParameters" type="Verse.ShaderParameter" />
      <xs:element minOccurs="0" name="color" type="UnityEngine.Color" />
      <xs:element minOccurs="0" name="colorTwo" type="UnityEngine.Color" />
      <xs:element minOccurs="0" name="drawSize" type="UnityEngine.Vector2" />
      <xs:element minOccurs="0" name="drawOffset" type="UnityEngine.Vector3" />
      <xs:element minOccurs="0" name="drawOffsetNorth" type="UnityEngine.Vector3" />
      <xs:element minOccurs="0" name="drawOffsetEast" type="UnityEngine.Vector3" />
      <xs:element minOccurs="0" name="drawOffsetSouth" type="UnityEngine.Vector3" />
      <xs:element minOccurs="0" name="drawOffsetWest" type="UnityEngine.Vector3" />
      <xs:element minOccurs="0" name="onGroundRandomRotateAngle" type="xs:float" />
      <xs:element minOccurs="0" name="drawRotated" type="xs:boolean" />
      <xs:element minOccurs="0" name="allowFlip" type="xs:boolean" />
      <xs:element minOccurs="0" name="flipExtraRotation" type="xs:float" />
      <xs:element minOccurs="0" name="renderInstanced" type="xs:boolean" />
      <xs:element minOccurs="0" name="allowAtlasing" type="xs:boolean" />
      <xs:element minOccurs="0" name="renderQueue" type="xs:int" />
      <xs:element minOccurs="0" name="overlayOpacity" type="xs:float" />
      <xs:element minOccurs="0" name="shadowData" type="Verse.ShadowData" />
      <xs:element minOccurs="0" name="damageData" type="Verse.DamageGraphicData" />
      <xs:element minOccurs="0" name="linkType">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="None" />
            <xs:enumeration value="Basic" />
            <xs:enumeration value="CornerFiller" />
            <xs:enumeration value="Transmitter" />
            <xs:enumeration value="TransmitterOverlay" />
            <xs:enumeration value="Asymmetric" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="linkFlags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="None" />
                  <xs:enumeration value="MapEdge" />
                  <xs:enumeration value="Rock" />
                  <xs:enumeration value="Wall" />
                  <xs:enumeration value="Sandbags" />
                  <xs:enumeration value="PowerConduit" />
                  <xs:enumeration value="Barricades" />
                  <xs:enumeration value="Fences" />
                  <xs:enumeration value="Custom1" />
                  <xs:enumeration value="Custom2" />
                  <xs:enumeration value="Custom3" />
                  <xs:enumeration value="Custom4" />
                  <xs:enumeration value="Custom5" />
                  <xs:enumeration value="Custom6" />
                  <xs:enumeration value="Custom7" />
                  <xs:enumeration value="Custom8" />
                  <xs:enumeration value="Custom9" />
                  <xs:enumeration value="Custom10" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="asymmetricLink" type="Verse.AsymmetricLinkData" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.ShaderParameter">
    <xs:sequence>
      <xs:any minOccurs="0" processContents="skip" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Verse.ShadowData">
    <xs:all>
      <xs:element minOccurs="0" name="volume" type="UnityEngine.Vector3" />
      <xs:element minOccurs="0" name="offset" type="UnityEngine.Vector3" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.DamageGraphicData">
    <xs:all>
      <xs:element minOccurs="0" name="enabled" type="xs:boolean" />
      <xs:element minOccurs="0" name="rectN" type="UnityEngine.Rect" />
      <xs:element minOccurs="0" name="rectE" type="UnityEngine.Rect" />
      <xs:element minOccurs="0" name="rectS" type="UnityEngine.Rect" />
      <xs:element minOccurs="0" name="rectW" type="UnityEngine.Rect" />
      <xs:element minOccurs="0" name="rect" type="UnityEngine.Rect" />
      <xs:element minOccurs="0" name="scratches">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="cornerTL" type="xs:string" />
      <xs:element minOccurs="0" name="cornerTR" type="xs:string" />
      <xs:element minOccurs="0" name="cornerBL" type="xs:string" />
      <xs:element minOccurs="0" name="cornerBR" type="xs:string" />
      <xs:element minOccurs="0" name="edgeLeft" type="xs:string" />
      <xs:element minOccurs="0" name="edgeRight" type="xs:string" />
      <xs:element minOccurs="0" name="edgeTop" type="xs:string" />
      <xs:element minOccurs="0" name="edgeBot" type="xs:string" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="UnityEngine.Rect">
    <xs:all />
  </xs:complexType>
  <xs:complexType name="Verse.AsymmetricLinkData">
    <xs:all>
      <xs:element minOccurs="0" name="linkFlags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="None" />
                  <xs:enumeration value="MapEdge" />
                  <xs:enumeration value="Rock" />
                  <xs:enumeration value="Wall" />
                  <xs:enumeration value="Sandbags" />
                  <xs:enumeration value="PowerConduit" />
                  <xs:enumeration value="Barricades" />
                  <xs:enumeration value="Fences" />
                  <xs:enumeration value="Custom1" />
                  <xs:enumeration value="Custom2" />
                  <xs:enumeration value="Custom3" />
                  <xs:enumeration value="Custom4" />
                  <xs:enumeration value="Custom5" />
                  <xs:enumeration value="Custom6" />
                  <xs:enumeration value="Custom7" />
                  <xs:enumeration value="Custom8" />
                  <xs:enumeration value="Custom9" />
                  <xs:enumeration value="Custom10" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="linkToDoors" type="xs:boolean" />
      <xs:element minOccurs="0" name="drawDoorBorderEast" type="Verse.AsymmetricLinkData.BorderData" />
      <xs:element minOccurs="0" name="drawDoorBorderWest" type="Verse.AsymmetricLinkData.BorderData" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.AsymmetricLinkData.BorderData">
    <xs:all>
      <xs:element minOccurs="0" name="color" type="UnityEngine.Color" />
      <xs:element minOccurs="0" name="size" type="UnityEngine.Vector2" />
      <xs:element minOccurs="0" name="offset" type="UnityEngine.Vector3" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.GameConditionDef">
    <xs:all>
      <xs:element minOccurs="0" name="conditionClass" type="xs:string" />
      <xs:element minOccurs="0" name="startMessage" type="xs:string" />
      <xs:element minOccurs="0" name="endMessage" type="xs:string" />
      <xs:element minOccurs="0" name="letterText" type="xs:string" />
      <xs:element minOccurs="0" name="letterHyperlinks">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="letterDef" type="xs:string" />
      <xs:element minOccurs="0" name="canBePermanent" type="xs:boolean" />
      <xs:element minOccurs="0" name="descriptionFuture" type="xs:string" />
      <xs:element minOccurs="0" name="jumpToSourceKey" type="xs:string" />
      <xs:element minOccurs="0" name="silencedByConditions">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="natural" type="xs:boolean" />
      <xs:element minOccurs="0" name="defaultDroneLevel">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="None" />
            <xs:enumeration value="GoodMedium" />
            <xs:enumeration value="BadLow" />
            <xs:enumeration value="BadMedium" />
            <xs:enumeration value="BadHigh" />
            <xs:enumeration value="BadExtreme" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="preventRain" type="xs:boolean" />
      <xs:element minOccurs="0" name="weatherDef" type="xs:string" />
      <xs:element minOccurs="0" name="temperatureOffset" type="xs:float" />
      <xs:element minOccurs="0" name="minNearbyPollution" type="xs:float" />
      <xs:element minOccurs="0" name="mtbOverNearbyPollutionCurve" type="Verse.SimpleCurve" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.GeneCategoryDef">
    <xs:all>
      <xs:element minOccurs="0" name="displayPriorityInXenotype" type="xs:float" />
      <xs:element minOccurs="0" name="displayPriorityInGenepack" type="xs:float" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.GeneDef">
    <xs:all>
      <xs:element minOccurs="0" name="geneClass" type="xs:string" />
      <xs:element minOccurs="0" name="labelShortAdj" type="xs:string" />
      <xs:element minOccurs="0" name="customEffectDescriptions">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="iconPath" type="xs:string" />
      <xs:element minOccurs="0" name="displayCategory" type="xs:string" />
      <xs:element minOccurs="0" name="displayOrderInCategory" type="xs:float" />
      <xs:element minOccurs="0" name="graphicData" type="Verse.GeneGraphicData" />
      <xs:element minOccurs="0" name="neverGrayHair" type="xs:boolean" />
      <xs:element minOccurs="0" name="soundCall" type="xs:string" />
      <xs:element minOccurs="0" name="soundDeath" type="xs:string" />
      <xs:element minOccurs="0" name="soundWounded" type="xs:string" />
      <xs:element minOccurs="0" name="resourceGizmoType" type="xs:string" />
      <xs:element minOccurs="0" name="resourceLossPerDay" type="xs:float" />
      <xs:element minOccurs="0" name="resourceLabel" type="xs:string" />
      <xs:element minOccurs="0" name="resourceDescription" type="xs:string" />
      <xs:element minOccurs="0" name="resourceGizmoThresholds">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:float" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="showGizmoOnWorldView" type="xs:boolean" />
      <xs:element minOccurs="0" name="showGizmoWhenDrafted" type="xs:boolean" />
      <xs:element minOccurs="0" name="showGizmoOnMultiSelect" type="xs:boolean" />
      <xs:element minOccurs="0" name="abilities">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="forcedTraits">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.GeneticTraitData" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="suppressedTraits">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.GeneticTraitData" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="disablesNeeds">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="causesNeed" type="xs:string" />
      <xs:element minOccurs="0" name="disabledWorkTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="None" />
                  <xs:enumeration value="ManualDumb" />
                  <xs:enumeration value="ManualSkilled" />
                  <xs:enumeration value="Violent" />
                  <xs:enumeration value="Caring" />
                  <xs:enumeration value="Social" />
                  <xs:enumeration value="Commoner" />
                  <xs:enumeration value="Intellectual" />
                  <xs:enumeration value="Animals" />
                  <xs:enumeration value="Artistic" />
                  <xs:enumeration value="Crafting" />
                  <xs:enumeration value="Cooking" />
                  <xs:enumeration value="Firefighting" />
                  <xs:enumeration value="Cleaning" />
                  <xs:enumeration value="Hauling" />
                  <xs:enumeration value="PlantWork" />
                  <xs:enumeration value="Mining" />
                  <xs:enumeration value="Hunting" />
                  <xs:enumeration value="Constructing" />
                  <xs:enumeration value="Shooting" />
                  <xs:enumeration value="AllWork" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreDarkness" type="xs:boolean" />
      <xs:element minOccurs="0" name="endogeneCategory">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="None" />
            <xs:enumeration value="Melanin" />
            <xs:enumeration value="HairColor" />
            <xs:enumeration value="Ears" />
            <xs:enumeration value="Nose" />
            <xs:enumeration value="Jaw" />
            <xs:enumeration value="Hands" />
            <xs:enumeration value="Headbone" />
            <xs:enumeration value="Head" />
            <xs:enumeration value="BodyType" />
            <xs:enumeration value="Voice" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="dislikesSunlight" type="xs:boolean" />
      <xs:element minOccurs="0" name="minAgeActive" type="xs:float" />
      <xs:element minOccurs="0" name="lovinMTBFactor" type="xs:float" />
      <xs:element minOccurs="0" name="immuneToToxGasExposure" type="xs:boolean" />
      <xs:element minOccurs="0" name="randomChosen" type="xs:boolean" />
      <xs:element minOccurs="0" name="deathHistoryEvent" type="xs:string" />
      <xs:element minOccurs="0" name="aptitudes" type="RimWorld.Aptitude" />
      <xs:element minOccurs="0" name="passionMod" type="Verse.PassionMod" />
      <xs:element minOccurs="0" name="statOffsets" type="RimWorld.StatModifier" />
      <xs:element minOccurs="0" name="statFactors" type="RimWorld.StatModifier" />
      <xs:element minOccurs="0" name="conditionalStatAffecters">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.ConditionalStatAffecter" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="painOffset" type="xs:float" />
      <xs:element minOccurs="0" name="painFactor" type="xs:float" />
      <xs:element minOccurs="0" name="foodPoisoningChanceFactor" type="xs:float" />
      <xs:element minOccurs="0" name="damageFactors" type="Verse.DamageFactor" />
      <xs:element minOccurs="0" name="biologicalAgeTickFactorFromAgeCurve" type="Verse.SimpleCurve" />
      <xs:element minOccurs="0" name="makeImmuneTo">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="hediffGiversCannotGive">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="chemical" type="xs:string" />
      <xs:element minOccurs="0" name="addictionChanceFactor" type="xs:float" />
      <xs:element minOccurs="0" name="sterilize" type="xs:boolean" />
      <xs:element minOccurs="0" name="capMods">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.PawnCapacityModifier" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="preventPermanentWounds" type="xs:boolean" />
      <xs:element minOccurs="0" name="dontMindRawFood" type="xs:boolean" />
      <xs:element minOccurs="0" name="hairColorOverride" type="UnityEngine.Color" />
      <xs:element minOccurs="0" name="skinColorBase" type="UnityEngine.Color" />
      <xs:element minOccurs="0" name="skinColorOverride" type="UnityEngine.Color" />
      <xs:element minOccurs="0" name="randomBrightnessFactor" type="xs:float" />
      <xs:element minOccurs="0" name="hairTagFilter" type="Verse.TagFilter" />
      <xs:element minOccurs="0" name="beardTagFilter" type="Verse.TagFilter" />
      <xs:element minOccurs="0" name="bodyType">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Fat" />
            <xs:enumeration value="Thin" />
            <xs:enumeration value="Hulk" />
            <xs:enumeration value="Standard" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="forcedHeadTypes">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="minMelanin" type="xs:float" />
      <xs:element minOccurs="0" name="forcedHair" type="xs:string" />
      <xs:element minOccurs="0" name="womenCanHaveBeards" type="xs:boolean" />
      <xs:element minOccurs="0" name="socialFightChanceFactor" type="xs:float" />
      <xs:element minOccurs="0" name="aggroMentalBreakSelectionChanceFactor" type="xs:float" />
      <xs:element minOccurs="0" name="mentalBreakMtbDays" type="xs:float" />
      <xs:element minOccurs="0" name="mentalBreakDef" type="xs:string" />
      <xs:element minOccurs="0" name="missingGeneRomanceChanceFactor" type="xs:float" />
      <xs:element minOccurs="0" name="prisonBreakMTBFactor" type="xs:float" />
      <xs:element minOccurs="0" name="biostatCpx" type="xs:int" />
      <xs:element minOccurs="0" name="biostatMet" type="xs:int" />
      <xs:element minOccurs="0" name="biostatArc" type="xs:int" />
      <xs:element minOccurs="0" name="exclusionTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="prerequisite" type="xs:string" />
      <xs:element minOccurs="0" name="selectionWeight" type="xs:float" />
      <xs:element minOccurs="0" name="selectionWeightFactorDarkSkin" type="xs:float" />
      <xs:element minOccurs="0" name="canGenerateInGeneSet" type="xs:boolean" />
      <xs:element minOccurs="0" name="symbolPack" type="Verse.GeneSymbolPack" />
      <xs:element minOccurs="0" name="marketValueFactor" type="xs:float" />
      <xs:element minOccurs="0" name="removeOnRedress" type="xs:boolean" />
      <xs:element minOccurs="0" name="passOnDirectly" type="xs:boolean" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.GeneGraphicData">
    <xs:all>
      <xs:element minOccurs="0" name="graphicPath" type="xs:string" />
      <xs:element minOccurs="0" name="graphicPathFemale" type="xs:string" />
      <xs:element minOccurs="0" name="graphicPaths">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="colorType">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Custom" />
            <xs:enumeration value="Hair" />
            <xs:enumeration value="Skin" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="color" type="UnityEngine.Color" />
      <xs:element minOccurs="0" name="colorRGBPostFactor" type="xs:float" />
      <xs:element minOccurs="0" name="drawScale" type="xs:float" />
      <xs:element minOccurs="0" name="drawWhileDessicated" type="xs:boolean" />
      <xs:element minOccurs="0" name="visibleNorth" type="xs:boolean" />
      <xs:element minOccurs="0" name="useSkinShader" type="xs:boolean" />
      <xs:element minOccurs="0" name="drawIfFaceCovered" type="xs:boolean" />
      <xs:element minOccurs="0" name="skinIsHairColor" type="xs:boolean" />
      <xs:element minOccurs="0" name="tattoosVisible" type="xs:boolean" />
      <xs:element minOccurs="0" name="fur" type="xs:string" />
      <xs:element minOccurs="0" name="drawLoc">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="HeadTop" />
            <xs:enumeration value="HeadMiddle" />
            <xs:enumeration value="HeadLower" />
            <xs:enumeration value="Tailbone" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="layer">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="None" />
            <xs:enumeration value="PostSkin" />
            <xs:enumeration value="PostTattoo" />
            <xs:enumeration value="PostHair" />
            <xs:enumeration value="PostHeadgear" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="drawNorthAfterHair" type="xs:boolean" />
      <xs:element minOccurs="0" name="drawOnEyes" type="xs:boolean" />
      <xs:element minOccurs="0" name="narrowCrownHorizontalOffset" type="xs:float" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.GeneticTraitData">
    <xs:all>
      <xs:element minOccurs="0" name="def" type="xs:string" />
      <xs:element minOccurs="0" name="degree" type="xs:int" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.Aptitude">
    <xs:sequence>
      <xs:any minOccurs="0" processContents="skip" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Verse.PassionMod">
    <xs:all>
      <xs:element minOccurs="0" name="skill" type="xs:string" />
      <xs:element minOccurs="0" name="modType">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="None" />
            <xs:enumeration value="AddOneLevel" />
            <xs:enumeration value="DropAll" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.DamageFactor">
    <xs:sequence>
      <xs:any minOccurs="0" processContents="skip" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Verse.PawnCapacityModifier">
    <xs:all>
      <xs:element minOccurs="0" name="capacity" type="xs:string" />
      <xs:element minOccurs="0" name="offset" type="xs:float" />
      <xs:element minOccurs="0" name="setMax" type="xs:float" />
      <xs:element minOccurs="0" name="postFactor" type="xs:float" />
      <xs:element minOccurs="0" name="setMaxCurveOverride" type="Verse.SimpleCurve" />
      <xs:element minOccurs="0" name="setMaxCurveEvaluateStat" type="xs:string" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.GeneSymbolPack">
    <xs:all>
      <xs:element minOccurs="0" name="prefixSymbols">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.GeneSymbolPack.WeightedSymbol" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="suffixSymbols">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.GeneSymbolPack.WeightedSymbol" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="wholeNameSymbols">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.GeneSymbolPack.WeightedSymbol" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.GeneSymbolPack.WeightedSymbol">
    <xs:all>
      <xs:element minOccurs="0" name="symbol" type="xs:string" />
      <xs:element minOccurs="0" name="weight" type="xs:float" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.GenStepDef">
    <xs:all>
      <xs:element minOccurs="0" name="linkWithSite" type="xs:string" />
      <xs:element minOccurs="0" name="order" type="xs:float" />
      <xs:element minOccurs="0" name="genStep" type="Verse.GenStep" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.GenStep">
    <xs:all>
      <xs:element minOccurs="0" name="def" type="xs:string" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.HeadTypeDef">
    <xs:all>
      <xs:element minOccurs="0" name="graphicPath" type="xs:string" />
      <xs:element minOccurs="0" name="gender">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="None" />
            <xs:enumeration value="Male" />
            <xs:enumeration value="Female" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="narrow" type="xs:boolean" />
      <xs:element minOccurs="0" name="hairMeshSize" type="UnityEngine.Vector2" />
      <xs:element minOccurs="0" name="beardMeshSize" type="UnityEngine.Vector2" />
      <xs:element minOccurs="0" name="beardOffset" type="UnityEngine.Vector3" />
      <xs:element minOccurs="0" name="eyeOffsetEastWest" type="UnityEngine.Vector3" />
      <xs:element minOccurs="0" name="beardOffsetXEast" type="xs:float" />
      <xs:element minOccurs="0" name="selectionWeight" type="xs:float" />
      <xs:element minOccurs="0" name="randomChosen" type="xs:boolean" />
      <xs:element minOccurs="0" name="requiredGenes">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.HediffDef">
    <xs:all>
      <xs:element minOccurs="0" name="hediffClass" type="xs:string" />
      <xs:element minOccurs="0" name="comps">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.HediffCompProperties" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionShort" type="xs:string" />
      <xs:element minOccurs="0" name="initialSeverity" type="xs:float" />
      <xs:element minOccurs="0" name="lethalSeverity" type="xs:float" />
      <xs:element minOccurs="0" name="stages">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.HediffStage" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="tendable" type="xs:boolean" />
      <xs:element minOccurs="0" name="isBad" type="xs:boolean" />
      <xs:element minOccurs="0" name="spawnThingOnRemoved" type="xs:string" />
      <xs:element minOccurs="0" name="chanceToCauseNoPain" type="xs:float" />
      <xs:element minOccurs="0" name="makesSickThought" type="xs:boolean" />
      <xs:element minOccurs="0" name="makesAlert" type="xs:boolean" />
      <xs:element minOccurs="0" name="causesNeed" type="xs:string" />
      <xs:element minOccurs="0" name="disablesNeeds">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="minSeverity" type="xs:float" />
      <xs:element minOccurs="0" name="maxSeverity" type="xs:float" />
      <xs:element minOccurs="0" name="scenarioCanAdd" type="xs:boolean" />
      <xs:element minOccurs="0" name="hediffGivers">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.HediffGiver" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="cureAllAtOnceIfCuredByItem" type="xs:boolean" />
      <xs:element minOccurs="0" name="taleOnVisible" type="xs:string" />
      <xs:element minOccurs="0" name="recordDownedTale" type="xs:boolean" />
      <xs:element minOccurs="0" name="everCurableByItem" type="xs:boolean" />
      <xs:element minOccurs="0" name="tags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="priceImpact" type="xs:boolean" />
      <xs:element minOccurs="0" name="priceOffset" type="xs:float" />
      <xs:element minOccurs="0" name="chronic" type="xs:boolean" />
      <xs:element minOccurs="0" name="keepOnBodyPartRestoration" type="xs:boolean" />
      <xs:element minOccurs="0" name="countsAsAddedPartOrImplant" type="xs:boolean" />
      <xs:element minOccurs="0" name="blocksSocialInteraction" type="xs:boolean" />
      <xs:element minOccurs="0" name="blocksSleeping" type="xs:boolean" />
      <xs:element minOccurs="0" name="overrideTooltip" type="xs:string" />
      <xs:element minOccurs="0" name="extraTooltip" type="xs:string" />
      <xs:element minOccurs="0" name="levelIsQuantity" type="xs:boolean" />
      <xs:element minOccurs="0" name="removeOnDeathrestStart" type="xs:boolean" />
      <xs:element minOccurs="0" name="preventsPregnancy" type="xs:boolean" />
      <xs:element minOccurs="0" name="preventsLungRot" type="xs:boolean" />
      <xs:element minOccurs="0" name="pregnant" type="xs:boolean" />
      <xs:element minOccurs="0" name="allowMothballIfLowPriorityWorldPawn" type="xs:boolean" />
      <xs:element minOccurs="0" name="removeWithTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="removeOnRedressChanceByDaysCurve" type="Verse.SimpleCurve" />
      <xs:element minOccurs="0" name="removeOnQuestLodgers" type="xs:boolean" />
      <xs:element minOccurs="0" name="removeOnRedressIfNotOfKind">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="displayWound" type="xs:boolean" />
      <xs:element minOccurs="0" name="woundAnchorRange" type="xs:float" />
      <xs:element minOccurs="0" name="defaultLabelColor" type="UnityEngine.Color" />
      <xs:element minOccurs="0" name="eyeGraphicSouth" type="Verse.GraphicData" />
      <xs:element minOccurs="0" name="eyeGraphicEast" type="Verse.GraphicData" />
      <xs:element minOccurs="0" name="eyeGraphicScale" type="xs:float" />
      <xs:element minOccurs="0" name="injuryProps" type="Verse.InjuryProps" />
      <xs:element minOccurs="0" name="addedPartProps" type="Verse.AddedBodyPartProps" />
      <xs:element minOccurs="0" name="labelNoun" type="xs:string" />
      <xs:element minOccurs="0" name="battleStateLabel" type="xs:string" />
      <xs:element minOccurs="0" name="labelNounPretty" type="xs:string" />
      <xs:element minOccurs="0" name="targetPrefix" type="xs:string" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.HediffCompProperties">
    <xs:all>
      <xs:element minOccurs="0" name="compClass" type="xs:string" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.HediffStage">
    <xs:all>
      <xs:element minOccurs="0" name="minSeverity" type="xs:float" />
      <xs:element minOccurs="0" name="label" type="xs:string" />
      <xs:element minOccurs="0" name="overrideLabel" type="xs:string" />
      <xs:element minOccurs="0" name="becomeVisible" type="xs:boolean" />
      <xs:element minOccurs="0" name="lifeThreatening" type="xs:boolean" />
      <xs:element minOccurs="0" name="tale" type="xs:string" />
      <xs:element minOccurs="0" name="vomitMtbDays" type="xs:float" />
      <xs:element minOccurs="0" name="deathMtbDays" type="xs:float" />
      <xs:element minOccurs="0" name="mtbDeathDestroysBrain" type="xs:boolean" />
      <xs:element minOccurs="0" name="painFactor" type="xs:float" />
      <xs:element minOccurs="0" name="painOffset" type="xs:float" />
      <xs:element minOccurs="0" name="totalBleedFactor" type="xs:float" />
      <xs:element minOccurs="0" name="naturalHealingFactor" type="xs:float" />
      <xs:element minOccurs="0" name="forgetMemoryThoughtMtbDays" type="xs:float" />
      <xs:element minOccurs="0" name="pctConditionalThoughtsNullified" type="xs:float" />
      <xs:element minOccurs="0" name="opinionOfOthersFactor" type="xs:float" />
      <xs:element minOccurs="0" name="fertilityFactor" type="xs:float" />
      <xs:element minOccurs="0" name="hungerRateFactor" type="xs:float" />
      <xs:element minOccurs="0" name="hungerRateFactorOffset" type="xs:float" />
      <xs:element minOccurs="0" name="restFallFactor" type="xs:float" />
      <xs:element minOccurs="0" name="restFallFactorOffset" type="xs:float" />
      <xs:element minOccurs="0" name="socialFightChanceFactor" type="xs:float" />
      <xs:element minOccurs="0" name="foodPoisoningChanceFactor" type="xs:float" />
      <xs:element minOccurs="0" name="mentalBreakMtbDays" type="xs:float" />
      <xs:element minOccurs="0" name="mentalBreakExplanation" type="xs:string" />
      <xs:element minOccurs="0" name="allowedMentalBreakIntensities">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="None" />
                  <xs:enumeration value="Minor" />
                  <xs:enumeration value="Major" />
                  <xs:enumeration value="Extreme" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="makeImmuneTo">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="capMods">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.PawnCapacityModifier" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="hediffGivers">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.HediffGiver" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="mentalStateGivers">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.MentalStateGiver" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="statOffsets" type="RimWorld.StatModifier" />
      <xs:element minOccurs="0" name="statFactors" type="RimWorld.StatModifier" />
      <xs:element minOccurs="0" name="multiplyStatChangesBySeverity" type="xs:boolean" />
      <xs:element minOccurs="0" name="statOffsetEffectMultiplier" type="xs:string" />
      <xs:element minOccurs="0" name="statFactorEffectMultiplier" type="xs:string" />
      <xs:element minOccurs="0" name="capacityFactorEffectMultiplier" type="xs:string" />
      <xs:element minOccurs="0" name="disabledWorkTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="None" />
                  <xs:enumeration value="ManualDumb" />
                  <xs:enumeration value="ManualSkilled" />
                  <xs:enumeration value="Violent" />
                  <xs:enumeration value="Caring" />
                  <xs:enumeration value="Social" />
                  <xs:enumeration value="Commoner" />
                  <xs:enumeration value="Intellectual" />
                  <xs:enumeration value="Animals" />
                  <xs:enumeration value="Artistic" />
                  <xs:enumeration value="Crafting" />
                  <xs:enumeration value="Cooking" />
                  <xs:enumeration value="Firefighting" />
                  <xs:enumeration value="Cleaning" />
                  <xs:enumeration value="Hauling" />
                  <xs:enumeration value="PlantWork" />
                  <xs:enumeration value="Mining" />
                  <xs:enumeration value="Hunting" />
                  <xs:enumeration value="Constructing" />
                  <xs:enumeration value="Shooting" />
                  <xs:enumeration value="AllWork" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="overrideTooltip" type="xs:string" />
      <xs:element minOccurs="0" name="extraTooltip" type="xs:string" />
      <xs:element minOccurs="0" name="partEfficiencyOffset" type="xs:float" />
      <xs:element minOccurs="0" name="partIgnoreMissingHP" type="xs:boolean" />
      <xs:element minOccurs="0" name="destroyPart" type="xs:boolean" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.MentalStateGiver">
    <xs:all>
      <xs:element minOccurs="0" name="mentalState" type="xs:string" />
      <xs:element minOccurs="0" name="mtbDays" type="xs:float" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.InjuryProps">
    <xs:all>
      <xs:element minOccurs="0" name="painPerSeverity" type="xs:float" />
      <xs:element minOccurs="0" name="averagePainPerSeverityPermanent" type="xs:float" />
      <xs:element minOccurs="0" name="bleedRate" type="xs:float" />
      <xs:element minOccurs="0" name="canMerge" type="xs:boolean" />
      <xs:element minOccurs="0" name="destroyedLabel" type="xs:string" />
      <xs:element minOccurs="0" name="destroyedOutLabel" type="xs:string" />
      <xs:element minOccurs="0" name="useRemovedLabel" type="xs:boolean" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.AddedBodyPartProps">
    <xs:all>
      <xs:element minOccurs="0" name="partEfficiency" type="xs:float" />
      <xs:element minOccurs="0" name="solid" type="xs:boolean" />
      <xs:element minOccurs="0" name="isGoodWeapon" type="xs:boolean" />
      <xs:element minOccurs="0" name="betterThanNatural" type="xs:boolean" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.IdeoStoryPatternDef">
    <xs:all>
      <xs:element minOccurs="0" name="segments">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="noCapitalizeFirstSentence">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="rules" type="Verse.Grammar.RulePack" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.ImplementOwnerTypeDef">
    <xs:all>
      <xs:element minOccurs="0" name="implementOwnerRuleName" type="xs:string" />
      <xs:element minOccurs="0" name="implementOwnerTypeValue" type="xs:string" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.InventoryStockGroupDef">
    <xs:all>
      <xs:element minOccurs="0" name="thingDefs">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="min" type="xs:int" />
      <xs:element minOccurs="0" name="max" type="xs:int" />
      <xs:element minOccurs="0" name="defaultThingDef" type="xs:string" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.JobDef">
    <xs:all>
      <xs:element minOccurs="0" name="driverClass" type="xs:string" />
      <xs:element minOccurs="0" name="reportString" type="xs:string" />
      <xs:element minOccurs="0" name="playerInterruptible" type="xs:boolean" />
      <xs:element minOccurs="0" name="forceCompleteBeforeNextJob" type="xs:boolean" />
      <xs:element minOccurs="0" name="checkOverrideOnDamage">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Never" />
            <xs:enumeration value="OnlyIfInstigatorNotJobTarget" />
            <xs:enumeration value="Always" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="alwaysShowWeapon" type="xs:boolean" />
      <xs:element minOccurs="0" name="neverShowWeapon" type="xs:boolean" />
      <xs:element minOccurs="0" name="suspendable" type="xs:boolean" />
      <xs:element minOccurs="0" name="casualInterruptible" type="xs:boolean" />
      <xs:element minOccurs="0" name="allowOpportunisticPrefix" type="xs:boolean" />
      <xs:element minOccurs="0" name="collideWithPawns" type="xs:boolean" />
      <xs:element minOccurs="0" name="isIdle" type="xs:boolean" />
      <xs:element minOccurs="0" name="taleOnCompletion" type="xs:string" />
      <xs:element minOccurs="0" name="neverFleeFromEnemies" type="xs:boolean" />
      <xs:element minOccurs="0" name="sleepCanInterrupt" type="xs:boolean" />
      <xs:element minOccurs="0" name="makeTargetPrisoner" type="xs:boolean" />
      <xs:element minOccurs="0" name="waitAfterArriving" type="xs:int" />
      <xs:element minOccurs="0" name="carryThingAfterJob" type="xs:boolean" />
      <xs:element minOccurs="0" name="dropThingBeforeJob" type="xs:boolean" />
      <xs:element minOccurs="0" name="joyDuration" type="xs:int" />
      <xs:element minOccurs="0" name="joyMaxParticipants" type="xs:int" />
      <xs:element minOccurs="0" name="joyGainRate" type="xs:float" />
      <xs:element minOccurs="0" name="joySkill" type="xs:string" />
      <xs:element minOccurs="0" name="joyXpPerTick" type="xs:float" />
      <xs:element minOccurs="0" name="joyKind" type="xs:string" />
      <xs:element minOccurs="0" name="faceDir" type="Verse.Rot4" />
      <xs:element minOccurs="0" name="learningDuration" type="xs:int" />
      <xs:element minOccurs="0" name="containerReservationLayer" type="xs:string" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.KeyBindingCategoryDef">
    <xs:all>
      <xs:element minOccurs="0" name="isGameUniversal" type="xs:boolean" />
      <xs:element minOccurs="0" name="checkForConflicts">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="selfConflicting" type="xs:boolean" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.KeyBindingDef">
    <xs:all>
      <xs:element minOccurs="0" name="category" type="xs:string" />
      <xs:element minOccurs="0" name="defaultKeyCodeA">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="None" />
            <xs:enumeration value="Backspace" />
            <xs:enumeration value="Delete" />
            <xs:enumeration value="Tab" />
            <xs:enumeration value="Clear" />
            <xs:enumeration value="Return" />
            <xs:enumeration value="Pause" />
            <xs:enumeration value="Escape" />
            <xs:enumeration value="Space" />
            <xs:enumeration value="Keypad0" />
            <xs:enumeration value="Keypad1" />
            <xs:enumeration value="Keypad2" />
            <xs:enumeration value="Keypad3" />
            <xs:enumeration value="Keypad4" />
            <xs:enumeration value="Keypad5" />
            <xs:enumeration value="Keypad6" />
            <xs:enumeration value="Keypad7" />
            <xs:enumeration value="Keypad8" />
            <xs:enumeration value="Keypad9" />
            <xs:enumeration value="KeypadPeriod" />
            <xs:enumeration value="KeypadDivide" />
            <xs:enumeration value="KeypadMultiply" />
            <xs:enumeration value="KeypadMinus" />
            <xs:enumeration value="KeypadPlus" />
            <xs:enumeration value="KeypadEnter" />
            <xs:enumeration value="KeypadEquals" />
            <xs:enumeration value="UpArrow" />
            <xs:enumeration value="DownArrow" />
            <xs:enumeration value="RightArrow" />
            <xs:enumeration value="LeftArrow" />
            <xs:enumeration value="Insert" />
            <xs:enumeration value="Home" />
            <xs:enumeration value="End" />
            <xs:enumeration value="PageUp" />
            <xs:enumeration value="PageDown" />
            <xs:enumeration value="F1" />
            <xs:enumeration value="F2" />
            <xs:enumeration value="F3" />
            <xs:enumeration value="F4" />
            <xs:enumeration value="F5" />
            <xs:enumeration value="F6" />
            <xs:enumeration value="F7" />
            <xs:enumeration value="F8" />
            <xs:enumeration value="F9" />
            <xs:enumeration value="F10" />
            <xs:enumeration value="F11" />
            <xs:enumeration value="F12" />
            <xs:enumeration value="F13" />
            <xs:enumeration value="F14" />
            <xs:enumeration value="F15" />
            <xs:enumeration value="Alpha0" />
            <xs:enumeration value="Alpha1" />
            <xs:enumeration value="Alpha2" />
            <xs:enumeration value="Alpha3" />
            <xs:enumeration value="Alpha4" />
            <xs:enumeration value="Alpha5" />
            <xs:enumeration value="Alpha6" />
            <xs:enumeration value="Alpha7" />
            <xs:enumeration value="Alpha8" />
            <xs:enumeration value="Alpha9" />
            <xs:enumeration value="Exclaim" />
            <xs:enumeration value="DoubleQuote" />
            <xs:enumeration value="Hash" />
            <xs:enumeration value="Dollar" />
            <xs:enumeration value="Percent" />
            <xs:enumeration value="Ampersand" />
            <xs:enumeration value="Quote" />
            <xs:enumeration value="LeftParen" />
            <xs:enumeration value="RightParen" />
            <xs:enumeration value="Asterisk" />
            <xs:enumeration value="Plus" />
            <xs:enumeration value="Comma" />
            <xs:enumeration value="Minus" />
            <xs:enumeration value="Period" />
            <xs:enumeration value="Slash" />
            <xs:enumeration value="Colon" />
            <xs:enumeration value="Semicolon" />
            <xs:enumeration value="Less" />
            <xs:enumeration value="Equals" />
            <xs:enumeration value="Greater" />
            <xs:enumeration value="Question" />
            <xs:enumeration value="At" />
            <xs:enumeration value="LeftBracket" />
            <xs:enumeration value="Backslash" />
            <xs:enumeration value="RightBracket" />
            <xs:enumeration value="Caret" />
            <xs:enumeration value="Underscore" />
            <xs:enumeration value="BackQuote" />
            <xs:enumeration value="A" />
            <xs:enumeration value="B" />
            <xs:enumeration value="C" />
            <xs:enumeration value="D" />
            <xs:enumeration value="E" />
            <xs:enumeration value="F" />
            <xs:enumeration value="G" />
            <xs:enumeration value="H" />
            <xs:enumeration value="I" />
            <xs:enumeration value="J" />
            <xs:enumeration value="K" />
            <xs:enumeration value="L" />
            <xs:enumeration value="M" />
            <xs:enumeration value="N" />
            <xs:enumeration value="O" />
            <xs:enumeration value="P" />
            <xs:enumeration value="Q" />
            <xs:enumeration value="R" />
            <xs:enumeration value="S" />
            <xs:enumeration value="T" />
            <xs:enumeration value="U" />
            <xs:enumeration value="V" />
            <xs:enumeration value="W" />
            <xs:enumeration value="X" />
            <xs:enumeration value="Y" />
            <xs:enumeration value="Z" />
            <xs:enumeration value="LeftCurlyBracket" />
            <xs:enumeration value="Pipe" />
            <xs:enumeration value="RightCurlyBracket" />
            <xs:enumeration value="Tilde" />
            <xs:enumeration value="Numlock" />
            <xs:enumeration value="CapsLock" />
            <xs:enumeration value="ScrollLock" />
            <xs:enumeration value="RightShift" />
            <xs:enumeration value="LeftShift" />
            <xs:enumeration value="RightControl" />
            <xs:enumeration value="LeftControl" />
            <xs:enumeration value="RightAlt" />
            <xs:enumeration value="LeftAlt" />
            <xs:enumeration value="LeftCommand" />
            <xs:enumeration value="LeftApple" />
            <xs:enumeration value="LeftWindows" />
            <xs:enumeration value="RightCommand" />
            <xs:enumeration value="RightApple" />
            <xs:enumeration value="RightWindows" />
            <xs:enumeration value="AltGr" />
            <xs:enumeration value="Help" />
            <xs:enumeration value="Print" />
            <xs:enumeration value="SysReq" />
            <xs:enumeration value="Break" />
            <xs:enumeration value="Menu" />
            <xs:enumeration value="Mouse0" />
            <xs:enumeration value="Mouse1" />
            <xs:enumeration value="Mouse2" />
            <xs:enumeration value="Mouse3" />
            <xs:enumeration value="Mouse4" />
            <xs:enumeration value="Mouse5" />
            <xs:enumeration value="Mouse6" />
            <xs:enumeration value="JoystickButton0" />
            <xs:enumeration value="JoystickButton1" />
            <xs:enumeration value="JoystickButton2" />
            <xs:enumeration value="JoystickButton3" />
            <xs:enumeration value="JoystickButton4" />
            <xs:enumeration value="JoystickButton5" />
            <xs:enumeration value="JoystickButton6" />
            <xs:enumeration value="JoystickButton7" />
            <xs:enumeration value="JoystickButton8" />
            <xs:enumeration value="JoystickButton9" />
            <xs:enumeration value="JoystickButton10" />
            <xs:enumeration value="JoystickButton11" />
            <xs:enumeration value="JoystickButton12" />
            <xs:enumeration value="JoystickButton13" />
            <xs:enumeration value="JoystickButton14" />
            <xs:enumeration value="JoystickButton15" />
            <xs:enumeration value="JoystickButton16" />
            <xs:enumeration value="JoystickButton17" />
            <xs:enumeration value="JoystickButton18" />
            <xs:enumeration value="JoystickButton19" />
            <xs:enumeration value="Joystick1Button0" />
            <xs:enumeration value="Joystick1Button1" />
            <xs:enumeration value="Joystick1Button2" />
            <xs:enumeration value="Joystick1Button3" />
            <xs:enumeration value="Joystick1Button4" />
            <xs:enumeration value="Joystick1Button5" />
            <xs:enumeration value="Joystick1Button6" />
            <xs:enumeration value="Joystick1Button7" />
            <xs:enumeration value="Joystick1Button8" />
            <xs:enumeration value="Joystick1Button9" />
            <xs:enumeration value="Joystick1Button10" />
            <xs:enumeration value="Joystick1Button11" />
            <xs:enumeration value="Joystick1Button12" />
            <xs:enumeration value="Joystick1Button13" />
            <xs:enumeration value="Joystick1Button14" />
            <xs:enumeration value="Joystick1Button15" />
            <xs:enumeration value="Joystick1Button16" />
            <xs:enumeration value="Joystick1Button17" />
            <xs:enumeration value="Joystick1Button18" />
            <xs:enumeration value="Joystick1Button19" />
            <xs:enumeration value="Joystick2Button0" />
            <xs:enumeration value="Joystick2Button1" />
            <xs:enumeration value="Joystick2Button2" />
            <xs:enumeration value="Joystick2Button3" />
            <xs:enumeration value="Joystick2Button4" />
            <xs:enumeration value="Joystick2Button5" />
            <xs:enumeration value="Joystick2Button6" />
            <xs:enumeration value="Joystick2Button7" />
            <xs:enumeration value="Joystick2Button8" />
            <xs:enumeration value="Joystick2Button9" />
            <xs:enumeration value="Joystick2Button10" />
            <xs:enumeration value="Joystick2Button11" />
            <xs:enumeration value="Joystick2Button12" />
            <xs:enumeration value="Joystick2Button13" />
            <xs:enumeration value="Joystick2Button14" />
            <xs:enumeration value="Joystick2Button15" />
            <xs:enumeration value="Joystick2Button16" />
            <xs:enumeration value="Joystick2Button17" />
            <xs:enumeration value="Joystick2Button18" />
            <xs:enumeration value="Joystick2Button19" />
            <xs:enumeration value="Joystick3Button0" />
            <xs:enumeration value="Joystick3Button1" />
            <xs:enumeration value="Joystick3Button2" />
            <xs:enumeration value="Joystick3Button3" />
            <xs:enumeration value="Joystick3Button4" />
            <xs:enumeration value="Joystick3Button5" />
            <xs:enumeration value="Joystick3Button6" />
            <xs:enumeration value="Joystick3Button7" />
            <xs:enumeration value="Joystick3Button8" />
            <xs:enumeration value="Joystick3Button9" />
            <xs:enumeration value="Joystick3Button10" />
            <xs:enumeration value="Joystick3Button11" />
            <xs:enumeration value="Joystick3Button12" />
            <xs:enumeration value="Joystick3Button13" />
            <xs:enumeration value="Joystick3Button14" />
            <xs:enumeration value="Joystick3Button15" />
            <xs:enumeration value="Joystick3Button16" />
            <xs:enumeration value="Joystick3Button17" />
            <xs:enumeration value="Joystick3Button18" />
            <xs:enumeration value="Joystick3Button19" />
            <xs:enumeration value="Joystick4Button0" />
            <xs:enumeration value="Joystick4Button1" />
            <xs:enumeration value="Joystick4Button2" />
            <xs:enumeration value="Joystick4Button3" />
            <xs:enumeration value="Joystick4Button4" />
            <xs:enumeration value="Joystick4Button5" />
            <xs:enumeration value="Joystick4Button6" />
            <xs:enumeration value="Joystick4Button7" />
            <xs:enumeration value="Joystick4Button8" />
            <xs:enumeration value="Joystick4Button9" />
            <xs:enumeration value="Joystick4Button10" />
            <xs:enumeration value="Joystick4Button11" />
            <xs:enumeration value="Joystick4Button12" />
            <xs:enumeration value="Joystick4Button13" />
            <xs:enumeration value="Joystick4Button14" />
            <xs:enumeration value="Joystick4Button15" />
            <xs:enumeration value="Joystick4Button16" />
            <xs:enumeration value="Joystick4Button17" />
            <xs:enumeration value="Joystick4Button18" />
            <xs:enumeration value="Joystick4Button19" />
            <xs:enumeration value="Joystick5Button0" />
            <xs:enumeration value="Joystick5Button1" />
            <xs:enumeration value="Joystick5Button2" />
            <xs:enumeration value="Joystick5Button3" />
            <xs:enumeration value="Joystick5Button4" />
            <xs:enumeration value="Joystick5Button5" />
            <xs:enumeration value="Joystick5Button6" />
            <xs:enumeration value="Joystick5Button7" />
            <xs:enumeration value="Joystick5Button8" />
            <xs:enumeration value="Joystick5Button9" />
            <xs:enumeration value="Joystick5Button10" />
            <xs:enumeration value="Joystick5Button11" />
            <xs:enumeration value="Joystick5Button12" />
            <xs:enumeration value="Joystick5Button13" />
            <xs:enumeration value="Joystick5Button14" />
            <xs:enumeration value="Joystick5Button15" />
            <xs:enumeration value="Joystick5Button16" />
            <xs:enumeration value="Joystick5Button17" />
            <xs:enumeration value="Joystick5Button18" />
            <xs:enumeration value="Joystick5Button19" />
            <xs:enumeration value="Joystick6Button0" />
            <xs:enumeration value="Joystick6Button1" />
            <xs:enumeration value="Joystick6Button2" />
            <xs:enumeration value="Joystick6Button3" />
            <xs:enumeration value="Joystick6Button4" />
            <xs:enumeration value="Joystick6Button5" />
            <xs:enumeration value="Joystick6Button6" />
            <xs:enumeration value="Joystick6Button7" />
            <xs:enumeration value="Joystick6Button8" />
            <xs:enumeration value="Joystick6Button9" />
            <xs:enumeration value="Joystick6Button10" />
            <xs:enumeration value="Joystick6Button11" />
            <xs:enumeration value="Joystick6Button12" />
            <xs:enumeration value="Joystick6Button13" />
            <xs:enumeration value="Joystick6Button14" />
            <xs:enumeration value="Joystick6Button15" />
            <xs:enumeration value="Joystick6Button16" />
            <xs:enumeration value="Joystick6Button17" />
            <xs:enumeration value="Joystick6Button18" />
            <xs:enumeration value="Joystick6Button19" />
            <xs:enumeration value="Joystick7Button0" />
            <xs:enumeration value="Joystick7Button1" />
            <xs:enumeration value="Joystick7Button2" />
            <xs:enumeration value="Joystick7Button3" />
            <xs:enumeration value="Joystick7Button4" />
            <xs:enumeration value="Joystick7Button5" />
            <xs:enumeration value="Joystick7Button6" />
            <xs:enumeration value="Joystick7Button7" />
            <xs:enumeration value="Joystick7Button8" />
            <xs:enumeration value="Joystick7Button9" />
            <xs:enumeration value="Joystick7Button10" />
            <xs:enumeration value="Joystick7Button11" />
            <xs:enumeration value="Joystick7Button12" />
            <xs:enumeration value="Joystick7Button13" />
            <xs:enumeration value="Joystick7Button14" />
            <xs:enumeration value="Joystick7Button15" />
            <xs:enumeration value="Joystick7Button16" />
            <xs:enumeration value="Joystick7Button17" />
            <xs:enumeration value="Joystick7Button18" />
            <xs:enumeration value="Joystick7Button19" />
            <xs:enumeration value="Joystick8Button0" />
            <xs:enumeration value="Joystick8Button1" />
            <xs:enumeration value="Joystick8Button2" />
            <xs:enumeration value="Joystick8Button3" />
            <xs:enumeration value="Joystick8Button4" />
            <xs:enumeration value="Joystick8Button5" />
            <xs:enumeration value="Joystick8Button6" />
            <xs:enumeration value="Joystick8Button7" />
            <xs:enumeration value="Joystick8Button8" />
            <xs:enumeration value="Joystick8Button9" />
            <xs:enumeration value="Joystick8Button10" />
            <xs:enumeration value="Joystick8Button11" />
            <xs:enumeration value="Joystick8Button12" />
            <xs:enumeration value="Joystick8Button13" />
            <xs:enumeration value="Joystick8Button14" />
            <xs:enumeration value="Joystick8Button15" />
            <xs:enumeration value="Joystick8Button16" />
            <xs:enumeration value="Joystick8Button17" />
            <xs:enumeration value="Joystick8Button18" />
            <xs:enumeration value="Joystick8Button19" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="defaultKeyCodeB">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="None" />
            <xs:enumeration value="Backspace" />
            <xs:enumeration value="Delete" />
            <xs:enumeration value="Tab" />
            <xs:enumeration value="Clear" />
            <xs:enumeration value="Return" />
            <xs:enumeration value="Pause" />
            <xs:enumeration value="Escape" />
            <xs:enumeration value="Space" />
            <xs:enumeration value="Keypad0" />
            <xs:enumeration value="Keypad1" />
            <xs:enumeration value="Keypad2" />
            <xs:enumeration value="Keypad3" />
            <xs:enumeration value="Keypad4" />
            <xs:enumeration value="Keypad5" />
            <xs:enumeration value="Keypad6" />
            <xs:enumeration value="Keypad7" />
            <xs:enumeration value="Keypad8" />
            <xs:enumeration value="Keypad9" />
            <xs:enumeration value="KeypadPeriod" />
            <xs:enumeration value="KeypadDivide" />
            <xs:enumeration value="KeypadMultiply" />
            <xs:enumeration value="KeypadMinus" />
            <xs:enumeration value="KeypadPlus" />
            <xs:enumeration value="KeypadEnter" />
            <xs:enumeration value="KeypadEquals" />
            <xs:enumeration value="UpArrow" />
            <xs:enumeration value="DownArrow" />
            <xs:enumeration value="RightArrow" />
            <xs:enumeration value="LeftArrow" />
            <xs:enumeration value="Insert" />
            <xs:enumeration value="Home" />
            <xs:enumeration value="End" />
            <xs:enumeration value="PageUp" />
            <xs:enumeration value="PageDown" />
            <xs:enumeration value="F1" />
            <xs:enumeration value="F2" />
            <xs:enumeration value="F3" />
            <xs:enumeration value="F4" />
            <xs:enumeration value="F5" />
            <xs:enumeration value="F6" />
            <xs:enumeration value="F7" />
            <xs:enumeration value="F8" />
            <xs:enumeration value="F9" />
            <xs:enumeration value="F10" />
            <xs:enumeration value="F11" />
            <xs:enumeration value="F12" />
            <xs:enumeration value="F13" />
            <xs:enumeration value="F14" />
            <xs:enumeration value="F15" />
            <xs:enumeration value="Alpha0" />
            <xs:enumeration value="Alpha1" />
            <xs:enumeration value="Alpha2" />
            <xs:enumeration value="Alpha3" />
            <xs:enumeration value="Alpha4" />
            <xs:enumeration value="Alpha5" />
            <xs:enumeration value="Alpha6" />
            <xs:enumeration value="Alpha7" />
            <xs:enumeration value="Alpha8" />
            <xs:enumeration value="Alpha9" />
            <xs:enumeration value="Exclaim" />
            <xs:enumeration value="DoubleQuote" />
            <xs:enumeration value="Hash" />
            <xs:enumeration value="Dollar" />
            <xs:enumeration value="Percent" />
            <xs:enumeration value="Ampersand" />
            <xs:enumeration value="Quote" />
            <xs:enumeration value="LeftParen" />
            <xs:enumeration value="RightParen" />
            <xs:enumeration value="Asterisk" />
            <xs:enumeration value="Plus" />
            <xs:enumeration value="Comma" />
            <xs:enumeration value="Minus" />
            <xs:enumeration value="Period" />
            <xs:enumeration value="Slash" />
            <xs:enumeration value="Colon" />
            <xs:enumeration value="Semicolon" />
            <xs:enumeration value="Less" />
            <xs:enumeration value="Equals" />
            <xs:enumeration value="Greater" />
            <xs:enumeration value="Question" />
            <xs:enumeration value="At" />
            <xs:enumeration value="LeftBracket" />
            <xs:enumeration value="Backslash" />
            <xs:enumeration value="RightBracket" />
            <xs:enumeration value="Caret" />
            <xs:enumeration value="Underscore" />
            <xs:enumeration value="BackQuote" />
            <xs:enumeration value="A" />
            <xs:enumeration value="B" />
            <xs:enumeration value="C" />
            <xs:enumeration value="D" />
            <xs:enumeration value="E" />
            <xs:enumeration value="F" />
            <xs:enumeration value="G" />
            <xs:enumeration value="H" />
            <xs:enumeration value="I" />
            <xs:enumeration value="J" />
            <xs:enumeration value="K" />
            <xs:enumeration value="L" />
            <xs:enumeration value="M" />
            <xs:enumeration value="N" />
            <xs:enumeration value="O" />
            <xs:enumeration value="P" />
            <xs:enumeration value="Q" />
            <xs:enumeration value="R" />
            <xs:enumeration value="S" />
            <xs:enumeration value="T" />
            <xs:enumeration value="U" />
            <xs:enumeration value="V" />
            <xs:enumeration value="W" />
            <xs:enumeration value="X" />
            <xs:enumeration value="Y" />
            <xs:enumeration value="Z" />
            <xs:enumeration value="LeftCurlyBracket" />
            <xs:enumeration value="Pipe" />
            <xs:enumeration value="RightCurlyBracket" />
            <xs:enumeration value="Tilde" />
            <xs:enumeration value="Numlock" />
            <xs:enumeration value="CapsLock" />
            <xs:enumeration value="ScrollLock" />
            <xs:enumeration value="RightShift" />
            <xs:enumeration value="LeftShift" />
            <xs:enumeration value="RightControl" />
            <xs:enumeration value="LeftControl" />
            <xs:enumeration value="RightAlt" />
            <xs:enumeration value="LeftAlt" />
            <xs:enumeration value="LeftCommand" />
            <xs:enumeration value="LeftApple" />
            <xs:enumeration value="LeftWindows" />
            <xs:enumeration value="RightCommand" />
            <xs:enumeration value="RightApple" />
            <xs:enumeration value="RightWindows" />
            <xs:enumeration value="AltGr" />
            <xs:enumeration value="Help" />
            <xs:enumeration value="Print" />
            <xs:enumeration value="SysReq" />
            <xs:enumeration value="Break" />
            <xs:enumeration value="Menu" />
            <xs:enumeration value="Mouse0" />
            <xs:enumeration value="Mouse1" />
            <xs:enumeration value="Mouse2" />
            <xs:enumeration value="Mouse3" />
            <xs:enumeration value="Mouse4" />
            <xs:enumeration value="Mouse5" />
            <xs:enumeration value="Mouse6" />
            <xs:enumeration value="JoystickButton0" />
            <xs:enumeration value="JoystickButton1" />
            <xs:enumeration value="JoystickButton2" />
            <xs:enumeration value="JoystickButton3" />
            <xs:enumeration value="JoystickButton4" />
            <xs:enumeration value="JoystickButton5" />
            <xs:enumeration value="JoystickButton6" />
            <xs:enumeration value="JoystickButton7" />
            <xs:enumeration value="JoystickButton8" />
            <xs:enumeration value="JoystickButton9" />
            <xs:enumeration value="JoystickButton10" />
            <xs:enumeration value="JoystickButton11" />
            <xs:enumeration value="JoystickButton12" />
            <xs:enumeration value="JoystickButton13" />
            <xs:enumeration value="JoystickButton14" />
            <xs:enumeration value="JoystickButton15" />
            <xs:enumeration value="JoystickButton16" />
            <xs:enumeration value="JoystickButton17" />
            <xs:enumeration value="JoystickButton18" />
            <xs:enumeration value="JoystickButton19" />
            <xs:enumeration value="Joystick1Button0" />
            <xs:enumeration value="Joystick1Button1" />
            <xs:enumeration value="Joystick1Button2" />
            <xs:enumeration value="Joystick1Button3" />
            <xs:enumeration value="Joystick1Button4" />
            <xs:enumeration value="Joystick1Button5" />
            <xs:enumeration value="Joystick1Button6" />
            <xs:enumeration value="Joystick1Button7" />
            <xs:enumeration value="Joystick1Button8" />
            <xs:enumeration value="Joystick1Button9" />
            <xs:enumeration value="Joystick1Button10" />
            <xs:enumeration value="Joystick1Button11" />
            <xs:enumeration value="Joystick1Button12" />
            <xs:enumeration value="Joystick1Button13" />
            <xs:enumeration value="Joystick1Button14" />
            <xs:enumeration value="Joystick1Button15" />
            <xs:enumeration value="Joystick1Button16" />
            <xs:enumeration value="Joystick1Button17" />
            <xs:enumeration value="Joystick1Button18" />
            <xs:enumeration value="Joystick1Button19" />
            <xs:enumeration value="Joystick2Button0" />
            <xs:enumeration value="Joystick2Button1" />
            <xs:enumeration value="Joystick2Button2" />
            <xs:enumeration value="Joystick2Button3" />
            <xs:enumeration value="Joystick2Button4" />
            <xs:enumeration value="Joystick2Button5" />
            <xs:enumeration value="Joystick2Button6" />
            <xs:enumeration value="Joystick2Button7" />
            <xs:enumeration value="Joystick2Button8" />
            <xs:enumeration value="Joystick2Button9" />
            <xs:enumeration value="Joystick2Button10" />
            <xs:enumeration value="Joystick2Button11" />
            <xs:enumeration value="Joystick2Button12" />
            <xs:enumeration value="Joystick2Button13" />
            <xs:enumeration value="Joystick2Button14" />
            <xs:enumeration value="Joystick2Button15" />
            <xs:enumeration value="Joystick2Button16" />
            <xs:enumeration value="Joystick2Button17" />
            <xs:enumeration value="Joystick2Button18" />
            <xs:enumeration value="Joystick2Button19" />
            <xs:enumeration value="Joystick3Button0" />
            <xs:enumeration value="Joystick3Button1" />
            <xs:enumeration value="Joystick3Button2" />
            <xs:enumeration value="Joystick3Button3" />
            <xs:enumeration value="Joystick3Button4" />
            <xs:enumeration value="Joystick3Button5" />
            <xs:enumeration value="Joystick3Button6" />
            <xs:enumeration value="Joystick3Button7" />
            <xs:enumeration value="Joystick3Button8" />
            <xs:enumeration value="Joystick3Button9" />
            <xs:enumeration value="Joystick3Button10" />
            <xs:enumeration value="Joystick3Button11" />
            <xs:enumeration value="Joystick3Button12" />
            <xs:enumeration value="Joystick3Button13" />
            <xs:enumeration value="Joystick3Button14" />
            <xs:enumeration value="Joystick3Button15" />
            <xs:enumeration value="Joystick3Button16" />
            <xs:enumeration value="Joystick3Button17" />
            <xs:enumeration value="Joystick3Button18" />
            <xs:enumeration value="Joystick3Button19" />
            <xs:enumeration value="Joystick4Button0" />
            <xs:enumeration value="Joystick4Button1" />
            <xs:enumeration value="Joystick4Button2" />
            <xs:enumeration value="Joystick4Button3" />
            <xs:enumeration value="Joystick4Button4" />
            <xs:enumeration value="Joystick4Button5" />
            <xs:enumeration value="Joystick4Button6" />
            <xs:enumeration value="Joystick4Button7" />
            <xs:enumeration value="Joystick4Button8" />
            <xs:enumeration value="Joystick4Button9" />
            <xs:enumeration value="Joystick4Button10" />
            <xs:enumeration value="Joystick4Button11" />
            <xs:enumeration value="Joystick4Button12" />
            <xs:enumeration value="Joystick4Button13" />
            <xs:enumeration value="Joystick4Button14" />
            <xs:enumeration value="Joystick4Button15" />
            <xs:enumeration value="Joystick4Button16" />
            <xs:enumeration value="Joystick4Button17" />
            <xs:enumeration value="Joystick4Button18" />
            <xs:enumeration value="Joystick4Button19" />
            <xs:enumeration value="Joystick5Button0" />
            <xs:enumeration value="Joystick5Button1" />
            <xs:enumeration value="Joystick5Button2" />
            <xs:enumeration value="Joystick5Button3" />
            <xs:enumeration value="Joystick5Button4" />
            <xs:enumeration value="Joystick5Button5" />
            <xs:enumeration value="Joystick5Button6" />
            <xs:enumeration value="Joystick5Button7" />
            <xs:enumeration value="Joystick5Button8" />
            <xs:enumeration value="Joystick5Button9" />
            <xs:enumeration value="Joystick5Button10" />
            <xs:enumeration value="Joystick5Button11" />
            <xs:enumeration value="Joystick5Button12" />
            <xs:enumeration value="Joystick5Button13" />
            <xs:enumeration value="Joystick5Button14" />
            <xs:enumeration value="Joystick5Button15" />
            <xs:enumeration value="Joystick5Button16" />
            <xs:enumeration value="Joystick5Button17" />
            <xs:enumeration value="Joystick5Button18" />
            <xs:enumeration value="Joystick5Button19" />
            <xs:enumeration value="Joystick6Button0" />
            <xs:enumeration value="Joystick6Button1" />
            <xs:enumeration value="Joystick6Button2" />
            <xs:enumeration value="Joystick6Button3" />
            <xs:enumeration value="Joystick6Button4" />
            <xs:enumeration value="Joystick6Button5" />
            <xs:enumeration value="Joystick6Button6" />
            <xs:enumeration value="Joystick6Button7" />
            <xs:enumeration value="Joystick6Button8" />
            <xs:enumeration value="Joystick6Button9" />
            <xs:enumeration value="Joystick6Button10" />
            <xs:enumeration value="Joystick6Button11" />
            <xs:enumeration value="Joystick6Button12" />
            <xs:enumeration value="Joystick6Button13" />
            <xs:enumeration value="Joystick6Button14" />
            <xs:enumeration value="Joystick6Button15" />
            <xs:enumeration value="Joystick6Button16" />
            <xs:enumeration value="Joystick6Button17" />
            <xs:enumeration value="Joystick6Button18" />
            <xs:enumeration value="Joystick6Button19" />
            <xs:enumeration value="Joystick7Button0" />
            <xs:enumeration value="Joystick7Button1" />
            <xs:enumeration value="Joystick7Button2" />
            <xs:enumeration value="Joystick7Button3" />
            <xs:enumeration value="Joystick7Button4" />
            <xs:enumeration value="Joystick7Button5" />
            <xs:enumeration value="Joystick7Button6" />
            <xs:enumeration value="Joystick7Button7" />
            <xs:enumeration value="Joystick7Button8" />
            <xs:enumeration value="Joystick7Button9" />
            <xs:enumeration value="Joystick7Button10" />
            <xs:enumeration value="Joystick7Button11" />
            <xs:enumeration value="Joystick7Button12" />
            <xs:enumeration value="Joystick7Button13" />
            <xs:enumeration value="Joystick7Button14" />
            <xs:enumeration value="Joystick7Button15" />
            <xs:enumeration value="Joystick7Button16" />
            <xs:enumeration value="Joystick7Button17" />
            <xs:enumeration value="Joystick7Button18" />
            <xs:enumeration value="Joystick7Button19" />
            <xs:enumeration value="Joystick8Button0" />
            <xs:enumeration value="Joystick8Button1" />
            <xs:enumeration value="Joystick8Button2" />
            <xs:enumeration value="Joystick8Button3" />
            <xs:enumeration value="Joystick8Button4" />
            <xs:enumeration value="Joystick8Button5" />
            <xs:enumeration value="Joystick8Button6" />
            <xs:enumeration value="Joystick8Button7" />
            <xs:enumeration value="Joystick8Button8" />
            <xs:enumeration value="Joystick8Button9" />
            <xs:enumeration value="Joystick8Button10" />
            <xs:enumeration value="Joystick8Button11" />
            <xs:enumeration value="Joystick8Button12" />
            <xs:enumeration value="Joystick8Button13" />
            <xs:enumeration value="Joystick8Button14" />
            <xs:enumeration value="Joystick8Button15" />
            <xs:enumeration value="Joystick8Button16" />
            <xs:enumeration value="Joystick8Button17" />
            <xs:enumeration value="Joystick8Button18" />
            <xs:enumeration value="Joystick8Button19" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="devModeOnly" type="xs:boolean" />
      <xs:element minOccurs="0" name="extraConflictTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.LetterDef">
    <xs:all>
      <xs:element minOccurs="0" name="letterClass" type="xs:string" />
      <xs:element minOccurs="0" name="color" type="UnityEngine.Color" />
      <xs:element minOccurs="0" name="flashColor" type="UnityEngine.Color" />
      <xs:element minOccurs="0" name="flashInterval" type="xs:float" />
      <xs:element minOccurs="0" name="bounce" type="xs:boolean" />
      <xs:element minOccurs="0" name="arriveSound" type="xs:string" />
      <xs:element minOccurs="0" name="icon" type="xs:string" />
      <xs:element minOccurs="0" name="pauseMode">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Never" />
            <xs:enumeration value="MajorThreat" />
            <xs:enumeration value="AnyThreat" />
            <xs:enumeration value="AnyLetter" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="forcedSlowdown" type="xs:boolean" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.LogEntryDef">
    <xs:all>
      <xs:element minOccurs="0" name="iconMiss" type="xs:string" />
      <xs:element minOccurs="0" name="iconDamaged" type="xs:string" />
      <xs:element minOccurs="0" name="iconDamagedFromInstigator" type="xs:string" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.ManeuverDef">
    <xs:all>
      <xs:element minOccurs="0" name="requiredCapacity" type="xs:string" />
      <xs:element minOccurs="0" name="verb" type="Verse.VerbProperties" />
      <xs:element minOccurs="0" name="combatLogRulesHit" type="xs:string" />
      <xs:element minOccurs="0" name="combatLogRulesDeflect" type="xs:string" />
      <xs:element minOccurs="0" name="combatLogRulesMiss" type="xs:string" />
      <xs:element minOccurs="0" name="combatLogRulesDodge" type="xs:string" />
      <xs:element minOccurs="0" name="logEntryDef" type="xs:string" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.MapGeneratorDef">
    <xs:all>
      <xs:element minOccurs="0" name="genSteps">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.MechWorkModeDef">
    <xs:all>
      <xs:element minOccurs="0" name="iconPath" type="xs:string" />
      <xs:element minOccurs="0" name="uiIcon" type="UnityEngine.Texture2D" />
      <xs:element minOccurs="0" name="uiOrder" type="xs:int" />
      <xs:element minOccurs="0" name="ignoreGroupChargeLimits" type="xs:boolean" />
      <xs:element minOccurs="0" name="workerClass" type="xs:string" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.MentalBreakDef">
    <xs:all>
      <xs:element minOccurs="0" name="workerClass" type="xs:string" />
      <xs:element minOccurs="0" name="mentalState" type="xs:string" />
      <xs:element minOccurs="0" name="baseCommonality" type="xs:float" />
      <xs:element minOccurs="0" name="commonalityFactorPerPopulationCurve" type="Verse.SimpleCurve" />
      <xs:element minOccurs="0" name="intensity">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="None" />
            <xs:enumeration value="Minor" />
            <xs:enumeration value="Major" />
            <xs:enumeration value="Extreme" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="requiredTrait" type="xs:string" />
      <xs:element minOccurs="0" name="requiredGene" type="xs:string" />
      <xs:element minOccurs="0" name="questLodgersCanDo" type="xs:boolean" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.MentalFitDef">
    <xs:all>
      <xs:element minOccurs="0" name="mentalState" type="xs:string" />
      <xs:element minOccurs="0" name="mtbDaysMoodCurve" type="Verse.SimpleCurve" />
      <xs:element minOccurs="0" name="developmentalStageFilter">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="None" />
                  <xs:enumeration value="Newborn" />
                  <xs:enumeration value="Baby" />
                  <xs:enumeration value="Child" />
                  <xs:enumeration value="Adult" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.MentalStateDef">
    <xs:all>
      <xs:element minOccurs="0" name="stateClass" type="xs:string" />
      <xs:element minOccurs="0" name="workerClass" type="xs:string" />
      <xs:element minOccurs="0" name="category">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Undefined" />
            <xs:enumeration value="Aggro" />
            <xs:enumeration value="Malicious" />
            <xs:enumeration value="Misc" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="prisonersCanDo" type="xs:boolean" />
      <xs:element minOccurs="0" name="slavesCanDo" type="xs:boolean" />
      <xs:element minOccurs="0" name="inCaravanCanDo" type="xs:boolean" />
      <xs:element minOccurs="0" name="colonistsOnly" type="xs:boolean" />
      <xs:element minOccurs="0" name="slavesOnly" type="xs:boolean" />
      <xs:element minOccurs="0" name="requiredCapacities">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="downedCanDo" type="xs:boolean" />
      <xs:element minOccurs="0" name="unspawnedNotInCaravanCanDo" type="xs:boolean" />
      <xs:element minOccurs="0" name="blockNormalThoughts" type="xs:boolean" />
      <xs:element minOccurs="0" name="stopsJobs" type="xs:boolean" />
      <xs:element minOccurs="0" name="blockInteractionInitiationExcept">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="blockInteractionRecipientExcept">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="blockRandomInteraction" type="xs:boolean" />
      <xs:element minOccurs="0" name="stateEffecter" type="xs:string" />
      <xs:element minOccurs="0" name="tale" type="xs:string" />
      <xs:element minOccurs="0" name="allowBeatfire" type="xs:boolean" />
      <xs:element minOccurs="0" name="drugCategory">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="None" />
            <xs:enumeration value="Medical" />
            <xs:enumeration value="Social" />
            <xs:enumeration value="Hard" />
            <xs:enumeration value="Any" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreDrugPolicy" type="xs:boolean" />
      <xs:element minOccurs="0" name="recoveryMtbDays" type="xs:float" />
      <xs:element minOccurs="0" name="minTicksBeforeRecovery" type="xs:int" />
      <xs:element minOccurs="0" name="maxTicksBeforeRecovery" type="xs:int" />
      <xs:element minOccurs="0" name="recoverFromSleep" type="xs:boolean" />
      <xs:element minOccurs="0" name="recoverFromDowned" type="xs:boolean" />
      <xs:element minOccurs="0" name="recoverFromCollapsingExhausted" type="xs:boolean" />
      <xs:element minOccurs="0" name="moodRecoveryThought" type="xs:string" />
      <xs:element minOccurs="0" name="allowGuilty" type="xs:boolean" />
      <xs:element minOccurs="0" name="beginLetter" type="xs:string" />
      <xs:element minOccurs="0" name="beginLetterLabel" type="xs:string" />
      <xs:element minOccurs="0" name="beginLetterDef" type="xs:string" />
      <xs:element minOccurs="0" name="nameColor" type="UnityEngine.Color" />
      <xs:element minOccurs="0" name="recoveryMessage" type="xs:string" />
      <xs:element minOccurs="0" name="baseInspectLine" type="xs:string" />
      <xs:element minOccurs="0" name="escapingPrisonersIgnore" type="xs:boolean" />
      <xs:element minOccurs="0" name="blocksDefendAndExpandHive" type="xs:boolean" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.MessageTypeDef">
    <xs:all>
      <xs:element minOccurs="0" name="sound" type="xs:string" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.OptionCategoryDef">
    <xs:all>
      <xs:element minOccurs="0" name="texPath" type="xs:string" />
      <xs:element minOccurs="0" name="isDev" type="xs:boolean" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.OrderedTakeGroupDef">
    <xs:all>
      <xs:element minOccurs="0" name="max" type="xs:int" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.PawnCapacityDef">
    <xs:all>
      <xs:element minOccurs="0" name="listOrder" type="xs:int" />
      <xs:element minOccurs="0" name="workerClass" type="xs:string" />
      <xs:element minOccurs="0" name="labelMechanoids" type="xs:string" />
      <xs:element minOccurs="0" name="labelAnimals" type="xs:string" />
      <xs:element minOccurs="0" name="showOnHumanlikes" type="xs:boolean" />
      <xs:element minOccurs="0" name="showOnAnimals" type="xs:boolean" />
      <xs:element minOccurs="0" name="showOnMechanoids" type="xs:boolean" />
      <xs:element minOccurs="0" name="lethalFlesh" type="xs:boolean" />
      <xs:element minOccurs="0" name="lethalMechanoids" type="xs:boolean" />
      <xs:element minOccurs="0" name="minForCapable" type="xs:float" />
      <xs:element minOccurs="0" name="minValue" type="xs:float" />
      <xs:element minOccurs="0" name="zeroIfCannotBeAwake" type="xs:boolean" />
      <xs:element minOccurs="0" name="showOnCaravanHealthTab" type="xs:boolean" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.PawnKindDef">
    <xs:all>
      <xs:element minOccurs="0" name="race" type="xs:string" />
      <xs:element minOccurs="0" name="defaultFactionType" type="xs:string" />
      <xs:element minOccurs="0" name="backstoryFilters">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.BackstoryCategoryFilter" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="backstoryFiltersOverride">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.BackstoryCategoryFilter" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="backstoryCategories">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="labelPlural" type="xs:string" />
      <xs:element minOccurs="0" name="lifeStages">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.PawnKindLifeStage" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="alternateGraphics">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.AlternateGraphic" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="forcedTraits" type="Verse.TraitRequirement" />
      <xs:element minOccurs="0" name="disallowedTraits">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="disallowedTraitsWithDegree" type="Verse.TraitRequirement" />
      <xs:element minOccurs="0" name="alternateGraphicChance" type="xs:float" />
      <xs:element minOccurs="0" name="xenotypeSet" type="RimWorld.XenotypeSet" />
      <xs:element minOccurs="0" name="useFactionXenotypes" type="xs:boolean" />
      <xs:element minOccurs="0" name="styleItemTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.StyleItemTagWeighted" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="forcedHair" type="xs:string" />
      <xs:element minOccurs="0" name="forcedHairColor" type="UnityEngine.Color" />
      <xs:element minOccurs="0" name="missingParts">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.MissingPart" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="nameMaker" type="xs:string" />
      <xs:element minOccurs="0" name="nameMakerFemale" type="xs:string" />
      <xs:element minOccurs="0" name="abilities">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="backstoryCryptosleepCommonality" type="xs:float" />
      <xs:element minOccurs="0" name="chronologicalAgeRange" type="Verse.FloatRange" />
      <xs:element minOccurs="0" name="minGenerationAge" type="xs:int" />
      <xs:element minOccurs="0" name="maxGenerationAge" type="xs:int" />
      <xs:element minOccurs="0" name="factionLeader" type="xs:boolean" />
      <xs:element minOccurs="0" name="fixedGender">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="None" />
            <xs:enumeration value="Male" />
            <xs:enumeration value="Female" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="allowOldAgeInjuries" type="xs:boolean" />
      <xs:element minOccurs="0" name="generateInitialNonFamilyRelations" type="xs:boolean" />
      <xs:element minOccurs="0" name="pawnGroupDevelopmentStage">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="None" />
                  <xs:enumeration value="Newborn" />
                  <xs:enumeration value="Baby" />
                  <xs:enumeration value="Child" />
                  <xs:enumeration value="Adult" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="destroyGearOnDrop" type="xs:boolean" />
      <xs:element minOccurs="0" name="canStrip" type="xs:boolean" />
      <xs:element minOccurs="0" name="defendPointRadius" type="xs:float" />
      <xs:element minOccurs="0" name="factionHostileOnKill" type="xs:boolean" />
      <xs:element minOccurs="0" name="factionHostileOnDeath" type="xs:boolean" />
      <xs:element minOccurs="0" name="initialResistanceRange" type="Verse.FloatRange" />
      <xs:element minOccurs="0" name="initialWillRange" type="Verse.FloatRange" />
      <xs:element minOccurs="0" name="forceNoDeathNotification" type="xs:boolean" />
      <xs:element minOccurs="0" name="skipResistant" type="xs:boolean" />
      <xs:element minOccurs="0" name="controlGroupPortraitZoom" type="xs:float" />
      <xs:element minOccurs="0" name="royalTitleChance" type="xs:float" />
      <xs:element minOccurs="0" name="titleRequired" type="xs:string" />
      <xs:element minOccurs="0" name="minTitleRequired" type="xs:string" />
      <xs:element minOccurs="0" name="titleSelectOne">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="allowRoyalRoomRequirements" type="xs:boolean" />
      <xs:element minOccurs="0" name="allowRoyalApparelRequirements" type="xs:boolean" />
      <xs:element minOccurs="0" name="isFighter" type="xs:boolean" />
      <xs:element minOccurs="0" name="combatPower" type="xs:float" />
      <xs:element minOccurs="0" name="canArriveManhunter" type="xs:boolean" />
      <xs:element minOccurs="0" name="canBeSapper" type="xs:boolean" />
      <xs:element minOccurs="0" name="isGoodBreacher" type="xs:boolean" />
      <xs:element minOccurs="0" name="allowInMechClusters" type="xs:boolean" />
      <xs:element minOccurs="0" name="maxPerGroup" type="xs:int" />
      <xs:element minOccurs="0" name="aiAvoidCover" type="xs:boolean" />
      <xs:element minOccurs="0" name="fleeHealthThresholdRange" type="Verse.FloatRange" />
      <xs:element minOccurs="0" name="acceptArrestChanceFactor" type="xs:float" />
      <xs:element minOccurs="0" name="itemQuality">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Awful" />
            <xs:enumeration value="Poor" />
            <xs:enumeration value="Normal" />
            <xs:enumeration value="Good" />
            <xs:enumeration value="Excellent" />
            <xs:enumeration value="Masterwork" />
            <xs:enumeration value="Legendary" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="forceWeaponQuality">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Awful" />
            <xs:enumeration value="Poor" />
            <xs:enumeration value="Normal" />
            <xs:enumeration value="Good" />
            <xs:enumeration value="Excellent" />
            <xs:enumeration value="Masterwork" />
            <xs:enumeration value="Legendary" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="forceNormalGearQuality" type="xs:boolean" />
      <xs:element minOccurs="0" name="gearHealthRange" type="Verse.FloatRange" />
      <xs:element minOccurs="0" name="weaponMoney" type="Verse.FloatRange" />
      <xs:element minOccurs="0" name="weaponTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="weaponStuffOverride" type="xs:string" />
      <xs:element minOccurs="0" name="weaponStyleDef" type="xs:string" />
      <xs:element minOccurs="0" name="apparelMoney" type="Verse.FloatRange" />
      <xs:element minOccurs="0" name="apparelRequired">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="apparelTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="apparelDisallowTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="apparelAllowHeadgearChance" type="xs:float" />
      <xs:element minOccurs="0" name="apparelIgnoreSeasons" type="xs:boolean" />
      <xs:element minOccurs="0" name="apparelIgnorePollution" type="xs:boolean" />
      <xs:element minOccurs="0" name="ignoreFactionApparelStuffRequirements" type="xs:boolean" />
      <xs:element minOccurs="0" name="apparelColor" type="UnityEngine.Color" />
      <xs:element minOccurs="0" name="skinColorOverride" type="UnityEngine.Color" />
      <xs:element minOccurs="0" name="favoriteColor" type="UnityEngine.Color" />
      <xs:element minOccurs="0" name="ignoreIdeoApparelColors" type="xs:boolean" />
      <xs:element minOccurs="0" name="specificApparelRequirements">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.SpecificApparelRequirement" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="techHediffsRequired">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="techHediffsMoney" type="Verse.FloatRange" />
      <xs:element minOccurs="0" name="techHediffsTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="techHediffsDisallowTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="techHediffsChance" type="xs:float" />
      <xs:element minOccurs="0" name="techHediffsMaxAmount" type="xs:int" />
      <xs:element minOccurs="0" name="biocodeWeaponChance" type="xs:float" />
      <xs:element minOccurs="0" name="humanPregnancyChance" type="xs:float" />
      <xs:element minOccurs="0" name="fixedInventory" type="Verse.ThingDefCountClass" />
      <xs:element minOccurs="0" name="inventoryOptions" type="Verse.PawnInventoryOption" />
      <xs:element minOccurs="0" name="invNutrition" type="xs:float" />
      <xs:element minOccurs="0" name="invFoodDef" type="xs:string" />
      <xs:element minOccurs="0" name="chemicalAddictionChance" type="xs:float" />
      <xs:element minOccurs="0" name="combatEnhancingDrugsChance" type="xs:float" />
      <xs:element minOccurs="0" name="combatEnhancingDrugsCount" type="Verse.IntRange" />
      <xs:element minOccurs="0" name="forcedAddictions">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="trader" type="xs:boolean" />
      <xs:element minOccurs="0" name="skills">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.SkillRange" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="requiredWorkTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="None" />
                  <xs:enumeration value="ManualDumb" />
                  <xs:enumeration value="ManualSkilled" />
                  <xs:enumeration value="Violent" />
                  <xs:enumeration value="Caring" />
                  <xs:enumeration value="Social" />
                  <xs:enumeration value="Commoner" />
                  <xs:enumeration value="Intellectual" />
                  <xs:enumeration value="Animals" />
                  <xs:enumeration value="Artistic" />
                  <xs:enumeration value="Crafting" />
                  <xs:enumeration value="Cooking" />
                  <xs:enumeration value="Firefighting" />
                  <xs:enumeration value="Cleaning" />
                  <xs:enumeration value="Hauling" />
                  <xs:enumeration value="PlantWork" />
                  <xs:enumeration value="Mining" />
                  <xs:enumeration value="Hunting" />
                  <xs:enumeration value="Constructing" />
                  <xs:enumeration value="Shooting" />
                  <xs:enumeration value="AllWork" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="extraSkillLevels" type="xs:int" />
      <xs:element minOccurs="0" name="minTotalSkillLevels" type="xs:int" />
      <xs:element minOccurs="0" name="minBestSkillLevel" type="xs:int" />
      <xs:element minOccurs="0" name="labelMale" type="xs:string" />
      <xs:element minOccurs="0" name="labelMalePlural" type="xs:string" />
      <xs:element minOccurs="0" name="labelFemale" type="xs:string" />
      <xs:element minOccurs="0" name="labelFemalePlural" type="xs:string" />
      <xs:element minOccurs="0" name="wildGroupSize" type="Verse.IntRange" />
      <xs:element minOccurs="0" name="ecoSystemWeight" type="xs:float" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.PawnKindLifeStage">
    <xs:all>
      <xs:element minOccurs="0" name="label" type="xs:string" />
      <xs:element minOccurs="0" name="labelPlural" type="xs:string" />
      <xs:element minOccurs="0" name="labelMale" type="xs:string" />
      <xs:element minOccurs="0" name="labelMalePlural" type="xs:string" />
      <xs:element minOccurs="0" name="labelFemale" type="xs:string" />
      <xs:element minOccurs="0" name="labelFemalePlural" type="xs:string" />
      <xs:element minOccurs="0" name="bodyGraphicData" type="Verse.GraphicData" />
      <xs:element minOccurs="0" name="femaleGraphicData" type="Verse.GraphicData" />
      <xs:element minOccurs="0" name="dessicatedBodyGraphicData" type="Verse.GraphicData" />
      <xs:element minOccurs="0" name="femaleDessicatedBodyGraphicData" type="Verse.GraphicData" />
      <xs:element minOccurs="0" name="corpseGraphicData" type="Verse.GraphicData" />
      <xs:element minOccurs="0" name="femaleCorpseGraphicData" type="Verse.GraphicData" />
      <xs:element minOccurs="0" name="butcherBodyPart" type="Verse.BodyPartToDrop" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.BodyPartToDrop">
    <xs:all>
      <xs:element minOccurs="0" name="bodyPartGroup" type="xs:string" />
      <xs:element minOccurs="0" name="thing" type="xs:string" />
      <xs:element minOccurs="0" name="allowMale" type="xs:boolean" />
      <xs:element minOccurs="0" name="allowFemale" type="xs:boolean" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.AlternateGraphic">
    <xs:all />
  </xs:complexType>
  <xs:complexType name="Verse.MissingPart">
    <xs:all />
  </xs:complexType>
  <xs:complexType name="Verse.SpecificApparelRequirement">
    <xs:all />
  </xs:complexType>
  <xs:complexType name="Verse.PawnInventoryOption">
    <xs:all>
      <xs:element minOccurs="0" name="thingDef" type="xs:string" />
      <xs:element minOccurs="0" name="countRange" type="Verse.IntRange" />
      <xs:element minOccurs="0" name="choiceChance" type="xs:float" />
      <xs:element minOccurs="0" name="skipChance" type="xs:float" />
      <xs:element minOccurs="0" name="subOptionsTakeAll">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.PawnInventoryOption" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="subOptionsChooseOne">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.PawnInventoryOption" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.SkillRange">
    <xs:all />
  </xs:complexType>
  <xs:complexType name="Verse.PlaceDef">
    <xs:all>
      <xs:element minOccurs="0" name="placeRules" type="Verse.Grammar.RulePack" />
      <xs:element minOccurs="0" name="tags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.RecipeDef">
    <xs:all>
      <xs:element minOccurs="0" name="workerClass" type="xs:string" />
      <xs:element minOccurs="0" name="workerCounterClass" type="xs:string" />
      <xs:element minOccurs="0" name="jobString" type="xs:string" />
      <xs:element minOccurs="0" name="requiredGiverWorkType" type="xs:string" />
      <xs:element minOccurs="0" name="workAmount" type="xs:float" />
      <xs:element minOccurs="0" name="workSpeedStat" type="xs:string" />
      <xs:element minOccurs="0" name="efficiencyStat" type="xs:string" />
      <xs:element minOccurs="0" name="workTableEfficiencyStat" type="xs:string" />
      <xs:element minOccurs="0" name="workTableSpeedStat" type="xs:string" />
      <xs:element minOccurs="0" name="ingredients">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.IngredientCount" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="fixedIngredientFilter" type="Verse.ThingFilter" />
      <xs:element minOccurs="0" name="defaultIngredientFilter" type="Verse.ThingFilter" />
      <xs:element minOccurs="0" name="allowMixingIngredients" type="xs:boolean" />
      <xs:element minOccurs="0" name="ignoreIngredientCountTakeEntireStacks" type="xs:boolean" />
      <xs:element minOccurs="0" name="forceHiddenSpecialFilters">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="autoStripCorpses" type="xs:boolean" />
      <xs:element minOccurs="0" name="interruptIfIngredientIsRotting" type="xs:boolean" />
      <xs:element minOccurs="0" name="products" type="Verse.ThingDefCountClass" />
      <xs:element minOccurs="0" name="specialProducts">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="Butchery" />
                  <xs:enumeration value="Smelted" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="productHasIngredientStuff" type="xs:boolean" />
      <xs:element minOccurs="0" name="useIngredientsForColor" type="xs:boolean" />
      <xs:element minOccurs="0" name="targetCountAdjustment" type="xs:int" />
      <xs:element minOccurs="0" name="unfinishedThingDef" type="xs:string" />
      <xs:element minOccurs="0" name="skillRequirements" type="Verse.SkillRequirement" />
      <xs:element minOccurs="0" name="workSkill" type="xs:string" />
      <xs:element minOccurs="0" name="workSkillLearnFactor" type="xs:float" />
      <xs:element minOccurs="0" name="effectWorking" type="xs:string" />
      <xs:element minOccurs="0" name="soundWorking" type="xs:string" />
      <xs:element minOccurs="0" name="recipeUsers">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="appliedOnFixedBodyParts">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="appliedOnFixedBodyPartGroups">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="addsHediff" type="xs:string" />
      <xs:element minOccurs="0" name="removesHediff" type="xs:string" />
      <xs:element minOccurs="0" name="addsHediffOnFailure" type="xs:string" />
      <xs:element minOccurs="0" name="changesHediffLevel" type="xs:string" />
      <xs:element minOccurs="0" name="incompatibleWithHediffTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="hediffLevelOffset" type="xs:int" />
      <xs:element minOccurs="0" name="hideBodyPartNames" type="xs:boolean" />
      <xs:element minOccurs="0" name="isViolation" type="xs:boolean" />
      <xs:element minOccurs="0" name="successfullyRemovedHediffMessage" type="xs:string" />
      <xs:element minOccurs="0" name="surgerySuccessChanceFactor" type="xs:float" />
      <xs:element minOccurs="0" name="deathOnFailedSurgeryChance" type="xs:float" />
      <xs:element minOccurs="0" name="targetsBodyPart" type="xs:boolean" />
      <xs:element minOccurs="0" name="anesthetize" type="xs:boolean" />
      <xs:element minOccurs="0" name="minPartCount" type="xs:int" />
      <xs:element minOccurs="0" name="surgeryIgnoreEnvironment" type="xs:boolean" />
      <xs:element minOccurs="0" name="surgeryOutcomeEffect" type="xs:string" />
      <xs:element minOccurs="0" name="genderPrerequisite">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="None" />
            <xs:enumeration value="Male" />
            <xs:enumeration value="Female" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="mustBeFertile" type="xs:boolean" />
      <xs:element minOccurs="0" name="allowedForQuestLodgers" type="xs:boolean" />
      <xs:element minOccurs="0" name="minAllowedAge" type="xs:int" />
      <xs:element minOccurs="0" name="developmentalStageFilter">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="None" />
                  <xs:enumeration value="Newborn" />
                  <xs:enumeration value="Baby" />
                  <xs:enumeration value="Child" />
                  <xs:enumeration value="Adult" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="researchPrerequisite" type="xs:string" />
      <xs:element minOccurs="0" name="memePrerequisitesAny">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="researchPrerequisites">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="factionPrerequisiteTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="fromIdeoBuildingPreceptOnly" type="xs:boolean" />
      <xs:element minOccurs="0" name="conceptLearned" type="xs:string" />
      <xs:element minOccurs="0" name="dontShowIfAnyIngredientMissing" type="xs:boolean" />
      <xs:element minOccurs="0" name="displayPriority" type="xs:int" />
      <xs:element minOccurs="0" name="mechanitorOnlyRecipe" type="xs:boolean" />
      <xs:element minOccurs="0" name="gestationCycles" type="xs:int" />
      <xs:element minOccurs="0" name="formingTicks" type="xs:int" />
      <xs:element minOccurs="0" name="mechResurrection" type="xs:boolean" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.IngredientCount">
    <xs:all>
      <xs:element minOccurs="0" name="filter" type="Verse.ThingFilter" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.ResearchProjectDef">
    <xs:all>
      <xs:element minOccurs="0" name="baseCost" type="xs:float" />
      <xs:element minOccurs="0" name="prerequisites">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="hiddenPrerequisites">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="techLevel">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Undefined" />
            <xs:enumeration value="Animal" />
            <xs:enumeration value="Neolithic" />
            <xs:enumeration value="Medieval" />
            <xs:enumeration value="Industrial" />
            <xs:enumeration value="Spacer" />
            <xs:enumeration value="Ultra" />
            <xs:enumeration value="Archotech" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="requiredByThis">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="requiredResearchBuilding" type="xs:string" />
      <xs:element minOccurs="0" name="requiredResearchFacilities">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="tags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="tab" type="xs:string" />
      <xs:element minOccurs="0" name="researchViewX" type="xs:float" />
      <xs:element minOccurs="0" name="researchViewY" type="xs:float" />
      <xs:element minOccurs="0" name="discoveredLetterTitle" type="xs:string" />
      <xs:element minOccurs="0" name="discoveredLetterText" type="xs:string" />
      <xs:element minOccurs="0" name="discoveredLetterMinDifficulty" type="xs:int" />
      <xs:element minOccurs="0" name="discoveredLetterDisabledWhen" type="RimWorld.DifficultyConditionConfig" />
      <xs:element minOccurs="0" name="unlockExtremeDifficulty" type="xs:boolean" />
      <xs:element minOccurs="0" name="techprintCount" type="xs:int" />
      <xs:element minOccurs="0" name="techprintCommonality" type="xs:float" />
      <xs:element minOccurs="0" name="techprintMarketValue" type="xs:float" />
      <xs:element minOccurs="0" name="heldByFactionCategoryTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="hideWhen" type="RimWorld.DifficultyConditionConfig" />
      <xs:element minOccurs="0" name="requiresMechanitor" type="xs:boolean" />
      <xs:element minOccurs="0" name="requiredStudied">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="recalculatePower" type="xs:boolean" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.ResearchProjectTagDef">
    <xs:all>
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.ReservationLayerDef">
    <xs:all>
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.RoofDef">
    <xs:all>
      <xs:element minOccurs="0" name="isNatural" type="xs:boolean" />
      <xs:element minOccurs="0" name="isThickRoof" type="xs:boolean" />
      <xs:element minOccurs="0" name="collapseLeavingThingDef" type="xs:string" />
      <xs:element minOccurs="0" name="filthLeaving" type="xs:string" />
      <xs:element minOccurs="0" name="soundPunchThrough" type="xs:string" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.RoomRoleDef">
    <xs:all>
      <xs:element minOccurs="0" name="workerClass" type="xs:string" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.RoomStatDef">
    <xs:all>
      <xs:element minOccurs="0" name="workerClass" type="xs:string" />
      <xs:element minOccurs="0" name="updatePriority" type="xs:float" />
      <xs:element minOccurs="0" name="displayRounded" type="xs:boolean" />
      <xs:element minOccurs="0" name="isHidden" type="xs:boolean" />
      <xs:element minOccurs="0" name="roomlessScore" type="xs:float" />
      <xs:element minOccurs="0" name="scoreStages">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.RoomStatScoreStage" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="inputStat" type="xs:string" />
      <xs:element minOccurs="0" name="curve" type="Verse.SimpleCurve" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.RoomStatScoreStage">
    <xs:all>
      <xs:element minOccurs="0" name="minScore" type="xs:float" />
      <xs:element minOccurs="0" name="label" type="xs:string" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.RulePackDef">
    <xs:all>
      <xs:element minOccurs="0" name="include">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="directTestable" type="xs:boolean" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.ScatterableDef">
    <xs:all>
      <xs:element minOccurs="0" name="texturePath" type="xs:string" />
      <xs:element minOccurs="0" name="minSize" type="xs:float" />
      <xs:element minOccurs="0" name="maxSize" type="xs:float" />
      <xs:element minOccurs="0" name="selectionWeight" type="xs:float" />
      <xs:element minOccurs="0" name="scatterType" type="xs:string" />
      <xs:element minOccurs="0" name="mat" type="UnityEngine.Material" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="UnityEngine.Material">
    <xs:all />
  </xs:complexType>
  <xs:complexType name="Verse.ShaderTypeDef">
    <xs:all>
      <xs:element minOccurs="0" name="shaderPath" type="xs:string" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.SongDef">
    <xs:all>
      <xs:element minOccurs="0" name="clipPath" type="xs:string" />
      <xs:element minOccurs="0" name="volume" type="xs:float" />
      <xs:element minOccurs="0" name="playOnMap" type="xs:boolean" />
      <xs:element minOccurs="0" name="commonality" type="xs:float" />
      <xs:element minOccurs="0" name="tense" type="xs:boolean" />
      <xs:element minOccurs="0" name="allowedTimeOfDay">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Night" />
            <xs:enumeration value="Day" />
            <xs:enumeration value="Any" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="allowedSeasons">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="Undefined" />
                  <xs:enumeration value="Spring" />
                  <xs:enumeration value="Summer" />
                  <xs:enumeration value="Fall" />
                  <xs:enumeration value="Winter" />
                  <xs:enumeration value="PermanentSummer" />
                  <xs:enumeration value="PermanentWinter" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="minRoyalTitle" type="xs:string" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.Sound.ImpactSoundTypeDef">
    <xs:all>
      <xs:element minOccurs="0" name="playOnlyIfHitPawn" type="xs:boolean" />
      <xs:element minOccurs="0" name="soundDef" type="xs:string" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.SoundDef">
    <xs:all>
      <xs:element minOccurs="0" name="sustain" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>If checked, this sound is a sustainer.

Sustainers are used for sounds with a defined beginning and end (as opposed to OneShots, which just fire at a given instant).

This value must match what the game expects from the SubSoundDef with this name.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="context">
        <xs:annotation>
          <xs:documentation>When the sound is allowed to play: only when the map view is active, only when the world view is active, or always (map + world + main menu).</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Any" />
            <xs:enumeration value="MapOnly" />
            <xs:enumeration value="WorldOnly" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="eventNames">
        <xs:annotation>
          <xs:documentation>Event names for this sound. 

The code will look up sounds to play them according to their name. If the code finds the event name it wants in this list, it will trigger this sound.

The Def name is also used as an event name. Obsolete</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="maxVoices" type="xs:int">
        <xs:annotation>
          <xs:documentation>For one-shots, this is the number of individual sounds from this Def than can be playing at a time.

 For sustainers, this is the number of sustainers that can be running with this sound (each of which can have sub-sounds). Sustainers can fade in and out as you move the camera or objects move, to keep the nearest ones audible.

This setting may not work for on-camera sounds.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="maxSimultaneous" type="xs:int">
        <xs:annotation>
          <xs:documentation>The number of instances of this sound that can play at almost exactly the same moment. Handles cases like six gunners all firing their identical guns at the same time because a target came into view of all of them at the same time. Ordinarily this would make a painfully loud sound, but you can reduce it with this.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="priorityMode">
        <xs:annotation>
          <xs:documentation>If the system has to not play some instances of this sound because of maxVoices, this determines which ones are ignored.

You should use PrioritizeNewest for things like gunshots, so older still-playing samples are overridden by newer, more important ones.

Sustained sounds should usually prioritize nearest, so if a new fire starts burning nearby it can override a more distant one.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="PrioritizeNewest" />
            <xs:enumeration value="PrioritizeNearest" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="slot" type="xs:string">
        <xs:annotation>
          <xs:documentation>The special sound slot this sound takes. If a sound with this slot is playing, new sounds in this slot will not play.

Only works for on-camera sounds.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="sustainStartSound" type="xs:string">
        <xs:annotation>
          <xs:documentation>The name of the SoundDef that will be played when this sustainer starts.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="sustainStopSound" type="xs:string">
        <xs:annotation>
          <xs:documentation>The name of the SoundDef that will be played when this sustainer ends.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="sustainFadeoutTime" type="xs:float">
        <xs:annotation>
          <xs:documentation>After a sustainer is ended, the sound will fade out over this many real-time seconds.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="sustainFadeoutStartSound" type="xs:string">
        <xs:annotation>
          <xs:documentation>The name of the SoundDef that will be played when this sustainer starts to fade out.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="subSounds">
        <xs:annotation>
          <xs:documentation>All the sounds that will play when this set is triggered.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.Sound.SubSoundDef" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.Sound.SubSoundDef">
    <xs:all>
      <xs:element minOccurs="0" name="name" type="xs:string">
        <xs:annotation>
          <xs:documentation>A name to help you identify the sound.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="onCamera" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Whether this sound plays on the camera or in the world.

This must match what the game expects from the sound Def with this name.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="muteWhenPaused" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Whether to mute this subSound while the game is paused (either by the pausing in play or by opening a menu)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="tempoAffectedByGameSpeed" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Whether this subSound's tempo should be affected by the current tick rate.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="grains">
        <xs:annotation>
          <xs:documentation>The sound grains used for this sample. The game will choose one of these randomly when the sound plays. Sustainers choose one for each sample as it begins.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.Sound.AudioGrain" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="volumeRange" type="Verse.FloatRange">
        <xs:annotation>
          <xs:documentation>This sound will play at a random volume inside this range.

Sustainers will choose a different random volume for each sample.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="pitchRange" type="Verse.FloatRange">
        <xs:annotation>
          <xs:documentation>This sound will play at a random pitch inside this range.

Sustainers will choose a different random pitch for each sample.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="distRange" type="Verse.FloatRange">
        <xs:annotation>
          <xs:documentation>This sound will play max volume when it is under minDistance from the camera.

It will fade out linearly until the camera distance reaches its max.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="repeatMode">
        <xs:annotation>
          <xs:documentation>When the sound chooses the next grain, you may use this setting to have it avoid repeating the last grain, or avoid repeating any of the grains in the last X played, X being half the total number of grains defined.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Any" />
            <xs:enumeration value="NeverTwice" />
            <xs:enumeration value="NeverLastHalf" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="paramMappings">
        <xs:annotation>
          <xs:documentation>Mappings between game parameters (like fire size or wind speed) and properties of the sound.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.Sound.SoundParameterMapping" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="filters">
        <xs:annotation>
          <xs:documentation>The filters to be applied to this sound.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.Sound.SoundFilter" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="startDelayRange" type="Verse.FloatRange">
        <xs:annotation>
          <xs:documentation>A range of possible times between when this sound is triggered and when it will actually start playing.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="gameSpeedRange" type="Verse.IntRange">
        <xs:annotation>
          <xs:documentation>A range of game speeds this sound can be played on.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="tag" type="xs:string">
        <xs:annotation>
          <xs:documentation>One shots sharing the same tag are treated as the same sound when determining importance.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="sustainLoop" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>If true, each sample in the sustainer will be looped and ended only after sustainerLoopDurationRange. If not, the sounds will just play once and end after their own length.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="sustainLoopDurationRange" type="Verse.FloatRange">
        <xs:annotation>
          <xs:documentation>The range of durations that individual looped samples in the sustainer will have. Each sample ends after a time randomly chosen in this range.

Only used if the sustainer is looped.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="sustainIntervalRange" type="Verse.FloatRange">
        <xs:annotation>
          <xs:documentation>The time between when one sample ends and the next starts.

Set to negative if you wish samples to overlap.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="sustainAttack" type="xs:float">
        <xs:annotation>
          <xs:documentation>The fade-in time of each sample. The sample will start at 0 volume and fade in over this number of seconds.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="sustainSkipFirstAttack" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Skip the attack on the first sustainer sample.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="sustainRelease" type="xs:float">
        <xs:annotation>
          <xs:documentation>The fade-out time of each sample. At this number of seconds before the sample ends, it will start fading out. Its volume will be zero at the moment it finishes fading out.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.Sound.AudioGrain">
    <xs:all />
  </xs:complexType>
  <xs:complexType name="Verse.Sound.SoundParameterMapping">
    <xs:all>
      <xs:element minOccurs="0" name="inParam" type="Verse.Sound.SoundParamSource">
        <xs:annotation>
          <xs:documentation>The independent parameter that the game will change to drive this relationship.

On the graph, this is the X axis.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="outParam" type="Verse.Sound.SoundParamTarget">
        <xs:annotation>
          <xs:documentation>The dependent parameter that will respond to changes to the in-parameter.

This must match something the game can change about this sound.

On the graph, this is the y-axis.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="paramUpdateMode">
        <xs:annotation>
          <xs:documentation>Determines when sound parameters should be applies to samples.

Constant means the parameters are updated every frame and can change continuously.

OncePerSample means that the parameters are applied exactly once to each sample that plays.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Constant" />
            <xs:enumeration value="OncePerSample" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="curve" type="Verse.SimpleCurve" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.Sound.SoundParamSource">
    <xs:all />
  </xs:complexType>
  <xs:complexType name="Verse.Sound.SoundParamTarget">
    <xs:all />
  </xs:complexType>
  <xs:complexType name="Verse.Sound.SoundFilter">
    <xs:all />
  </xs:complexType>
  <xs:complexType name="Verse.SpecialThingFilterDef">
    <xs:all>
      <xs:element minOccurs="0" name="parentCategory" type="xs:string" />
      <xs:element minOccurs="0" name="saveKey" type="xs:string" />
      <xs:element minOccurs="0" name="allowedByDefault" type="xs:boolean" />
      <xs:element minOccurs="0" name="configurable" type="xs:boolean" />
      <xs:element minOccurs="0" name="workerClass" type="xs:string" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.StuffAppearanceDef">
    <xs:all>
      <xs:element minOccurs="0" name="pathPrefix" type="xs:string" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.StyleCategoryDef">
    <xs:all>
      <xs:element minOccurs="0" name="thingDefStyles">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.ThingDefStyle" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="iconPath" type="xs:string" />
      <xs:element minOccurs="0" name="addDesignators">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.BuildableDef" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="addDesignatorGroups">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="soundOngoingRitual" type="xs:string" />
      <xs:element minOccurs="0" name="ritualVisualEffectDef" type="xs:string" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.ThingDefStyle">
    <xs:all />
  </xs:complexType>
  <xs:complexType name="Verse.SubcameraDef">
    <xs:all>
      <xs:element minOccurs="0" name="layer" type="xs:string" />
      <xs:element minOccurs="0" name="depth" type="xs:int" />
      <xs:element minOccurs="0" name="format">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="ARGB32" />
            <xs:enumeration value="Depth" />
            <xs:enumeration value="ARGBHalf" />
            <xs:enumeration value="Shadowmap" />
            <xs:enumeration value="RGB565" />
            <xs:enumeration value="ARGB4444" />
            <xs:enumeration value="ARGB1555" />
            <xs:enumeration value="Default" />
            <xs:enumeration value="ARGB2101010" />
            <xs:enumeration value="DefaultHDR" />
            <xs:enumeration value="ARGB64" />
            <xs:enumeration value="ARGBFloat" />
            <xs:enumeration value="RGFloat" />
            <xs:enumeration value="RGHalf" />
            <xs:enumeration value="RFloat" />
            <xs:enumeration value="RHalf" />
            <xs:enumeration value="R8" />
            <xs:enumeration value="ARGBInt" />
            <xs:enumeration value="RGInt" />
            <xs:enumeration value="RInt" />
            <xs:enumeration value="BGRA32" />
            <xs:enumeration value="RGB111110Float" />
            <xs:enumeration value="RG32" />
            <xs:enumeration value="RGBAUShort" />
            <xs:enumeration value="RG16" />
            <xs:enumeration value="BGRA10101010_XR" />
            <xs:enumeration value="BGR101010_XR" />
            <xs:enumeration value="R16" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.TerrainAffordanceDef">
    <xs:all>
      <xs:element minOccurs="0" name="order" type="xs:int" />
      <xs:element minOccurs="0" name="visualizeOnAffordanceOverlay" type="xs:boolean" />
      <xs:element minOccurs="0" name="affordanceOverlayColor" type="UnityEngine.Color" />
      <xs:element minOccurs="0" name="blockAffordanceOverlay" type="xs:boolean" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.TerrainDef">
    <xs:all>
      <xs:element minOccurs="0" name="texturePath" type="xs:string" />
      <xs:element minOccurs="0" name="edgeType">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Hard" />
            <xs:enumeration value="Fade" />
            <xs:enumeration value="FadeRough" />
            <xs:enumeration value="Water" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="waterDepthShader" type="xs:string" />
      <xs:element minOccurs="0" name="waterDepthShaderParameters" type="Verse.ShaderParameter" />
      <xs:element minOccurs="0" name="renderPrecedence" type="xs:int" />
      <xs:element minOccurs="0" name="affordances">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="layerable" type="xs:boolean" />
      <xs:element minOccurs="0" name="scatterType" type="xs:string" />
      <xs:element minOccurs="0" name="takeFootprints" type="xs:boolean" />
      <xs:element minOccurs="0" name="natural" type="xs:boolean" />
      <xs:element minOccurs="0" name="takeSplashes" type="xs:boolean" />
      <xs:element minOccurs="0" name="avoidWander" type="xs:boolean" />
      <xs:element minOccurs="0" name="changeable" type="xs:boolean" />
      <xs:element minOccurs="0" name="smoothedTerrain" type="xs:string" />
      <xs:element minOccurs="0" name="holdSnow" type="xs:boolean" />
      <xs:element minOccurs="0" name="isPaintable" type="xs:boolean" />
      <xs:element minOccurs="0" name="extinguishesFire" type="xs:boolean" />
      <xs:element minOccurs="0" name="bridge" type="xs:boolean" />
      <xs:element minOccurs="0" name="color" type="UnityEngine.Color" />
      <xs:element minOccurs="0" name="colorDef" type="xs:string" />
      <xs:element minOccurs="0" name="driesTo" type="xs:string" />
      <xs:element minOccurs="0" name="tags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="burnedDef" type="xs:string" />
      <xs:element minOccurs="0" name="tools">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.Tool" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="extraDeteriorationFactor" type="xs:float" />
      <xs:element minOccurs="0" name="destroyOnBombDamageThreshold" type="xs:float" />
      <xs:element minOccurs="0" name="destroyBuildingsOnDestroyed" type="xs:boolean" />
      <xs:element minOccurs="0" name="traversedThought" type="xs:string" />
      <xs:element minOccurs="0" name="extraDraftedPerceivedPathCost" type="xs:int" />
      <xs:element minOccurs="0" name="extraNonDraftedPerceivedPathCost" type="xs:int" />
      <xs:element minOccurs="0" name="destroyEffect" type="xs:string" />
      <xs:element minOccurs="0" name="destroyEffectWater" type="xs:string" />
      <xs:element minOccurs="0" name="autoRebuildable" type="xs:boolean" />
      <xs:element minOccurs="0" name="pollutedTexturePath" type="xs:string" />
      <xs:element minOccurs="0" name="pollutionOverlayTexturePath" type="xs:string" />
      <xs:element minOccurs="0" name="pollutionShaderType" type="xs:string" />
      <xs:element minOccurs="0" name="pollutionColor" type="UnityEngine.Color" />
      <xs:element minOccurs="0" name="pollutionOverlayScrollSpeed" type="UnityEngine.Vector2" />
      <xs:element minOccurs="0" name="pollutionOverlayScale" type="UnityEngine.Vector2" />
      <xs:element minOccurs="0" name="pollutionCloudColor" type="UnityEngine.Color" />
      <xs:element minOccurs="0" name="pollutionTintColor" type="UnityEngine.Color" />
      <xs:element minOccurs="0" name="generatedFilth" type="xs:string" />
      <xs:element minOccurs="0" name="filthAcceptanceMask">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="None" />
                  <xs:enumeration value="Terrain" />
                  <xs:enumeration value="Natural" />
                  <xs:enumeration value="Unnatural" />
                  <xs:enumeration value="Pawn" />
                  <xs:enumeration value="Any" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="statBases" type="RimWorld.StatModifier" />
      <xs:element minOccurs="0" name="passability">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Standable" />
            <xs:enumeration value="PassThroughOnly" />
            <xs:enumeration value="Impassable" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="pathCost" type="xs:int" />
      <xs:element minOccurs="0" name="pathCostIgnoreRepeat" type="xs:boolean" />
      <xs:element minOccurs="0" name="fertility" type="xs:float" />
      <xs:element minOccurs="0" name="costList" type="Verse.ThingDefCountClass" />
      <xs:element minOccurs="0" name="costStuffCount" type="xs:int" />
      <xs:element minOccurs="0" name="stuffCategories">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="stuffCategorySummary" type="xs:string" />
      <xs:element minOccurs="0" name="costListForDifficulty" type="Verse.CostListForDifficulty" />
      <xs:element minOccurs="0" name="placingDraggableDimensions" type="xs:int" />
      <xs:element minOccurs="0" name="clearBuildingArea" type="xs:boolean" />
      <xs:element minOccurs="0" name="defaultPlacingRot" type="Verse.Rot4" />
      <xs:element minOccurs="0" name="resourcesFractionWhenDeconstructed" type="xs:float" />
      <xs:element minOccurs="0" name="blocksAltitudes">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="Terrain" />
                  <xs:enumeration value="TerrainScatter" />
                  <xs:enumeration value="Floor" />
                  <xs:enumeration value="Conduits" />
                  <xs:enumeration value="FloorCoverings" />
                  <xs:enumeration value="FloorEmplacement" />
                  <xs:enumeration value="Filth" />
                  <xs:enumeration value="Zone" />
                  <xs:enumeration value="SmallWire" />
                  <xs:enumeration value="LowPlant" />
                  <xs:enumeration value="MoteLow" />
                  <xs:enumeration value="Shadows" />
                  <xs:enumeration value="DoorMoveable" />
                  <xs:enumeration value="Building" />
                  <xs:enumeration value="BuildingBelowTop" />
                  <xs:enumeration value="BuildingOnTop" />
                  <xs:enumeration value="Item" />
                  <xs:enumeration value="ItemImportant" />
                  <xs:enumeration value="LayingPawn" />
                  <xs:enumeration value="PawnRope" />
                  <xs:enumeration value="Projectile" />
                  <xs:enumeration value="Pawn" />
                  <xs:enumeration value="PawnUnused" />
                  <xs:enumeration value="PawnState" />
                  <xs:enumeration value="Blueprint" />
                  <xs:enumeration value="MoteOverheadLow" />
                  <xs:enumeration value="MoteOverhead" />
                  <xs:enumeration value="Gas" />
                  <xs:enumeration value="Skyfaller" />
                  <xs:enumeration value="Weather" />
                  <xs:enumeration value="LightingOverlay" />
                  <xs:enumeration value="VisEffects" />
                  <xs:enumeration value="FogOfWar" />
                  <xs:enumeration value="WorldClipper" />
                  <xs:enumeration value="MapDataOverlay" />
                  <xs:enumeration value="MetaOverlays" />
                  <xs:enumeration value="_Count" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="dominantStyleCategory" type="xs:string" />
      <xs:element minOccurs="0" name="isAltar" type="xs:boolean" />
      <xs:element minOccurs="0" name="useStuffTerrainAffordance" type="xs:boolean" />
      <xs:element minOccurs="0" name="terrainAffordanceNeeded" type="xs:string" />
      <xs:element minOccurs="0" name="buildingPrerequisites">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="researchPrerequisites">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="constructionSkillPrerequisite" type="xs:int" />
      <xs:element minOccurs="0" name="artisticSkillPrerequisite" type="xs:int" />
      <xs:element minOccurs="0" name="minTechLevelToBuild">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Undefined" />
            <xs:enumeration value="Animal" />
            <xs:enumeration value="Neolithic" />
            <xs:enumeration value="Medieval" />
            <xs:enumeration value="Industrial" />
            <xs:enumeration value="Spacer" />
            <xs:enumeration value="Ultra" />
            <xs:enumeration value="Archotech" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="maxTechLevelToBuild">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Undefined" />
            <xs:enumeration value="Animal" />
            <xs:enumeration value="Neolithic" />
            <xs:enumeration value="Medieval" />
            <xs:enumeration value="Industrial" />
            <xs:enumeration value="Spacer" />
            <xs:enumeration value="Ultra" />
            <xs:enumeration value="Archotech" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="altitudeLayer">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Terrain" />
            <xs:enumeration value="TerrainScatter" />
            <xs:enumeration value="Floor" />
            <xs:enumeration value="Conduits" />
            <xs:enumeration value="FloorCoverings" />
            <xs:enumeration value="FloorEmplacement" />
            <xs:enumeration value="Filth" />
            <xs:enumeration value="Zone" />
            <xs:enumeration value="SmallWire" />
            <xs:enumeration value="LowPlant" />
            <xs:enumeration value="MoteLow" />
            <xs:enumeration value="Shadows" />
            <xs:enumeration value="DoorMoveable" />
            <xs:enumeration value="Building" />
            <xs:enumeration value="BuildingBelowTop" />
            <xs:enumeration value="BuildingOnTop" />
            <xs:enumeration value="Item" />
            <xs:enumeration value="ItemImportant" />
            <xs:enumeration value="LayingPawn" />
            <xs:enumeration value="PawnRope" />
            <xs:enumeration value="Projectile" />
            <xs:enumeration value="Pawn" />
            <xs:enumeration value="PawnUnused" />
            <xs:enumeration value="PawnState" />
            <xs:enumeration value="Blueprint" />
            <xs:enumeration value="MoteOverheadLow" />
            <xs:enumeration value="MoteOverhead" />
            <xs:enumeration value="Gas" />
            <xs:enumeration value="Skyfaller" />
            <xs:enumeration value="Weather" />
            <xs:enumeration value="LightingOverlay" />
            <xs:enumeration value="VisEffects" />
            <xs:enumeration value="FogOfWar" />
            <xs:enumeration value="WorldClipper" />
            <xs:enumeration value="MapDataOverlay" />
            <xs:enumeration value="MetaOverlays" />
            <xs:enumeration value="_Count" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="repairEffect" type="xs:string" />
      <xs:element minOccurs="0" name="constructEffect" type="xs:string" />
      <xs:element minOccurs="0" name="colorPerStuff">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.ColorForStuff" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="canGenerateDefaultDesignator" type="xs:boolean" />
      <xs:element minOccurs="0" name="ideoBuilding" type="xs:boolean" />
      <xs:element minOccurs="0" name="specialDisplayRadius" type="xs:float" />
      <xs:element minOccurs="0" name="placeWorkers">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="designationCategory" type="xs:string" />
      <xs:element minOccurs="0" name="designatorDropdown" type="xs:string" />
      <xs:element minOccurs="0" name="designationHotKey" type="xs:string" />
      <xs:element minOccurs="0" name="uiOrder" type="xs:float" />
      <xs:element minOccurs="0" name="uiIconPath" type="xs:string" />
      <xs:element minOccurs="0" name="uiIconPathsStuff">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.IconForStuffAppearance" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="uiIconOffset" type="UnityEngine.Vector2" />
      <xs:element minOccurs="0" name="uiIconColor" type="UnityEngine.Color" />
      <xs:element minOccurs="0" name="uiIconForStackCount" type="xs:int" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.Tool">
    <xs:all>
      <xs:element minOccurs="0" name="label" type="xs:string" />
      <xs:element minOccurs="0" name="labelUsedInLogging" type="xs:boolean" />
      <xs:element minOccurs="0" name="capacities">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="power" type="xs:float" />
      <xs:element minOccurs="0" name="armorPenetration" type="xs:float" />
      <xs:element minOccurs="0" name="cooldownTime" type="xs:float" />
      <xs:element minOccurs="0" name="surpriseAttack" type="Verse.SurpriseAttackProps" />
      <xs:element minOccurs="0" name="hediff" type="xs:string" />
      <xs:element minOccurs="0" name="chanceFactor" type="xs:float" />
      <xs:element minOccurs="0" name="alwaysTreatAsWeapon" type="xs:boolean" />
      <xs:element minOccurs="0" name="extraMeleeDamages">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.ExtraDamage" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="soundMeleeHit" type="xs:string" />
      <xs:element minOccurs="0" name="soundMeleeMiss" type="xs:string" />
      <xs:element minOccurs="0" name="linkedBodyPartsGroup" type="xs:string" />
      <xs:element minOccurs="0" name="ensureLinkedBodyPartsGroupAlwaysUsable" type="xs:boolean" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.ThingCategoryDef">
    <xs:all>
      <xs:element minOccurs="0" name="parent" type="xs:string" />
      <xs:element minOccurs="0" name="iconPath" type="xs:string" />
      <xs:element minOccurs="0" name="resourceReadoutRoot" type="xs:boolean" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.ThingDef">
    <xs:all>
      <xs:element minOccurs="0" name="thingClass" type="xs:string" />
      <xs:element minOccurs="0" name="category">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="None" />
            <xs:enumeration value="Pawn" />
            <xs:enumeration value="Item" />
            <xs:enumeration value="Building" />
            <xs:enumeration value="Plant" />
            <xs:enumeration value="Projectile" />
            <xs:enumeration value="Filth" />
            <xs:enumeration value="Gas" />
            <xs:enumeration value="Attachment" />
            <xs:enumeration value="Mote" />
            <xs:enumeration value="Ethereal" />
            <xs:enumeration value="PsychicEmitter" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="tickerType">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Never" />
            <xs:enumeration value="Normal" />
            <xs:enumeration value="Rare" />
            <xs:enumeration value="Long" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="stackLimit" type="xs:int" />
      <xs:element minOccurs="0" name="size" type="Verse.IntVec2" />
      <xs:element minOccurs="0" name="destroyable" type="xs:boolean" />
      <xs:element minOccurs="0" name="rotatable" type="xs:boolean" />
      <xs:element minOccurs="0" name="smallVolume" type="xs:boolean" />
      <xs:element minOccurs="0" name="useHitPoints" type="xs:boolean" />
      <xs:element minOccurs="0" name="receivesSignals" type="xs:boolean" />
      <xs:element minOccurs="0" name="comps">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.CompProperties" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="devNote" type="xs:string" />
      <xs:element minOccurs="0" name="killedLeavings" type="Verse.ThingDefCountClass" />
      <xs:element minOccurs="0" name="killedLeavingsPlayerHostile" type="Verse.ThingDefCountClass" />
      <xs:element minOccurs="0" name="butcherProducts" type="Verse.ThingDefCountClass" />
      <xs:element minOccurs="0" name="smeltProducts" type="Verse.ThingDefCountClass" />
      <xs:element minOccurs="0" name="smeltable" type="xs:boolean" />
      <xs:element minOccurs="0" name="burnableByRecipe" type="xs:boolean" />
      <xs:element minOccurs="0" name="randomizeRotationOnSpawn" type="xs:boolean" />
      <xs:element minOccurs="0" name="damageMultipliers">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DamageMultiplier" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="isTechHediff" type="xs:boolean" />
      <xs:element minOccurs="0" name="recipeMaker" type="Verse.RecipeMakerProperties" />
      <xs:element minOccurs="0" name="minifiedDef" type="xs:string" />
      <xs:element minOccurs="0" name="isUnfinishedThing" type="xs:boolean" />
      <xs:element minOccurs="0" name="leaveResourcesWhenKilled" type="xs:boolean" />
      <xs:element minOccurs="0" name="slagDef" type="xs:string" />
      <xs:element minOccurs="0" name="isFrameInt" type="xs:boolean" />
      <xs:element minOccurs="0" name="multipleInteractionCellOffsets">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.IntVec3" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="interactionCellOffset" type="Verse.IntVec3" />
      <xs:element minOccurs="0" name="hasInteractionCell" type="xs:boolean" />
      <xs:element minOccurs="0" name="interactionCellIcon" type="xs:string" />
      <xs:element minOccurs="0" name="interactionCellIconReverse" type="xs:boolean" />
      <xs:element minOccurs="0" name="filthLeaving" type="xs:string" />
      <xs:element minOccurs="0" name="forceDebugSpawnable" type="xs:boolean" />
      <xs:element minOccurs="0" name="intricate" type="xs:boolean" />
      <xs:element minOccurs="0" name="scatterableOnMapGen" type="xs:boolean" />
      <xs:element minOccurs="0" name="deepCommonality" type="xs:float" />
      <xs:element minOccurs="0" name="deepCountPerCell" type="xs:int" />
      <xs:element minOccurs="0" name="deepCountPerPortion" type="xs:int" />
      <xs:element minOccurs="0" name="deepLumpSizeRange" type="Verse.IntRange" />
      <xs:element minOccurs="0" name="generateCommonality" type="xs:float" />
      <xs:element minOccurs="0" name="generateAllowChance" type="xs:float" />
      <xs:element minOccurs="0" name="startingHpRange" type="Verse.FloatRange" />
      <xs:element minOccurs="0" name="thingSetMakerTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="alwaysFlee" type="xs:boolean" />
      <xs:element minOccurs="0" name="recipes">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="messageOnDeteriorateInStorage" type="xs:boolean" />
      <xs:element minOccurs="0" name="deteriorateFromEnvironmentalEffects" type="xs:boolean" />
      <xs:element minOccurs="0" name="canDeteriorateUnspawned" type="xs:boolean" />
      <xs:element minOccurs="0" name="canLoadIntoCaravan" type="xs:boolean" />
      <xs:element minOccurs="0" name="isMechClusterThreat" type="xs:boolean" />
      <xs:element minOccurs="0" name="displayNumbersBetweenSameDefDistRange" type="Verse.FloatRange" />
      <xs:element minOccurs="0" name="minRewardCount" type="xs:int" />
      <xs:element minOccurs="0" name="preventSkyfallersLandingOn" type="xs:boolean" />
      <xs:element minOccurs="0" name="requiresFactionToAcquire" type="xs:string" />
      <xs:element minOccurs="0" name="relicChance" type="xs:float" />
      <xs:element minOccurs="0" name="orderedTakeGroup" type="xs:string" />
      <xs:element minOccurs="0" name="allowedArchonexusCount" type="xs:int" />
      <xs:element minOccurs="0" name="possessionCount" type="xs:int" />
      <xs:element minOccurs="0" name="notifyMapRemoved" type="xs:boolean" />
      <xs:element minOccurs="0" name="canScatterOver" type="xs:boolean" />
      <xs:element minOccurs="0" name="graphicData" type="Verse.GraphicData" />
      <xs:element minOccurs="0" name="drawerType">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="None" />
            <xs:enumeration value="RealtimeOnly" />
            <xs:enumeration value="MapMeshOnly" />
            <xs:enumeration value="MapMeshAndRealTime" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="drawOffscreen" type="xs:boolean" />
      <xs:element minOccurs="0" name="colorGenerator" type="Verse.ColorGenerator" />
      <xs:element minOccurs="0" name="hideAtSnowDepth" type="xs:float" />
      <xs:element minOccurs="0" name="drawDamagedOverlay" type="xs:boolean" />
      <xs:element minOccurs="0" name="castEdgeShadows" type="xs:boolean" />
      <xs:element minOccurs="0" name="staticSunShadowHeight" type="xs:float" />
      <xs:element minOccurs="0" name="useSameGraphicForGhost" type="xs:boolean" />
      <xs:element minOccurs="0" name="randomStyle">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.ThingStyleChance" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="randomStyleChance" type="xs:float" />
      <xs:element minOccurs="0" name="canEditAnyStyle" type="xs:boolean" />
      <xs:element minOccurs="0" name="defaultStuff" type="xs:string" />
      <xs:element minOccurs="0" name="killedLeavingsExpandRect" type="xs:int" />
      <xs:element minOccurs="0" name="minifiedDrawScale" type="xs:float" />
      <xs:element minOccurs="0" name="selectable" type="xs:boolean" />
      <xs:element minOccurs="0" name="containedPawnsSelectable" type="xs:boolean" />
      <xs:element minOccurs="0" name="containedItemsSelectable" type="xs:boolean" />
      <xs:element minOccurs="0" name="neverMultiSelect" type="xs:boolean" />
      <xs:element minOccurs="0" name="isAutoAttackableMapObject" type="xs:boolean" />
      <xs:element minOccurs="0" name="hasTooltip" type="xs:boolean" />
      <xs:element minOccurs="0" name="inspectorTabs">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="seeThroughFog" type="xs:boolean" />
      <xs:element minOccurs="0" name="drawGUIOverlay" type="xs:boolean" />
      <xs:element minOccurs="0" name="drawGUIOverlayQuality" type="xs:boolean" />
      <xs:element minOccurs="0" name="resourceReadoutPriority">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Uncounted" />
            <xs:enumeration value="Last" />
            <xs:enumeration value="Middle" />
            <xs:enumeration value="First" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="resourceReadoutAlwaysShow" type="xs:boolean" />
      <xs:element minOccurs="0" name="drawPlaceWorkersWhileSelected" type="xs:boolean" />
      <xs:element minOccurs="0" name="drawPlaceWorkersWhileInstallBlueprintSelected" type="xs:boolean" />
      <xs:element minOccurs="0" name="storedConceptLearnOpportunity" type="xs:string" />
      <xs:element minOccurs="0" name="uiIconScale" type="xs:float" />
      <xs:element minOccurs="0" name="hasCustomRectForSelector" type="xs:boolean" />
      <xs:element minOccurs="0" name="alwaysHaulable" type="xs:boolean" />
      <xs:element minOccurs="0" name="designateHaulable" type="xs:boolean" />
      <xs:element minOccurs="0" name="thingCategories">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="mineable" type="xs:boolean" />
      <xs:element minOccurs="0" name="socialPropernessMatters" type="xs:boolean" />
      <xs:element minOccurs="0" name="stealable" type="xs:boolean" />
      <xs:element minOccurs="0" name="soundDrop" type="xs:string" />
      <xs:element minOccurs="0" name="soundPickup" type="xs:string" />
      <xs:element minOccurs="0" name="soundInteract" type="xs:string" />
      <xs:element minOccurs="0" name="soundImpactDefault" type="xs:string" />
      <xs:element minOccurs="0" name="soundPlayInstrument" type="xs:string" />
      <xs:element minOccurs="0" name="soundOpen" type="xs:string" />
      <xs:element minOccurs="0" name="saveCompressible" type="xs:boolean" />
      <xs:element minOccurs="0" name="isSaveable" type="xs:boolean" />
      <xs:element minOccurs="0" name="holdsRoof" type="xs:boolean" />
      <xs:element minOccurs="0" name="fillPercent" type="xs:float" />
      <xs:element minOccurs="0" name="coversFloor" type="xs:boolean" />
      <xs:element minOccurs="0" name="neverOverlapFloors" type="xs:boolean" />
      <xs:element minOccurs="0" name="surfaceType">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="None" />
            <xs:enumeration value="Item" />
            <xs:enumeration value="Eat" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="blockPlants" type="xs:boolean" />
      <xs:element minOccurs="0" name="blockLight" type="xs:boolean" />
      <xs:element minOccurs="0" name="blockWind" type="xs:boolean" />
      <xs:element minOccurs="0" name="tradeability">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="None" />
            <xs:enumeration value="Sellable" />
            <xs:enumeration value="Buyable" />
            <xs:enumeration value="All" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="tradeTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="tradeNeverStack" type="xs:boolean" />
      <xs:element minOccurs="0" name="healthAffectsPrice" type="xs:boolean" />
      <xs:element minOccurs="0" name="colorGeneratorInTraderStock" type="Verse.ColorGenerator" />
      <xs:element minOccurs="0" name="tools">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.Tool" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="equippedAngleOffset" type="xs:float" />
      <xs:element minOccurs="0" name="equippedDistanceOffset" type="xs:float" />
      <xs:element minOccurs="0" name="equipmentType">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="None" />
            <xs:enumeration value="Primary" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="techLevel">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Undefined" />
            <xs:enumeration value="Animal" />
            <xs:enumeration value="Neolithic" />
            <xs:enumeration value="Medieval" />
            <xs:enumeration value="Industrial" />
            <xs:enumeration value="Spacer" />
            <xs:enumeration value="Ultra" />
            <xs:enumeration value="Archotech" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="weaponClasses">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="weaponTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="techHediffsTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="violentTechHediff" type="xs:boolean" />
      <xs:element minOccurs="0" name="destroyOnDrop" type="xs:boolean" />
      <xs:element minOccurs="0" name="equippedStatOffsets" type="RimWorld.StatModifier" />
      <xs:element minOccurs="0" name="meleeHitSound" type="xs:string" />
      <xs:element minOccurs="0" name="recoilPower" type="xs:float" />
      <xs:element minOccurs="0" name="recoilRelaxation" type="xs:float" />
      <xs:element minOccurs="0" name="rotateInShelves" type="xs:boolean" />
      <xs:element minOccurs="0" name="entityDefToBuild" type="Verse.BuildableDef" />
      <xs:element minOccurs="0" name="projectileWhenLoaded" type="xs:string" />
      <xs:element minOccurs="0" name="ideoBuildingNamerBase" type="xs:string" />
      <xs:element minOccurs="0" name="ingestible" type="RimWorld.IngestibleProperties" />
      <xs:element minOccurs="0" name="filth" type="RimWorld.FilthProperties" />
      <xs:element minOccurs="0" name="gas" type="RimWorld.GasProperties" />
      <xs:element minOccurs="0" name="building" type="RimWorld.BuildingProperties" />
      <xs:element minOccurs="0" name="race" type="Verse.RaceProperties" />
      <xs:element minOccurs="0" name="apparel" type="RimWorld.ApparelProperties" />
      <xs:element minOccurs="0" name="mote" type="Verse.MoteProperties" />
      <xs:element minOccurs="0" name="plant" type="RimWorld.PlantProperties" />
      <xs:element minOccurs="0" name="projectile" type="Verse.ProjectileProperties" />
      <xs:element minOccurs="0" name="stuffProps" type="Verse.StuffProperties" />
      <xs:element minOccurs="0" name="skyfaller" type="Verse.SkyfallerProperties" />
      <xs:element minOccurs="0" name="pawnFlyer" type="Verse.PawnFlyerProperties" />
      <xs:element minOccurs="0" name="ritualFocus" type="Verse.RitualFocusProperties" />
      <xs:element minOccurs="0" name="ingredient" type="RimWorld.IngredientProperties" />
      <xs:element minOccurs="0" name="canBeUsedUnderRoof" type="xs:boolean" />
      <xs:element minOccurs="0" name="statBases" type="RimWorld.StatModifier" />
      <xs:element minOccurs="0" name="passability">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Standable" />
            <xs:enumeration value="PassThroughOnly" />
            <xs:enumeration value="Impassable" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="pathCost" type="xs:int" />
      <xs:element minOccurs="0" name="pathCostIgnoreRepeat" type="xs:boolean" />
      <xs:element minOccurs="0" name="fertility" type="xs:float" />
      <xs:element minOccurs="0" name="costList" type="Verse.ThingDefCountClass" />
      <xs:element minOccurs="0" name="costStuffCount" type="xs:int" />
      <xs:element minOccurs="0" name="stuffCategories">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="stuffCategorySummary" type="xs:string" />
      <xs:element minOccurs="0" name="costListForDifficulty" type="Verse.CostListForDifficulty" />
      <xs:element minOccurs="0" name="placingDraggableDimensions" type="xs:int" />
      <xs:element minOccurs="0" name="clearBuildingArea" type="xs:boolean" />
      <xs:element minOccurs="0" name="defaultPlacingRot" type="Verse.Rot4" />
      <xs:element minOccurs="0" name="resourcesFractionWhenDeconstructed" type="xs:float" />
      <xs:element minOccurs="0" name="blocksAltitudes">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="Terrain" />
                  <xs:enumeration value="TerrainScatter" />
                  <xs:enumeration value="Floor" />
                  <xs:enumeration value="Conduits" />
                  <xs:enumeration value="FloorCoverings" />
                  <xs:enumeration value="FloorEmplacement" />
                  <xs:enumeration value="Filth" />
                  <xs:enumeration value="Zone" />
                  <xs:enumeration value="SmallWire" />
                  <xs:enumeration value="LowPlant" />
                  <xs:enumeration value="MoteLow" />
                  <xs:enumeration value="Shadows" />
                  <xs:enumeration value="DoorMoveable" />
                  <xs:enumeration value="Building" />
                  <xs:enumeration value="BuildingBelowTop" />
                  <xs:enumeration value="BuildingOnTop" />
                  <xs:enumeration value="Item" />
                  <xs:enumeration value="ItemImportant" />
                  <xs:enumeration value="LayingPawn" />
                  <xs:enumeration value="PawnRope" />
                  <xs:enumeration value="Projectile" />
                  <xs:enumeration value="Pawn" />
                  <xs:enumeration value="PawnUnused" />
                  <xs:enumeration value="PawnState" />
                  <xs:enumeration value="Blueprint" />
                  <xs:enumeration value="MoteOverheadLow" />
                  <xs:enumeration value="MoteOverhead" />
                  <xs:enumeration value="Gas" />
                  <xs:enumeration value="Skyfaller" />
                  <xs:enumeration value="Weather" />
                  <xs:enumeration value="LightingOverlay" />
                  <xs:enumeration value="VisEffects" />
                  <xs:enumeration value="FogOfWar" />
                  <xs:enumeration value="WorldClipper" />
                  <xs:enumeration value="MapDataOverlay" />
                  <xs:enumeration value="MetaOverlays" />
                  <xs:enumeration value="_Count" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="dominantStyleCategory" type="xs:string" />
      <xs:element minOccurs="0" name="isAltar" type="xs:boolean" />
      <xs:element minOccurs="0" name="useStuffTerrainAffordance" type="xs:boolean" />
      <xs:element minOccurs="0" name="terrainAffordanceNeeded" type="xs:string" />
      <xs:element minOccurs="0" name="buildingPrerequisites">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="researchPrerequisites">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="constructionSkillPrerequisite" type="xs:int" />
      <xs:element minOccurs="0" name="artisticSkillPrerequisite" type="xs:int" />
      <xs:element minOccurs="0" name="minTechLevelToBuild">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Undefined" />
            <xs:enumeration value="Animal" />
            <xs:enumeration value="Neolithic" />
            <xs:enumeration value="Medieval" />
            <xs:enumeration value="Industrial" />
            <xs:enumeration value="Spacer" />
            <xs:enumeration value="Ultra" />
            <xs:enumeration value="Archotech" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="maxTechLevelToBuild">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Undefined" />
            <xs:enumeration value="Animal" />
            <xs:enumeration value="Neolithic" />
            <xs:enumeration value="Medieval" />
            <xs:enumeration value="Industrial" />
            <xs:enumeration value="Spacer" />
            <xs:enumeration value="Ultra" />
            <xs:enumeration value="Archotech" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="altitudeLayer">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Terrain" />
            <xs:enumeration value="TerrainScatter" />
            <xs:enumeration value="Floor" />
            <xs:enumeration value="Conduits" />
            <xs:enumeration value="FloorCoverings" />
            <xs:enumeration value="FloorEmplacement" />
            <xs:enumeration value="Filth" />
            <xs:enumeration value="Zone" />
            <xs:enumeration value="SmallWire" />
            <xs:enumeration value="LowPlant" />
            <xs:enumeration value="MoteLow" />
            <xs:enumeration value="Shadows" />
            <xs:enumeration value="DoorMoveable" />
            <xs:enumeration value="Building" />
            <xs:enumeration value="BuildingBelowTop" />
            <xs:enumeration value="BuildingOnTop" />
            <xs:enumeration value="Item" />
            <xs:enumeration value="ItemImportant" />
            <xs:enumeration value="LayingPawn" />
            <xs:enumeration value="PawnRope" />
            <xs:enumeration value="Projectile" />
            <xs:enumeration value="Pawn" />
            <xs:enumeration value="PawnUnused" />
            <xs:enumeration value="PawnState" />
            <xs:enumeration value="Blueprint" />
            <xs:enumeration value="MoteOverheadLow" />
            <xs:enumeration value="MoteOverhead" />
            <xs:enumeration value="Gas" />
            <xs:enumeration value="Skyfaller" />
            <xs:enumeration value="Weather" />
            <xs:enumeration value="LightingOverlay" />
            <xs:enumeration value="VisEffects" />
            <xs:enumeration value="FogOfWar" />
            <xs:enumeration value="WorldClipper" />
            <xs:enumeration value="MapDataOverlay" />
            <xs:enumeration value="MetaOverlays" />
            <xs:enumeration value="_Count" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="repairEffect" type="xs:string" />
      <xs:element minOccurs="0" name="constructEffect" type="xs:string" />
      <xs:element minOccurs="0" name="colorPerStuff">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.ColorForStuff" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="canGenerateDefaultDesignator" type="xs:boolean" />
      <xs:element minOccurs="0" name="ideoBuilding" type="xs:boolean" />
      <xs:element minOccurs="0" name="specialDisplayRadius" type="xs:float" />
      <xs:element minOccurs="0" name="placeWorkers">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="designationCategory" type="xs:string" />
      <xs:element minOccurs="0" name="designatorDropdown" type="xs:string" />
      <xs:element minOccurs="0" name="designationHotKey" type="xs:string" />
      <xs:element minOccurs="0" name="uiOrder" type="xs:float" />
      <xs:element minOccurs="0" name="uiIconPath" type="xs:string" />
      <xs:element minOccurs="0" name="uiIconPathsStuff">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.IconForStuffAppearance" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="uiIconOffset" type="UnityEngine.Vector2" />
      <xs:element minOccurs="0" name="uiIconColor" type="UnityEngine.Color" />
      <xs:element minOccurs="0" name="uiIconForStackCount" type="xs:int" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.CompProperties">
    <xs:all>
      <xs:element minOccurs="0" name="compClass" type="xs:string" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.DamageMultiplier">
    <xs:all>
      <xs:element minOccurs="0" name="damageDef" type="xs:string" />
      <xs:element minOccurs="0" name="multiplier" type="xs:float" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.RecipeMakerProperties">
    <xs:all>
      <xs:element minOccurs="0" name="productCount" type="xs:int" />
      <xs:element minOccurs="0" name="targetCountAdjustment" type="xs:int" />
      <xs:element minOccurs="0" name="bulkRecipeCount" type="xs:int" />
      <xs:element minOccurs="0" name="useIngredientsForColor" type="xs:boolean" />
      <xs:element minOccurs="0" name="workAmount" type="xs:int" />
      <xs:element minOccurs="0" name="workSpeedStat" type="xs:string" />
      <xs:element minOccurs="0" name="efficiencyStat" type="xs:string" />
      <xs:element minOccurs="0" name="unfinishedThingDef" type="xs:string" />
      <xs:element minOccurs="0" name="defaultIngredientFilter" type="Verse.ThingFilter" />
      <xs:element minOccurs="0" name="skillRequirements" type="Verse.SkillRequirement" />
      <xs:element minOccurs="0" name="workSkill" type="xs:string" />
      <xs:element minOccurs="0" name="workSkillLearnPerTick" type="xs:float" />
      <xs:element minOccurs="0" name="requiredGiverWorkType" type="xs:string" />
      <xs:element minOccurs="0" name="effectWorking" type="xs:string" />
      <xs:element minOccurs="0" name="soundWorking" type="xs:string" />
      <xs:element minOccurs="0" name="recipeUsers">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="researchPrerequisite" type="xs:string" />
      <xs:element minOccurs="0" name="memePrerequisitesAny">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="researchPrerequisites">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="factionPrerequisiteTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="mechanitorOnlyRecipe" type="xs:boolean" />
      <xs:element minOccurs="0" name="fromIdeoBuildingPreceptOnly" type="xs:boolean" />
      <xs:element minOccurs="0" name="displayPriority" type="xs:int" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.ColorGenerator">
    <xs:all />
  </xs:complexType>
  <xs:complexType name="Verse.ThingStyleChance">
    <xs:all />
  </xs:complexType>
  <xs:complexType name="RimWorld.IngestibleProperties">
    <xs:all>
      <xs:element minOccurs="0" name="maxNumToIngestAtOnce" type="xs:int" />
      <xs:element minOccurs="0" name="outcomeDoers">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="RimWorld.IngestionOutcomeDoer" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="baseIngestTicks" type="xs:int" />
      <xs:element minOccurs="0" name="chairSearchRadius" type="xs:float" />
      <xs:element minOccurs="0" name="useEatingSpeedStat" type="xs:boolean" />
      <xs:element minOccurs="0" name="babiesCanIngest" type="xs:boolean" />
      <xs:element minOccurs="0" name="tasteThought" type="xs:string" />
      <xs:element minOccurs="0" name="specialThoughtDirect" type="xs:string" />
      <xs:element minOccurs="0" name="specialThoughtAsIngredient" type="xs:string" />
      <xs:element minOccurs="0" name="ateEvent" type="xs:string" />
      <xs:element minOccurs="0" name="ingestEffect" type="xs:string" />
      <xs:element minOccurs="0" name="ingestEffectEat" type="xs:string" />
      <xs:element minOccurs="0" name="ingestSound" type="xs:string" />
      <xs:element minOccurs="0" name="ingestCommandString" type="xs:string" />
      <xs:element minOccurs="0" name="ingestReportString" type="xs:string" />
      <xs:element minOccurs="0" name="ingestReportStringEat" type="xs:string" />
      <xs:element minOccurs="0" name="ingestHoldOffsetStanding" type="RimWorld.HoldOffsetSet" />
      <xs:element minOccurs="0" name="ingestHoldUsesTable" type="xs:boolean" />
      <xs:element minOccurs="0" name="tableDesired" type="xs:boolean" />
      <xs:element minOccurs="0" name="foodType">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="None" />
                  <xs:enumeration value="VegetableOrFruit" />
                  <xs:enumeration value="Meat" />
                  <xs:enumeration value="Fluid" />
                  <xs:enumeration value="Corpse" />
                  <xs:enumeration value="Seed" />
                  <xs:enumeration value="AnimalProduct" />
                  <xs:enumeration value="Plant" />
                  <xs:enumeration value="Tree" />
                  <xs:enumeration value="Meal" />
                  <xs:enumeration value="Processed" />
                  <xs:enumeration value="Liquor" />
                  <xs:enumeration value="Kibble" />
                  <xs:enumeration value="Fungus" />
                  <xs:enumeration value="VegetarianAnimal" />
                  <xs:enumeration value="VegetarianRoughAnimal" />
                  <xs:enumeration value="CarnivoreAnimal" />
                  <xs:enumeration value="CarnivoreAnimalStrict" />
                  <xs:enumeration value="OmnivoreAnimal" />
                  <xs:enumeration value="OmnivoreRoughAnimal" />
                  <xs:enumeration value="DendrovoreAnimal" />
                  <xs:enumeration value="OvivoreAnimal" />
                  <xs:enumeration value="OmnivoreHuman" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="joy" type="xs:float" />
      <xs:element minOccurs="0" name="joyKind" type="xs:string" />
      <xs:element minOccurs="0" name="sourceDef" type="xs:string" />
      <xs:element minOccurs="0" name="preferability">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Undefined" />
            <xs:enumeration value="NeverForNutrition" />
            <xs:enumeration value="DesperateOnly" />
            <xs:enumeration value="DesperateOnlyForHumanlikes" />
            <xs:enumeration value="RawBad" />
            <xs:enumeration value="RawTasty" />
            <xs:enumeration value="MealTerrible" />
            <xs:enumeration value="MealAwful" />
            <xs:enumeration value="MealSimple" />
            <xs:enumeration value="MealFine" />
            <xs:enumeration value="MealLavish" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="nurseable" type="xs:boolean" />
      <xs:element minOccurs="0" name="optimalityOffsetHumanlikes" type="xs:float" />
      <xs:element minOccurs="0" name="optimalityOffsetFeedingAnimals" type="xs:float" />
      <xs:element minOccurs="0" name="drugCategory">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="None" />
            <xs:enumeration value="Medical" />
            <xs:enumeration value="Social" />
            <xs:enumeration value="Hard" />
            <xs:enumeration value="Any" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="canAutoSelectAsFoodForCaravan" type="xs:boolean" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.IngestionOutcomeDoer">
    <xs:all>
      <xs:element minOccurs="0" name="chance" type="xs:float" />
      <xs:element minOccurs="0" name="doToGeneratedPawnIfAddicted" type="xs:boolean" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.HoldOffsetSet">
    <xs:all>
      <xs:element minOccurs="0" name="northDefault" type="RimWorld.HoldOffset" />
      <xs:element minOccurs="0" name="east" type="RimWorld.HoldOffset" />
      <xs:element minOccurs="0" name="south" type="RimWorld.HoldOffset" />
      <xs:element minOccurs="0" name="west" type="RimWorld.HoldOffset" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.HoldOffset">
    <xs:all>
      <xs:element minOccurs="0" name="offset" type="UnityEngine.Vector3" />
      <xs:element minOccurs="0" name="flip" type="xs:boolean" />
      <xs:element minOccurs="0" name="behind" type="xs:boolean" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.FilthProperties">
    <xs:all>
      <xs:element minOccurs="0" name="cleaningWorkToReduceThickness" type="xs:float" />
      <xs:element minOccurs="0" name="canFilthAttach" type="xs:boolean" />
      <xs:element minOccurs="0" name="rainWashes" type="xs:boolean" />
      <xs:element minOccurs="0" name="allowsFire" type="xs:boolean" />
      <xs:element minOccurs="0" name="ignoreFilthMultiplierStat" type="xs:boolean" />
      <xs:element minOccurs="0" name="maxThickness" type="xs:int" />
      <xs:element minOccurs="0" name="disappearsInDays" type="Verse.FloatRange" />
      <xs:element minOccurs="0" name="placementMask">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="None" />
                  <xs:enumeration value="Terrain" />
                  <xs:enumeration value="Natural" />
                  <xs:enumeration value="Unnatural" />
                  <xs:enumeration value="Pawn" />
                  <xs:enumeration value="Any" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="cleaningSound" type="xs:string" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.GasProperties">
    <xs:all>
      <xs:element minOccurs="0" name="expireSeconds" type="Verse.FloatRange" />
      <xs:element minOccurs="0" name="rotationSpeed" type="xs:float" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.BuildingProperties">
    <xs:all>
      <xs:element minOccurs="0" name="isEdifice" type="xs:boolean" />
      <xs:element minOccurs="0" name="buildingTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="isInert" type="xs:boolean" />
      <xs:element minOccurs="0" name="alwaysDeconstructible" type="xs:boolean" />
      <xs:element minOccurs="0" name="claimable" type="xs:boolean" />
      <xs:element minOccurs="0" name="isSittable" type="xs:boolean" />
      <xs:element minOccurs="0" name="multiSittable" type="xs:boolean" />
      <xs:element minOccurs="0" name="sitIgnoreOrientation" type="xs:boolean" />
      <xs:element minOccurs="0" name="soundAmbient" type="xs:string" />
      <xs:element minOccurs="0" name="spawnedConceptLearnOpportunity" type="xs:string" />
      <xs:element minOccurs="0" name="boughtConceptLearnOpportunity" type="xs:string" />
      <xs:element minOccurs="0" name="expandHomeArea" type="xs:boolean" />
      <xs:element minOccurs="0" name="blueprintClass" type="xs:string" />
      <xs:element minOccurs="0" name="blueprintGraphicData" type="Verse.GraphicData" />
      <xs:element minOccurs="0" name="uninstallWork" type="xs:float" />
      <xs:element minOccurs="0" name="forceShowRoomStats" type="xs:boolean" />
      <xs:element minOccurs="0" name="wantsHopperAdjacent" type="xs:boolean" />
      <xs:element minOccurs="0" name="allowWireConnection" type="xs:boolean" />
      <xs:element minOccurs="0" name="shipPart" type="xs:boolean" />
      <xs:element minOccurs="0" name="canPlaceOverImpassablePlant" type="xs:boolean" />
      <xs:element minOccurs="0" name="heatPerTickWhileWorking" type="xs:float" />
      <xs:element minOccurs="0" name="canBuildNonEdificesUnder" type="xs:boolean" />
      <xs:element minOccurs="0" name="canPlaceOverWall" type="xs:boolean" />
      <xs:element minOccurs="0" name="isPlaceOverableWall" type="xs:boolean" />
      <xs:element minOccurs="0" name="allowAutoroof" type="xs:boolean" />
      <xs:element minOccurs="0" name="preventDeteriorationOnTop" type="xs:boolean" />
      <xs:element minOccurs="0" name="preventDeteriorationInside" type="xs:boolean" />
      <xs:element minOccurs="0" name="isMealSource" type="xs:boolean" />
      <xs:element minOccurs="0" name="isNaturalRock" type="xs:boolean" />
      <xs:element minOccurs="0" name="isResourceRock" type="xs:boolean" />
      <xs:element minOccurs="0" name="repairable" type="xs:boolean" />
      <xs:element minOccurs="0" name="roofCollapseDamageMultiplier" type="xs:float" />
      <xs:element minOccurs="0" name="hasFuelingPort" type="xs:boolean" />
      <xs:element minOccurs="0" name="smoothedThing" type="xs:string" />
      <xs:element minOccurs="0" name="naturalTerrain" type="xs:string" />
      <xs:element minOccurs="0" name="leaveTerrain" type="xs:string" />
      <xs:element minOccurs="0" name="combatPower" type="xs:float" />
      <xs:element minOccurs="0" name="minMechClusterPoints" type="xs:int" />
      <xs:element minOccurs="0" name="destroyShakeAmount" type="xs:float" />
      <xs:element minOccurs="0" name="destroySound" type="xs:string" />
      <xs:element minOccurs="0" name="destroyEffecter" type="xs:string" />
      <xs:element minOccurs="0" name="buildingSizeCategory">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="None" />
            <xs:enumeration value="Small" />
            <xs:enumeration value="Medium" />
            <xs:enumeration value="Large" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="isFence" type="xs:boolean" />
      <xs:element minOccurs="0" name="relatedBuildCommands">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="alwaysShowRelatedBuildCommands" type="xs:boolean" />
      <xs:element minOccurs="0" name="useIdeoColor" type="xs:boolean" />
      <xs:element minOccurs="0" name="wakeDormantPawnsOnConstruction" type="xs:boolean" />
      <xs:element minOccurs="0" name="maxItemsInCell" type="xs:int" />
      <xs:element minOccurs="0" name="paintable" type="xs:boolean" />
      <xs:element minOccurs="0" name="isPlayerEjectable" type="xs:boolean" />
      <xs:element minOccurs="0" name="openingStartedSound" type="xs:string" />
      <xs:element minOccurs="0" name="fullGraveGraphicData" type="Verse.GraphicData" />
      <xs:element minOccurs="0" name="bed_healPerDay" type="xs:float" />
      <xs:element minOccurs="0" name="bed_defaultMedical" type="xs:boolean" />
      <xs:element minOccurs="0" name="bed_showSleeperBody" type="xs:boolean" />
      <xs:element minOccurs="0" name="bed_humanlike" type="xs:boolean" />
      <xs:element minOccurs="0" name="bed_maxBodySize" type="xs:float" />
      <xs:element minOccurs="0" name="bed_caravansCanUse" type="xs:boolean" />
      <xs:element minOccurs="0" name="bed_slabBed" type="xs:boolean" />
      <xs:element minOccurs="0" name="bed_crib" type="xs:boolean" />
      <xs:element minOccurs="0" name="bed_pawnDrawOffset" type="xs:float" />
      <xs:element minOccurs="0" name="bed_canBeMedical" type="xs:boolean" />
      <xs:element minOccurs="0" name="bed_DisplayOwnerType" type="xs:boolean" />
      <xs:element minOccurs="0" name="bed_DisplayOwnersInInspectString" type="xs:boolean" />
      <xs:element minOccurs="0" name="bed_countsForBedroomOrBarracks" type="xs:boolean" />
      <xs:element minOccurs="0" name="bed_emptyCountsForBarracks" type="xs:boolean" />
      <xs:element minOccurs="0" name="nutritionCostPerDispense" type="xs:float" />
      <xs:element minOccurs="0" name="soundDispense" type="xs:string" />
      <xs:element minOccurs="0" name="turretGunDef" type="xs:string" />
      <xs:element minOccurs="0" name="turretBurstWarmupTime" type="Verse.FloatRange" />
      <xs:element minOccurs="0" name="turretBurstCooldownTime" type="xs:float" />
      <xs:element minOccurs="0" name="turretInitialCooldownTime" type="xs:float" />
      <xs:element minOccurs="0" name="turretTopDrawSize" type="xs:float" />
      <xs:element minOccurs="0" name="turretTopOffset" type="UnityEngine.Vector2" />
      <xs:element minOccurs="0" name="playTargetAcquiredSound" type="xs:boolean" />
      <xs:element minOccurs="0" name="turretTopLoadedGraphic" type="Verse.GraphicData" />
      <xs:element minOccurs="0" name="requiredMechWeightClasses">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="Light" />
                  <xs:enumeration value="Medium" />
                  <xs:enumeration value="Heavy" />
                  <xs:enumeration value="UltraHeavy" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="ai_combatDangerous" type="xs:boolean" />
      <xs:element minOccurs="0" name="ai_chillDestination" type="xs:boolean" />
      <xs:element minOccurs="0" name="ai_neverTrashThis" type="xs:boolean" />
      <xs:element minOccurs="0" name="roamerCanOpen" type="xs:boolean" />
      <xs:element minOccurs="0" name="soundDoorOpenPowered" type="xs:string" />
      <xs:element minOccurs="0" name="soundDoorClosePowered" type="xs:string" />
      <xs:element minOccurs="0" name="soundDoorOpenManual" type="xs:string" />
      <xs:element minOccurs="0" name="soundDoorCloseManual" type="xs:string" />
      <xs:element minOccurs="0" name="sowTag" type="xs:string" />
      <xs:element minOccurs="0" name="defaultPlantToGrow" type="xs:string" />
      <xs:element minOccurs="0" name="mineableThing" type="xs:string" />
      <xs:element minOccurs="0" name="mineableYield" type="xs:int" />
      <xs:element minOccurs="0" name="mineableNonMinedEfficiency" type="xs:float" />
      <xs:element minOccurs="0" name="mineableDropChance" type="xs:float" />
      <xs:element minOccurs="0" name="mineableYieldWasteable" type="xs:boolean" />
      <xs:element minOccurs="0" name="mineableScatterCommonality" type="xs:float" />
      <xs:element minOccurs="0" name="mineableScatterLumpSizeRange" type="Verse.IntRange" />
      <xs:element minOccurs="0" name="fixedStorageSettings" type="RimWorld.StorageSettings" />
      <xs:element minOccurs="0" name="defaultStorageSettings" type="RimWorld.StorageSettings" />
      <xs:element minOccurs="0" name="ignoreStoredThingsBeauty" type="xs:boolean" />
      <xs:element minOccurs="0" name="storageGroupTag" type="xs:string" />
      <xs:element minOccurs="0" name="isTrap" type="xs:boolean" />
      <xs:element minOccurs="0" name="trapDestroyOnSpring" type="xs:boolean" />
      <xs:element minOccurs="0" name="trapPeacefulWildAnimalsSpringChanceFactor" type="xs:float" />
      <xs:element minOccurs="0" name="trapDamageCategory" type="xs:string" />
      <xs:element minOccurs="0" name="trapUnarmedGraphicData" type="Verse.GraphicData" />
      <xs:element minOccurs="0" name="unpoweredWorkTableWorkSpeedFactor" type="xs:float" />
      <xs:element minOccurs="0" name="workTableCompleteSoundDef" type="xs:string" />
      <xs:element minOccurs="0" name="watchBuildingStandDistanceRange" type="Verse.IntRange" />
      <xs:element minOccurs="0" name="watchBuildingStandRectWidth" type="xs:int" />
      <xs:element minOccurs="0" name="watchBuildingInSameRoom" type="xs:boolean" />
      <xs:element minOccurs="0" name="joyKind" type="xs:string" />
      <xs:element minOccurs="0" name="haulToContainerDuration" type="xs:int" />
      <xs:element minOccurs="0" name="instrumentRange" type="xs:float" />
      <xs:element minOccurs="0" name="minDistanceToSameTypeOfBuilding" type="xs:int" />
      <xs:element minOccurs="0" name="artificialForMeditationPurposes" type="xs:boolean" />
      <xs:element minOccurs="0" name="effectWatching" type="xs:string" />
      <xs:element minOccurs="0" name="gibbetCageTopGraphicData" type="Verse.GraphicData" />
      <xs:element minOccurs="0" name="gibbetCorposeDrawOffset" type="UnityEngine.Vector3" />
      <xs:element minOccurs="0" name="gibbetCagePlaceCorpseEffecter" type="xs:string" />
      <xs:element minOccurs="0" name="openingEffect" type="xs:string" />
      <xs:element minOccurs="0" name="barDrawData" type="RimWorld.FillableBarRequestWithRotation" />
      <xs:element minOccurs="0" name="gestatorFormingMote" type="RimWorld.MoteForRotationData" />
      <xs:element minOccurs="0" name="gestatorCycleCompleteMote" type="RimWorld.MoteForRotationData" />
      <xs:element minOccurs="0" name="gestatorFormedMote" type="RimWorld.MoteForRotationData" />
      <xs:element minOccurs="0" name="mechGestatorCylinderGraphic" type="Verse.GraphicData" />
      <xs:element minOccurs="0" name="mechGestatorTopGraphic" type="Verse.GraphicData" />
      <xs:element minOccurs="0" name="formingGraphicData" type="Verse.GraphicData" />
      <xs:element minOccurs="0" name="formingMechBobSpeed" type="xs:float" />
      <xs:element minOccurs="0" name="formingMechYBobDistance" type="xs:float" />
      <xs:element minOccurs="0" name="formingMechPerRotationOffset">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="UnityEngine.Vector3" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="maxFormedMechDrawSize" type="UnityEngine.Vector2" />
      <xs:element minOccurs="0" name="subcoreScannerFixedIngredients">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.IngredientCount" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="subcoreScannerTicks" type="xs:int" />
      <xs:element minOccurs="0" name="subcoreScannerHediff" type="xs:string" />
      <xs:element minOccurs="0" name="destroyBrain" type="xs:boolean" />
      <xs:element minOccurs="0" name="subcoreScannerOutputDef" type="xs:string" />
      <xs:element minOccurs="0" name="subcoreScannerStartEffect" type="xs:string" />
      <xs:element minOccurs="0" name="subcoreScannerWorking" type="xs:string" />
      <xs:element minOccurs="0" name="subcoreScannerComplete" type="xs:string" />
      <xs:element minOccurs="0" name="isInsectCocoon" type="xs:boolean" />
      <xs:element minOccurs="0" name="wastepackAtomizerBottomGraphic" type="Verse.GraphicData" />
      <xs:element minOccurs="0" name="wastepackAtomizerWindowGraphic" type="Verse.GraphicData" />
      <xs:element minOccurs="0" name="wastepackAtomizerOperationEffecter" type="xs:string" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.StorageSettings">
    <xs:all>
      <xs:element minOccurs="0" name="filter" type="Verse.ThingFilter" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.FillableBarRequestWithRotation">
    <xs:all>
      <xs:element minOccurs="0" name="north" type="Verse.GenDraw.FillableBarRequest" />
      <xs:element minOccurs="0" name="south" type="Verse.GenDraw.FillableBarRequest" />
      <xs:element minOccurs="0" name="east" type="Verse.GenDraw.FillableBarRequest" />
      <xs:element minOccurs="0" name="west" type="Verse.GenDraw.FillableBarRequest" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.GenDraw.FillableBarRequest">
    <xs:all>
      <xs:element minOccurs="0" name="center" type="UnityEngine.Vector3" />
      <xs:element minOccurs="0" name="size" type="UnityEngine.Vector2" />
      <xs:element minOccurs="0" name="fillPercent" type="xs:float" />
      <xs:element minOccurs="0" name="filledMat" type="UnityEngine.Material" />
      <xs:element minOccurs="0" name="unfilledMat" type="UnityEngine.Material" />
      <xs:element minOccurs="0" name="margin" type="xs:float" />
      <xs:element minOccurs="0" name="rotation" type="Verse.Rot4" />
      <xs:element minOccurs="0" name="preRotationOffset" type="UnityEngine.Vector2" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.MoteForRotationData">
    <xs:all>
      <xs:element minOccurs="0" name="north" type="xs:string" />
      <xs:element minOccurs="0" name="south" type="xs:string" />
      <xs:element minOccurs="0" name="east" type="xs:string" />
      <xs:element minOccurs="0" name="west" type="xs:string" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.RaceProperties">
    <xs:all>
      <xs:element minOccurs="0" name="intelligence">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Animal" />
            <xs:enumeration value="ToolUser" />
            <xs:enumeration value="Humanlike" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="hasGenders" type="xs:boolean" />
      <xs:element minOccurs="0" name="needsRest" type="xs:boolean" />
      <xs:element minOccurs="0" name="thinkTreeMain" type="xs:string" />
      <xs:element minOccurs="0" name="thinkTreeConstant" type="xs:string" />
      <xs:element minOccurs="0" name="dutyBoss" type="xs:string" />
      <xs:element minOccurs="0" name="nameCategory">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="NoName" />
            <xs:enumeration value="HumanStandard" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="foodType">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="None" />
                  <xs:enumeration value="VegetableOrFruit" />
                  <xs:enumeration value="Meat" />
                  <xs:enumeration value="Fluid" />
                  <xs:enumeration value="Corpse" />
                  <xs:enumeration value="Seed" />
                  <xs:enumeration value="AnimalProduct" />
                  <xs:enumeration value="Plant" />
                  <xs:enumeration value="Tree" />
                  <xs:enumeration value="Meal" />
                  <xs:enumeration value="Processed" />
                  <xs:enumeration value="Liquor" />
                  <xs:enumeration value="Kibble" />
                  <xs:enumeration value="Fungus" />
                  <xs:enumeration value="VegetarianAnimal" />
                  <xs:enumeration value="VegetarianRoughAnimal" />
                  <xs:enumeration value="CarnivoreAnimal" />
                  <xs:enumeration value="CarnivoreAnimalStrict" />
                  <xs:enumeration value="OmnivoreAnimal" />
                  <xs:enumeration value="OmnivoreRoughAnimal" />
                  <xs:enumeration value="DendrovoreAnimal" />
                  <xs:enumeration value="OvivoreAnimal" />
                  <xs:enumeration value="OmnivoreHuman" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="body" type="xs:string" />
      <xs:element minOccurs="0" name="deathActionWorkerClass" type="xs:string" />
      <xs:element minOccurs="0" name="wildBiomes" type="RimWorld.AnimalBiomeRecord" />
      <xs:element minOccurs="0" name="ageGenerationCurve" type="Verse.SimpleCurve" />
      <xs:element minOccurs="0" name="makesFootprints" type="xs:boolean" />
      <xs:element minOccurs="0" name="executionRange" type="xs:int" />
      <xs:element minOccurs="0" name="lifeExpectancy" type="xs:float" />
      <xs:element minOccurs="0" name="hediffGiverSets">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="roamMtbDays" type="xs:float" />
      <xs:element minOccurs="0" name="allowedOnCaravan" type="xs:boolean" />
      <xs:element minOccurs="0" name="canReleaseToWild" type="xs:boolean" />
      <xs:element minOccurs="0" name="playerCanChangeMaster" type="xs:boolean" />
      <xs:element minOccurs="0" name="showTrainables" type="xs:boolean" />
      <xs:element minOccurs="0" name="hideTrainingTab" type="xs:boolean" />
      <xs:element minOccurs="0" name="herdAnimal" type="xs:boolean" />
      <xs:element minOccurs="0" name="packAnimal" type="xs:boolean" />
      <xs:element minOccurs="0" name="predator" type="xs:boolean" />
      <xs:element minOccurs="0" name="maxPreyBodySize" type="xs:float" />
      <xs:element minOccurs="0" name="wildness" type="xs:float" />
      <xs:element minOccurs="0" name="petness" type="xs:float" />
      <xs:element minOccurs="0" name="nuzzleMtbHours" type="xs:float" />
      <xs:element minOccurs="0" name="manhunterOnDamageChance" type="xs:float" />
      <xs:element minOccurs="0" name="manhunterOnTameFailChance" type="xs:float" />
      <xs:element minOccurs="0" name="canBePredatorPrey" type="xs:boolean" />
      <xs:element minOccurs="0" name="herdMigrationAllowed" type="xs:boolean" />
      <xs:element minOccurs="0" name="animalType">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="None" />
            <xs:enumeration value="Canine" />
            <xs:enumeration value="Dryad" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="willNeverEat">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="giveNonToolUserBeatFireVerb" type="xs:boolean" />
      <xs:element minOccurs="0" name="disableAreaControl" type="xs:boolean" />
      <xs:element minOccurs="0" name="maxMechEnergy" type="xs:int" />
      <xs:element minOccurs="0" name="mechEnabledWorkTypes">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="mechFixedSkillLevel" type="xs:int" />
      <xs:element minOccurs="0" name="mechWorkTypePriorities" type="Verse.MechWorkTypePriority" />
      <xs:element minOccurs="0" name="bulletStaggerDelayTicks" type="xs:int" />
      <xs:element minOccurs="0" name="bulletStaggerSpeedFactor" type="xs:float" />
      <xs:element minOccurs="0" name="bulletStaggerEffecterDef" type="xs:string" />
      <xs:element minOccurs="0" name="bulletStaggerIgnoreBodySize" type="xs:boolean" />
      <xs:element minOccurs="0" name="mechWeightClass">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Light" />
            <xs:enumeration value="Medium" />
            <xs:enumeration value="Heavy" />
            <xs:enumeration value="UltraHeavy" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="gestationPeriodDays" type="xs:float" />
      <xs:element minOccurs="0" name="litterSizeCurve" type="Verse.SimpleCurve" />
      <xs:element minOccurs="0" name="mateMtbHours" type="xs:float" />
      <xs:element minOccurs="0" name="untrainableTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="trainableTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="trainability" type="xs:string" />
      <xs:element minOccurs="0" name="nameOnTameChance" type="xs:float" />
      <xs:element minOccurs="0" name="baseBodySize" type="xs:float" />
      <xs:element minOccurs="0" name="baseHealthScale" type="xs:float" />
      <xs:element minOccurs="0" name="baseHungerRate" type="xs:float" />
      <xs:element minOccurs="0" name="lifeStageAges">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.LifeStageAge" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="lifeStageWorkSettings" type="Verse.LifeStageWorkSettings" />
      <xs:element minOccurs="0" name="meatLabel" type="xs:string" />
      <xs:element minOccurs="0" name="meatColor" type="UnityEngine.Color" />
      <xs:element minOccurs="0" name="meatMarketValue" type="xs:float" />
      <xs:element minOccurs="0" name="specificMeatDef" type="xs:string" />
      <xs:element minOccurs="0" name="useMeatFrom" type="xs:string" />
      <xs:element minOccurs="0" name="useLeatherFrom" type="xs:string" />
      <xs:element minOccurs="0" name="leatherDef" type="xs:string" />
      <xs:element minOccurs="0" name="specialShadowData" type="Verse.ShadowData" />
      <xs:element minOccurs="0" name="headPosPerRotation">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="UnityEngine.Vector3" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="soundCallIntervalRange" type="Verse.IntRange" />
      <xs:element minOccurs="0" name="soundCallIntervalFriendlyFactor" type="xs:float" />
      <xs:element minOccurs="0" name="soundCallIntervalAggressiveFactor" type="xs:float" />
      <xs:element minOccurs="0" name="soundMeleeHitPawn" type="xs:string" />
      <xs:element minOccurs="0" name="soundMeleeHitBuilding" type="xs:string" />
      <xs:element minOccurs="0" name="soundMeleeMiss" type="xs:string" />
      <xs:element minOccurs="0" name="soundMeleeDodge" type="xs:string" />
      <xs:element minOccurs="0" name="soundAmbience" type="xs:string" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.AnimalBiomeRecord">
    <xs:sequence>
      <xs:any minOccurs="0" processContents="skip" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Verse.MechWorkTypePriority">
    <xs:sequence>
      <xs:any minOccurs="0" processContents="skip" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Verse.LifeStageAge">
    <xs:all>
      <xs:element minOccurs="0" name="def" type="xs:string" />
      <xs:element minOccurs="0" name="minAge" type="xs:float" />
      <xs:element minOccurs="0" name="soundCall" type="xs:string" />
      <xs:element minOccurs="0" name="soundAngry" type="xs:string" />
      <xs:element minOccurs="0" name="soundWounded" type="xs:string" />
      <xs:element minOccurs="0" name="soundDeath" type="xs:string" />
      <xs:element minOccurs="0" name="soundAmbience" type="xs:string" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.LifeStageWorkSettings">
    <xs:sequence>
      <xs:any minOccurs="0" processContents="skip" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="RimWorld.ApparelProperties">
    <xs:all>
      <xs:element minOccurs="0" name="bodyPartGroups">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="layers">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="wornGraphicPath" type="xs:string" />
      <xs:element minOccurs="0" name="wornGraphicPaths">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="wornGraphicData" type="RimWorld.WornGraphicData" />
      <xs:element minOccurs="0" name="useWornGraphicMask" type="xs:boolean" />
      <xs:element minOccurs="0" name="tags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="defaultOutfitTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="canBeGeneratedToSatisfyWarmth" type="xs:boolean" />
      <xs:element minOccurs="0" name="canBeGeneratedToSatisfyToxicEnvironmentResistance" type="xs:boolean" />
      <xs:element minOccurs="0" name="canBeDesiredForIdeo" type="xs:boolean" />
      <xs:element minOccurs="0" name="ideoDesireAllowedFactionCategoryTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="ideoDesireDisallowedFactionCategoryTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="wearPerDay" type="xs:float" />
      <xs:element minOccurs="0" name="careIfWornByCorpse" type="xs:boolean" />
      <xs:element minOccurs="0" name="careIfDamaged" type="xs:boolean" />
      <xs:element minOccurs="0" name="ignoredByNonViolent" type="xs:boolean" />
      <xs:element minOccurs="0" name="ai_pickUpOpportunistically" type="xs:boolean" />
      <xs:element minOccurs="0" name="hatRenderedFrontOfFace" type="xs:boolean" />
      <xs:element minOccurs="0" name="hatRenderedAboveBody" type="xs:boolean" />
      <xs:element minOccurs="0" name="hatRenderedBehindHead" type="xs:boolean" />
      <xs:element minOccurs="0" name="shellRenderedBehindHead" type="xs:boolean" />
      <xs:element minOccurs="0" name="forceRenderUnderHair" type="xs:boolean" />
      <xs:element minOccurs="0" name="coversHeadMiddle" type="xs:boolean" />
      <xs:element minOccurs="0" name="shellCoversHead" type="xs:boolean" />
      <xs:element minOccurs="0" name="blocksAddedPartWoundGraphics" type="xs:boolean" />
      <xs:element minOccurs="0" name="blocksVision" type="xs:boolean" />
      <xs:element minOccurs="0" name="immuneToToxGasExposure" type="xs:boolean" />
      <xs:element minOccurs="0" name="slaveApparel" type="xs:boolean" />
      <xs:element minOccurs="0" name="mechanitorApparel" type="xs:boolean" />
      <xs:element minOccurs="0" name="legsNakedUnlessCoveredBySomethingElse" type="xs:boolean" />
      <xs:element minOccurs="0" name="useDeflectMetalEffect" type="xs:boolean" />
      <xs:element minOccurs="0" name="countsAsClothingForNudity" type="xs:boolean" />
      <xs:element minOccurs="0" name="gender">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="None" />
            <xs:enumeration value="Male" />
            <xs:enumeration value="Female" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="scoreOffset" type="xs:float" />
      <xs:element minOccurs="0" name="developmentalStageFilter">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="None" />
                  <xs:enumeration value="Newborn" />
                  <xs:enumeration value="Baby" />
                  <xs:enumeration value="Child" />
                  <xs:enumeration value="Adult" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="forceEyesVisibleForRotations">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:int" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.WornGraphicData">
    <xs:all>
      <xs:element minOccurs="0" name="renderUtilityAsPack" type="xs:boolean" />
      <xs:element minOccurs="0" name="north" type="RimWorld.WornGraphicDirectionData" />
      <xs:element minOccurs="0" name="south" type="RimWorld.WornGraphicDirectionData" />
      <xs:element minOccurs="0" name="east" type="RimWorld.WornGraphicDirectionData" />
      <xs:element minOccurs="0" name="west" type="RimWorld.WornGraphicDirectionData" />
      <xs:element minOccurs="0" name="male" type="RimWorld.WornGraphicBodyTypeData" />
      <xs:element minOccurs="0" name="female" type="RimWorld.WornGraphicBodyTypeData" />
      <xs:element minOccurs="0" name="thin" type="RimWorld.WornGraphicBodyTypeData" />
      <xs:element minOccurs="0" name="hulk" type="RimWorld.WornGraphicBodyTypeData" />
      <xs:element minOccurs="0" name="fat" type="RimWorld.WornGraphicBodyTypeData" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.WornGraphicDirectionData">
    <xs:all>
      <xs:element minOccurs="0" name="offset" type="UnityEngine.Vector2" />
      <xs:element minOccurs="0" name="scale" type="UnityEngine.Vector2" />
      <xs:element minOccurs="0" name="male" type="RimWorld.WornGraphicBodyTypeData" />
      <xs:element minOccurs="0" name="female" type="RimWorld.WornGraphicBodyTypeData" />
      <xs:element minOccurs="0" name="thin" type="RimWorld.WornGraphicBodyTypeData" />
      <xs:element minOccurs="0" name="hulk" type="RimWorld.WornGraphicBodyTypeData" />
      <xs:element minOccurs="0" name="fat" type="RimWorld.WornGraphicBodyTypeData" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.WornGraphicBodyTypeData">
    <xs:all>
      <xs:element minOccurs="0" name="offset" type="UnityEngine.Vector2" />
      <xs:element minOccurs="0" name="scale" type="UnityEngine.Vector2" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.MoteProperties">
    <xs:all>
      <xs:element minOccurs="0" name="realTime" type="xs:boolean" />
      <xs:element minOccurs="0" name="fadeInTime" type="xs:float" />
      <xs:element minOccurs="0" name="solidTime" type="xs:float" />
      <xs:element minOccurs="0" name="fadeOutTime" type="xs:float" />
      <xs:element minOccurs="0" name="acceleration" type="UnityEngine.Vector3" />
      <xs:element minOccurs="0" name="speedPerTime" type="xs:float" />
      <xs:element minOccurs="0" name="growthRate" type="xs:float" />
      <xs:element minOccurs="0" name="collide" type="xs:boolean" />
      <xs:element minOccurs="0" name="archHeight" type="xs:float" />
      <xs:element minOccurs="0" name="archDuration" type="xs:float" />
      <xs:element minOccurs="0" name="archStartOffset" type="xs:float" />
      <xs:element minOccurs="0" name="landSound" type="xs:string" />
      <xs:element minOccurs="0" name="unattachedDrawOffset" type="UnityEngine.Vector3" />
      <xs:element minOccurs="0" name="attachedDrawOffset" type="UnityEngine.Vector3" />
      <xs:element minOccurs="0" name="needsMaintenance" type="xs:boolean" />
      <xs:element minOccurs="0" name="rotateTowardsTarget" type="xs:boolean" />
      <xs:element minOccurs="0" name="rotateTowardsMoveDirection" type="xs:boolean" />
      <xs:element minOccurs="0" name="scaleToConnectTargets" type="xs:boolean" />
      <xs:element minOccurs="0" name="attachedToHead" type="xs:boolean" />
      <xs:element minOccurs="0" name="fadeOutUnmaintained" type="xs:boolean" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.PlantProperties">
    <xs:all>
      <xs:element minOccurs="0" name="wildBiomes" type="RimWorld.PlantBiomeRecord" />
      <xs:element minOccurs="0" name="wildClusterRadius" type="xs:int" />
      <xs:element minOccurs="0" name="wildClusterWeight" type="xs:float" />
      <xs:element minOccurs="0" name="wildOrder" type="xs:float" />
      <xs:element minOccurs="0" name="wildEqualLocalDistribution" type="xs:boolean" />
      <xs:element minOccurs="0" name="cavePlant" type="xs:boolean" />
      <xs:element minOccurs="0" name="cavePlantWeight" type="xs:float" />
      <xs:element minOccurs="0" name="sowTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="sowWork" type="xs:float" />
      <xs:element minOccurs="0" name="sowMinSkill" type="xs:int" />
      <xs:element minOccurs="0" name="blockAdjacentSow" type="xs:boolean" />
      <xs:element minOccurs="0" name="sowResearchPrerequisites">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="mustBeWildToSow" type="xs:boolean" />
      <xs:element minOccurs="0" name="harvestWork" type="xs:float" />
      <xs:element minOccurs="0" name="harvestYield" type="xs:float" />
      <xs:element minOccurs="0" name="harvestedThingDef" type="xs:string" />
      <xs:element minOccurs="0" name="harvestTag" type="xs:string" />
      <xs:element minOccurs="0" name="harvestMinGrowth" type="xs:float" />
      <xs:element minOccurs="0" name="harvestAfterGrowth" type="xs:float" />
      <xs:element minOccurs="0" name="harvestFailable" type="xs:boolean" />
      <xs:element minOccurs="0" name="harvestYieldAffectedByDifficulty" type="xs:boolean" />
      <xs:element minOccurs="0" name="soundHarvesting" type="xs:string" />
      <xs:element minOccurs="0" name="soundHarvestFinish" type="xs:string" />
      <xs:element minOccurs="0" name="autoHarvestable" type="xs:boolean" />
      <xs:element minOccurs="0" name="skipDeteriorationMessage" type="xs:boolean" />
      <xs:element minOccurs="0" name="growDays" type="xs:float" />
      <xs:element minOccurs="0" name="lifespanDaysPerGrowDays" type="xs:float" />
      <xs:element minOccurs="0" name="growMinGlow" type="xs:float" />
      <xs:element minOccurs="0" name="growOptimalGlow" type="xs:float" />
      <xs:element minOccurs="0" name="pollution">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="CleanOnly" />
            <xs:enumeration value="PollutedOnly" />
            <xs:enumeration value="Any" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="fertilityMin" type="xs:float" />
      <xs:element minOccurs="0" name="fertilitySensitivity" type="xs:float" />
      <xs:element minOccurs="0" name="dieIfLeafless" type="xs:boolean" />
      <xs:element minOccurs="0" name="neverBlightable" type="xs:boolean" />
      <xs:element minOccurs="0" name="interferesWithRoof" type="xs:boolean" />
      <xs:element minOccurs="0" name="dieIfNoSunlight" type="xs:boolean" />
      <xs:element minOccurs="0" name="dieFromToxicFallout" type="xs:boolean" />
      <xs:element minOccurs="0" name="purpose">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Food" />
            <xs:enumeration value="Health" />
            <xs:enumeration value="Beauty" />
            <xs:enumeration value="Misc" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="humanFoodPlant" type="xs:boolean" />
      <xs:element minOccurs="0" name="treeLoversCareIfChopped" type="xs:boolean" />
      <xs:element minOccurs="0" name="allowAutoCut" type="xs:boolean" />
      <xs:element minOccurs="0" name="drugForHarvestPurposes" type="xs:boolean" />
      <xs:element minOccurs="0" name="treeCategory">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="None" />
            <xs:enumeration value="Mini" />
            <xs:enumeration value="Full" />
            <xs:enumeration value="Super" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="burnedThingDef" type="xs:string" />
      <xs:element minOccurs="0" name="choppedThingDef" type="xs:string" />
      <xs:element minOccurs="0" name="smashedThingDef" type="xs:string" />
      <xs:element minOccurs="0" name="canDeteriorate" type="xs:boolean" />
      <xs:element minOccurs="0" name="showGrowthInInspectPane" type="xs:boolean" />
      <xs:element minOccurs="0" name="minSpacingBetweenSamePlant" type="xs:float" />
      <xs:element minOccurs="0" name="forceIsTree" type="xs:boolean" />
      <xs:element minOccurs="0" name="warnIfMarkedForCut" type="xs:boolean" />
      <xs:element minOccurs="0" name="isStump" type="xs:boolean" />
      <xs:element minOccurs="0" name="topWindExposure" type="xs:float" />
      <xs:element minOccurs="0" name="maxMeshCount" type="xs:int" />
      <xs:element minOccurs="0" name="visualSizeRange" type="Verse.FloatRange" />
      <xs:element minOccurs="0" name="dropLeaves" type="xs:boolean" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.PlantBiomeRecord">
    <xs:sequence>
      <xs:any minOccurs="0" processContents="skip" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Verse.ProjectileProperties">
    <xs:all>
      <xs:element minOccurs="0" name="speed" type="xs:float" />
      <xs:element minOccurs="0" name="flyOverhead" type="xs:boolean" />
      <xs:element minOccurs="0" name="alwaysFreeIntercept" type="xs:boolean" />
      <xs:element minOccurs="0" name="damageDef" type="xs:string" />
      <xs:element minOccurs="0" name="stoppingPower" type="xs:float" />
      <xs:element minOccurs="0" name="extraDamages">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.ExtraDamage" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="arcHeightFactor" type="xs:float" />
      <xs:element minOccurs="0" name="shadowSize" type="xs:float" />
      <xs:element minOccurs="0" name="landedEffecter" type="xs:string" />
      <xs:element minOccurs="0" name="soundHitThickRoof" type="xs:string" />
      <xs:element minOccurs="0" name="soundExplode" type="xs:string" />
      <xs:element minOccurs="0" name="soundImpactAnticipate" type="xs:string" />
      <xs:element minOccurs="0" name="soundAmbient" type="xs:string" />
      <xs:element minOccurs="0" name="soundImpact" type="xs:string" />
      <xs:element minOccurs="0" name="explosionRadius" type="xs:float" />
      <xs:element minOccurs="0" name="explosionRadiusDisplayPadding" type="xs:float" />
      <xs:element minOccurs="0" name="explosionDelay" type="xs:int" />
      <xs:element minOccurs="0" name="preExplosionSpawnThingDef" type="xs:string" />
      <xs:element minOccurs="0" name="preExplosionSpawnChance" type="xs:float" />
      <xs:element minOccurs="0" name="preExplosionSpawnThingCount" type="xs:int" />
      <xs:element minOccurs="0" name="postExplosionSpawnThingDef" type="xs:string" />
      <xs:element minOccurs="0" name="postExplosionSpawnThingDefWater" type="xs:string" />
      <xs:element minOccurs="0" name="postExplosionSpawnChance" type="xs:float" />
      <xs:element minOccurs="0" name="postExplosionSpawnThingCount" type="xs:int" />
      <xs:element minOccurs="0" name="postExplosionGasType">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="BlindSmoke" />
            <xs:enumeration value="ToxGas" />
            <xs:enumeration value="RotStink" />
            <xs:enumeration value="Unused" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="applyDamageToExplosionCellsNeighbors" type="xs:boolean" />
      <xs:element minOccurs="0" name="explosionChanceToStartFire" type="xs:float" />
      <xs:element minOccurs="0" name="explosionDamageFalloff" type="xs:boolean" />
      <xs:element minOccurs="0" name="screenShakeFactor" type="xs:float" />
      <xs:element minOccurs="0" name="filth" type="xs:string" />
      <xs:element minOccurs="0" name="filthCount" type="Verse.IntRange" />
      <xs:element minOccurs="0" name="numExtraHitCells" type="xs:int" />
      <xs:element minOccurs="0" name="bulletChanceToStartFire" type="xs:float" />
      <xs:element minOccurs="0" name="bulletFireSizeRange" type="Verse.FloatRange" />
      <xs:element minOccurs="0" name="explosionEffect" type="xs:string" />
      <xs:element minOccurs="0" name="ai_IsIncendiary" type="xs:boolean" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.StuffProperties">
    <xs:all>
      <xs:element minOccurs="0" name="stuffAdjective" type="xs:string" />
      <xs:element minOccurs="0" name="commonality" type="xs:float" />
      <xs:element minOccurs="0" name="categories">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="statOffsets" type="RimWorld.StatModifier" />
      <xs:element minOccurs="0" name="statFactors" type="RimWorld.StatModifier" />
      <xs:element minOccurs="0" name="color" type="UnityEngine.Color" />
      <xs:element minOccurs="0" name="constructEffect" type="xs:string" />
      <xs:element minOccurs="0" name="appearance" type="xs:string" />
      <xs:element minOccurs="0" name="allowColorGenerators" type="xs:boolean" />
      <xs:element minOccurs="0" name="canSuggestUseDefaultStuff" type="xs:boolean" />
      <xs:element minOccurs="0" name="soundImpactStuff" type="xs:string" />
      <xs:element minOccurs="0" name="soundMeleeHitSharp" type="xs:string" />
      <xs:element minOccurs="0" name="soundMeleeHitBlunt" type="xs:string" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.SkyfallerProperties">
    <xs:all>
      <xs:element minOccurs="0" name="hitRoof" type="xs:boolean" />
      <xs:element minOccurs="0" name="ticksToImpactRange" type="Verse.IntRange" />
      <xs:element minOccurs="0" name="ticksToDiscardInReverse" type="Verse.IntRange" />
      <xs:element minOccurs="0" name="reversed" type="xs:boolean" />
      <xs:element minOccurs="0" name="explosionRadius" type="xs:float" />
      <xs:element minOccurs="0" name="explosionDamage" type="xs:string" />
      <xs:element minOccurs="0" name="damageSpawnedThings" type="xs:boolean" />
      <xs:element minOccurs="0" name="explosionDamageFactor" type="xs:float" />
      <xs:element minOccurs="0" name="metalShrapnelCountRange" type="Verse.IntRange" />
      <xs:element minOccurs="0" name="rubbleShrapnelCountRange" type="Verse.IntRange" />
      <xs:element minOccurs="0" name="shrapnelDistanceFactor" type="xs:float" />
      <xs:element minOccurs="0" name="movementType">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Accelerate" />
            <xs:enumeration value="ConstantSpeed" />
            <xs:enumeration value="Decelerate" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="speed" type="xs:float" />
      <xs:element minOccurs="0" name="shadow" type="xs:string" />
      <xs:element minOccurs="0" name="shadowSize" type="UnityEngine.Vector2" />
      <xs:element minOccurs="0" name="cameraShake" type="xs:float" />
      <xs:element minOccurs="0" name="impactSound" type="xs:string" />
      <xs:element minOccurs="0" name="rotateGraphicTowardsDirection" type="xs:boolean" />
      <xs:element minOccurs="0" name="anticipationSound" type="xs:string" />
      <xs:element minOccurs="0" name="floatingSound" type="xs:string" />
      <xs:element minOccurs="0" name="anticipationSoundTicks" type="xs:int" />
      <xs:element minOccurs="0" name="motesPerCell" type="xs:int" />
      <xs:element minOccurs="0" name="moteSpawnTime" type="xs:float" />
      <xs:element minOccurs="0" name="xPositionCurve" type="Verse.SimpleCurve" />
      <xs:element minOccurs="0" name="zPositionCurve" type="Verse.SimpleCurve" />
      <xs:element minOccurs="0" name="angleCurve" type="Verse.SimpleCurve" />
      <xs:element minOccurs="0" name="rotationCurve" type="Verse.SimpleCurve" />
      <xs:element minOccurs="0" name="speedCurve" type="Verse.SimpleCurve" />
      <xs:element minOccurs="0" name="fadeInTicks" type="xs:int" />
      <xs:element minOccurs="0" name="fadeOutTicks" type="xs:int" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.PawnFlyerProperties">
    <xs:all>
      <xs:element minOccurs="0" name="flightDurationMin" type="xs:float" />
      <xs:element minOccurs="0" name="flightSpeed" type="xs:float" />
      <xs:element minOccurs="0" name="shadow" type="xs:string" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.RitualFocusProperties">
    <xs:all>
      <xs:element minOccurs="0" name="spectateDistance" type="Verse.IntRange" />
      <xs:element minOccurs="0" name="allowedSpectateSides">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="None" />
                  <xs:enumeration value="Up" />
                  <xs:enumeration value="Right" />
                  <xs:enumeration value="Down" />
                  <xs:enumeration value="Left" />
                  <xs:enumeration value="Vertical" />
                  <xs:enumeration value="Horizontal" />
                  <xs:enumeration value="All" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="consumable" type="xs:boolean" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="RimWorld.IngredientProperties">
    <xs:all>
      <xs:element minOccurs="0" name="mergeCompatibilityTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.ThingStyleDef">
    <xs:all>
      <xs:element minOccurs="0" name="overrideLabel" type="xs:string" />
      <xs:element minOccurs="0" name="graphicData" type="Verse.GraphicData" />
      <xs:element minOccurs="0" name="uiIconPath" type="xs:string" />
      <xs:element minOccurs="0" name="wornGraphicPath" type="xs:string" />
      <xs:element minOccurs="0" name="color" type="UnityEngine.Color" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.ThinkTreeDef">
    <xs:all>
      <xs:element minOccurs="0" name="thinkRoot" type="Verse.AI.ThinkNode" />
      <xs:element minOccurs="0" name="insertTag" type="xs:string" />
      <xs:element minOccurs="0" name="insertPriority" type="xs:float" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.TipSetDef">
    <xs:all>
      <xs:element minOccurs="0" name="tips">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.ToolCapacityDef">
    <xs:all>
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.TrainabilityDef">
    <xs:all>
      <xs:element minOccurs="0" name="intelligenceOrder" type="xs:int" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.WeatherDef">
    <xs:all>
      <xs:element minOccurs="0" name="durationRange" type="Verse.IntRange" />
      <xs:element minOccurs="0" name="repeatable" type="xs:boolean" />
      <xs:element minOccurs="0" name="isBad" type="xs:boolean" />
      <xs:element minOccurs="0" name="favorability">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="VeryBad" />
            <xs:enumeration value="Bad" />
            <xs:enumeration value="Neutral" />
            <xs:enumeration value="Good" />
            <xs:enumeration value="VeryGood" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="temperatureRange" type="Verse.FloatRange" />
      <xs:element minOccurs="0" name="commonalityRainfallFactor" type="Verse.SimpleCurve" />
      <xs:element minOccurs="0" name="rainRate" type="xs:float" />
      <xs:element minOccurs="0" name="snowRate" type="xs:float" />
      <xs:element minOccurs="0" name="windSpeedFactor" type="xs:float" />
      <xs:element minOccurs="0" name="windSpeedOffset" type="xs:float" />
      <xs:element minOccurs="0" name="moveSpeedMultiplier" type="xs:float" />
      <xs:element minOccurs="0" name="accuracyMultiplier" type="xs:float" />
      <xs:element minOccurs="0" name="perceivePriority" type="xs:float" />
      <xs:element minOccurs="0" name="exposedThought" type="xs:string" />
      <xs:element minOccurs="0" name="ambientSounds">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="eventMakers">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.WeatherEventMaker" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="overlayClasses">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="skyColorsNightMid" type="Verse.SkyColorSet" />
      <xs:element minOccurs="0" name="skyColorsNightEdge" type="Verse.SkyColorSet" />
      <xs:element minOccurs="0" name="skyColorsDay" type="Verse.SkyColorSet" />
      <xs:element minOccurs="0" name="skyColorsDusk" type="Verse.SkyColorSet" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.WeatherEventMaker">
    <xs:all>
      <xs:element minOccurs="0" name="averageInterval" type="xs:float" />
      <xs:element minOccurs="0" name="eventClass" type="xs:string" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.SkyColorSet">
    <xs:all>
      <xs:element minOccurs="0" name="sky" type="UnityEngine.Color" />
      <xs:element minOccurs="0" name="shadow" type="UnityEngine.Color" />
      <xs:element minOccurs="0" name="overlay" type="UnityEngine.Color" />
      <xs:element minOccurs="0" name="saturation" type="xs:float" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.WorkTypeDef">
    <xs:all>
      <xs:element minOccurs="0" name="workTags">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="None" />
                  <xs:enumeration value="ManualDumb" />
                  <xs:enumeration value="ManualSkilled" />
                  <xs:enumeration value="Violent" />
                  <xs:enumeration value="Caring" />
                  <xs:enumeration value="Social" />
                  <xs:enumeration value="Commoner" />
                  <xs:enumeration value="Intellectual" />
                  <xs:enumeration value="Animals" />
                  <xs:enumeration value="Artistic" />
                  <xs:enumeration value="Crafting" />
                  <xs:enumeration value="Cooking" />
                  <xs:enumeration value="Firefighting" />
                  <xs:enumeration value="Cleaning" />
                  <xs:enumeration value="Hauling" />
                  <xs:enumeration value="PlantWork" />
                  <xs:enumeration value="Mining" />
                  <xs:enumeration value="Hunting" />
                  <xs:enumeration value="Constructing" />
                  <xs:enumeration value="Shooting" />
                  <xs:enumeration value="AllWork" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="labelShort" type="xs:string" />
      <xs:element minOccurs="0" name="pawnLabel" type="xs:string" />
      <xs:element minOccurs="0" name="gerundLabel" type="xs:string" />
      <xs:element minOccurs="0" name="verb" type="xs:string" />
      <xs:element minOccurs="0" name="visible" type="xs:boolean" />
      <xs:element minOccurs="0" name="visibleOnlyWithChildrenInColony" type="xs:boolean" />
      <xs:element minOccurs="0" name="naturalPriority" type="xs:int" />
      <xs:element minOccurs="0" name="alwaysStartActive" type="xs:boolean" />
      <xs:element minOccurs="0" name="requireCapableColonist" type="xs:boolean" />
      <xs:element minOccurs="0" name="relevantSkills">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="disabledForSlaves" type="xs:boolean" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.WorldGenStepDef">
    <xs:all>
      <xs:element minOccurs="0" name="order" type="xs:float" />
      <xs:element minOccurs="0" name="worldGenStep" type="Verse.WorldGenStep" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Verse.WorldGenStep">
    <xs:all>
      <xs:element minOccurs="0" name="def" type="xs:string" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="WeaponClassDef">
    <xs:all>
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="WeaponClassPairDef">
    <xs:all>
      <xs:element minOccurs="0" name="first" type="xs:string" />
      <xs:element minOccurs="0" name="second" type="xs:string" />
      <xs:element minOccurs="0" name="defName" type="defName">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="label" type="defLabel">
        <xs:annotation>
          <xs:documentation>A human-readable label used to identify this in game.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="descriptionHyperlinks" type="Verse.DefHyperlink" />
      <xs:element minOccurs="0" name="ignoreConfigErrors" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ignoreIllegalLabelCharacterConfigError" type="xs:boolean" />
      <xs:element minOccurs="0" name="modExtensions">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="Verse.DefModExtension" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
</xs:schema>